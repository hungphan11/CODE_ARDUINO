

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Dec 17 22:35:15 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	functab,global,reloc=256,class=CODE,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  000A                     	;# 
    53  000B                     	;# 
    54  000C                     	;# 
    55  000D                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0013                     	;# 
    63  0014                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001E                     	;# 
    72  001F                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  0086                     	;# 
    76  008C                     	;# 
    77  008D                     	;# 
    78  008E                     	;# 
    79  008F                     	;# 
    80  0090                     	;# 
    81  0092                     	;# 
    82  0093                     	;# 
    83  0094                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  009F                     	;# 
    91  0105                     	;# 
    92  010C                     	;# 
    93  010D                     	;# 
    94  010E                     	;# 
    95  010F                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001E                     	;# 
   125  001F                     	;# 
   126  0081                     	;# 
   127  0085                     	;# 
   128  0086                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  008F                     	;# 
   133  0090                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204                           
   205                           	psect	idataBANK1
   206  07FB                     __pidataBANK1:	
   207                           
   208                           ;initializer for _sync_interval
   209  07FB  3480               	retlw	128
   210  07FC  3451               	retlw	81
   211  07FD  3401               	retlw	1
   212  07FE  3400               	retlw	0
   213                           
   214                           	psect	strings
   215  008F                     __pstrings:	
   216  008F                     stringtab:	
   217  008F                     __stringtab:	
   218  008F                     stringcode:	
   219                           ;	String table - string pointers are 1 byte each
   220                           
   221  008F                     stringdir:	
   222  008F  3000               	movlw	high stringdir
   223  0090  008A               	movwf	10
   224  0091  0804               	movf	4,w
   225  0092  0A84               	incf	4,f
   226  0093  0782               	addwf	2,f
   227  0094                     __stringbase:	
   228  0094  3400               	retlw	0
   229  0095                     __end_of__stringtab:	
   230  0095                     _month_length:	
   231  0095  341F               	retlw	31
   232  0096  341C               	retlw	28
   233  0097  341F               	retlw	31
   234  0098  341E               	retlw	30
   235  0099  341F               	retlw	31
   236  009A  341E               	retlw	30
   237  009B  341F               	retlw	31
   238  009C  341F               	retlw	31
   239  009D  341E               	retlw	30
   240  009E  341F               	retlw	31
   241  009F  341E               	retlw	30
   242  00A0  341F               	retlw	31
   243  00A1                     __end_of_month_length:	
   244  00A1                     _dpowers:	
   245  00A1  3401               	retlw	1
   246  00A2  3400               	retlw	0
   247  00A3  340A               	retlw	10
   248  00A4  3400               	retlw	0
   249  00A5  3464               	retlw	100
   250  00A6  3400               	retlw	0
   251  00A7  34E8               	retlw	232
   252  00A8  3403               	retlw	3
   253  00A9  3410               	retlw	16
   254  00AA  3427               	retlw	39
   255  00AB                     __end_of_dpowers:	
   256  00AB                     __stringdata:	
   257  00AB                     STR_2:	
   258  00AB  3454               	retlw	84	;'T'
   259  00AC  3469               	retlw	105	;'i'
   260  00AD  346D               	retlw	109	;'m'
   261  00AE  3465               	retlw	101	;'e'
   262  00AF  343A               	retlw	58	;':'
   263  00B0  3420               	retlw	32	;' '
   264  00B1  3425               	retlw	37	;'%'
   265  00B2  3430               	retlw	48	;'0'
   266  00B3  3432               	retlw	50	;'2'
   267  00B4  3464               	retlw	100	;'d'
   268  00B5  343A               	retlw	58	;':'
   269  00B6  3425               	retlw	37	;'%'
   270  00B7  3430               	retlw	48	;'0'
   271  00B8  3432               	retlw	50	;'2'
   272  00B9  3464               	retlw	100	;'d'
   273  00BA  343A               	retlw	58	;':'
   274  00BB  3425               	retlw	37	;'%'
   275  00BC  3430               	retlw	48	;'0'
   276  00BD  3432               	retlw	50	;'2'
   277  00BE  3464               	retlw	100	;'d'
   278  00BF  3420               	retlw	32	;' '
   279  00C0  3444               	retlw	68	;'D'
   280  00C1  3461               	retlw	97	;'a'
   281  00C2  3474               	retlw	116	;'t'
   282  00C3  3465               	retlw	101	;'e'
   283  00C4  343A               	retlw	58	;':'
   284  00C5  3420               	retlw	32	;' '
   285  00C6  3425               	retlw	37	;'%'
   286  00C7  3430               	retlw	48	;'0'
   287  00C8  3432               	retlw	50	;'2'
   288  00C9  3464               	retlw	100	;'d'
   289  00CA  342F               	retlw	47	;'/'
   290  00CB  3425               	retlw	37	;'%'
   291  00CC  3430               	retlw	48	;'0'
   292  00CD  3432               	retlw	50	;'2'
   293  00CE  3464               	retlw	100	;'d'
   294  00CF  342F               	retlw	47	;'/'
   295  00D0  3425               	retlw	37	;'%'
   296  00D1  3430               	retlw	48	;'0'
   297  00D2  3432               	retlw	50	;'2'
   298  00D3  3464               	retlw	100	;'d'
   299  00D4  340D               	retlw	13
   300  00D5  340A               	retlw	10
   301  00D6  3400               	retlw	0
   302  00D7                     STR_1:	
   303  00D7  3454               	retlw	84	;'T'
   304  00D8  3469               	retlw	105	;'i'
   305  00D9  346D               	retlw	109	;'m'
   306  00DA  3465               	retlw	101	;'e'
   307  00DB  344C               	retlw	76	;'L'
   308  00DC  3469               	retlw	105	;'i'
   309  00DD  3462               	retlw	98	;'b'
   310  00DE  3420               	retlw	32	;' '
   311  00DF  3454               	retlw	84	;'T'
   312  00E0  3465               	retlw	101	;'e'
   313  00E1  3473               	retlw	115	;'s'
   314  00E2  3474               	retlw	116	;'t'
   315  00E3  3420               	retlw	32	;' '
   316  00E4  3450               	retlw	80	;'P'
   317  00E5  3472               	retlw	114	;'r'
   318  00E6  346F               	retlw	111	;'o'
   319  00E7  3467               	retlw	103	;'g'
   320  00E8  3472               	retlw	114	;'r'
   321  00E9  3461               	retlw	97	;'a'
   322  00EA  346D               	retlw	109	;'m'
   323  00EB  340D               	retlw	13
   324  00EC  340A               	retlw	10
   325  00ED  3400               	retlw	0
   326  00EE                     __end_of__stringdata:	
   327                           
   328                           ; #config settings
   329  0000                     
   330                           	psect	nvCOMMON
   331  0076                     __pnvCOMMON:	
   332  0076                     _sys_time:	
   333  0076                     	ds	4
   334                           
   335                           	psect	nvBANK0
   336  0062                     __pnvBANK0:	
   337  0062                     _tstatus:	
   338  0062                     	ds	1
   339                           
   340                           	psect	nvBANK1
   341  00C4                     __pnvBANK1:	
   342  00C4                     _initialt:	
   343  00C4                     	ds	4
   344  00C8                     _last_update:	
   345  00C8                     	ds	4
   346  00CC                     _sync_next:	
   347  00CC                     	ds	4
   348  000B                     _INTCONbits	set	11
   349  000C                     _PIR1bits	set	12
   350  0018                     _RCSTAbits	set	24
   351  0010                     _T1CON	set	16
   352  000F                     _TMR1H	set	15
   353  000E                     _TMR1L	set	14
   354  0019                     _TXREG	set	25
   355  009B                     _ANSEL	set	155
   356  008C                     _PIE1bits	set	140
   357  0085                     _TRISA	set	133
   358  0086                     _TRISB	set	134
   359  0098                     _TXSTA	set	152
   360                           
   361                           	psect	cinit
   362  0013                     start_initialization:	
   363  0013                     __initialization:	
   364                           
   365                           ; Clear objects allocated to BANK0
   366  0013  01E3               	clrf	__pbssBANK0& (0+127)
   367                           
   368                           ; Clear objects allocated to BANK1
   369  0014  1383               	bcf	3,7	;select IRP bank0
   370  0015  30A0               	movlw	low __pbssBANK1
   371  0016  0084               	movwf	4
   372  0017  30B5               	movlw	low (__pbssBANK1+21)
   373  0018  158A  2477  118A   	fcall	clear_ram0
   374                           
   375                           ; Initialize objects allocated to BANK1
   376  001B  1683               	bsf	3,5	;RP0=1, select bank1
   377  001C  1303               	bcf	3,6	;RP1=0, select bank1
   378  001D  118A  27FB  118A   	fcall	__pidataBANK1	;fetch initializer
   379  0020  00D0               	movwf	__pdataBANK1& (0+127)
   380  0021  118A  27FC  118A   	fcall	__pidataBANK1+1	;fetch initializer
   381  0024  00D1               	movwf	(__pdataBANK1+1)& (0+127)
   382  0025  118A  27FD  118A   	fcall	__pidataBANK1+2	;fetch initializer
   383  0028  00D2               	movwf	(__pdataBANK1+2)& (0+127)
   384  0029  118A  27FE         	fcall	__pidataBANK1+3	;fetch initializer
   385  002B  00D3               	movwf	(__pdataBANK1+3)& (0+127)
   386  002C                     end_of_initialization:	
   387                           ;End of C runtime variable initialization code
   388                           
   389  002C                     __end_of__initialization:	
   390  002C  0183               	clrf	3
   391  002D  118A  2E19         	ljmp	_main	;jump to C main() function
   392                           
   393                           	psect	bssBANK0
   394  0063                     __pbssBANK0:	
   395  0063                     _time_provider_callback:	
   396  0063                     	ds	1
   397                           
   398                           	psect	bssBANK1
   399  00A0                     __pbssBANK1:	
   400  00A0                     _tickbuffer:	
   401  00A0                     	ds	6
   402  00A6                     _tcache:	
   403  00A6                     	ds	4
   404  00AA                     _tickcnt:	
   405  00AA                     	ds	4
   406  00AE                     _telements:	
   407  00AE                     	ds	7
   408                           
   409                           	psect	dataBANK1
   410  00D0                     __pdataBANK1:	
   411  00D0                     _sync_interval:	
   412  00D0                     	ds	4
   413                           
   414                           	psect	clrtext
   415  0C77                     clear_ram0:	
   416                           ;	Called with FSR containing the base address, and
   417                           ;	W with the last address+1
   418                           
   419  0C77  0064               	clrwdt	;clear the watchdog before getting into this loop
   420  0C78                     clrloop0:	
   421  0C78  0180               	clrf	0	;clear RAM location pointed to by FSR
   422  0C79  0A84               	incf	4,f	;increment pointer
   423  0C7A  0604               	xorwf	4,w	;XOR with final address
   424  0C7B  1903               	btfsc	3,2	;have we reached the end yet?
   425  0C7C  3400               	retlw	0	;all done for this memory range, return
   426  0C7D  0604               	xorwf	4,w	;XOR again to restore value
   427  0C7E  2C78               	goto	clrloop0	;do the next byte
   428                           
   429                           	psect	cstackBANK1
   430  00B5                     __pcstackBANK1:	
   431  00B5                     main@now:	
   432                           
   433                           ; 4 bytes @ 0x0
   434  00B5                     	ds	4
   435  00B9                     main@last:	
   436                           
   437                           ; 4 bytes @ 0x4
   438  00B9                     	ds	4
   439  00BD                     main@tinfo:	
   440                           
   441                           ; 7 bytes @ 0x8
   442  00BD                     	ds	7
   443                           
   444                           	psect	cstackCOMMON
   445  0070                     __pcstackCOMMON:	
   446  0070                     ?_tick_init:	
   447  0070                     ?_tick_update:	
   448                           ; 0 bytes @ 0x0
   449                           
   450  0070                     ??_tick_update:	
   451                           ; 0 bytes @ 0x0
   452                           
   453  0070                     ?_tick_read_internal:	
   454                           ; 0 bytes @ 0x0
   455                           
   456  0070                     ?_isdigit:	
   457                           ; 0 bytes @ 0x0
   458                           
   459  0070                     ?_main:	
   460                           ; 1 bit 
   461                           
   462  0070                     ?_putch:	
   463                           ; 0 bytes @ 0x0
   464                           
   465  0070                     ?_isr:	
   466                           ; 0 bytes @ 0x0
   467                           
   468  0070                     ??_isr:	
   469                           ; 0 bytes @ 0x0
   470                           
   471  0070                     ?_time_minute:	
   472                           ; 0 bytes @ 0x0
   473                           
   474                           
   475                           ; 1 bytes @ 0x0
   476  0070                     	ds	4
   477  0074                     ??_tick_init:	
   478  0074                     ??_time_provider:	
   479                           ; 0 bytes @ 0x4
   480                           
   481  0074                     ??_tick_read_internal:	
   482                           ; 0 bytes @ 0x4
   483                           
   484  0074                     ??_isdigit:	
   485                           ; 0 bytes @ 0x4
   486                           
   487  0074                     ??_putch:	
   488                           ; 0 bytes @ 0x4
   489                           
   490  0074                     ??___wmul:	
   491                           ; 0 bytes @ 0x4
   492                           
   493  0074                     ??___lmul:	
   494                           ; 0 bytes @ 0x4
   495                           
   496  0074                     ??___lldiv:	
   497                           ; 0 bytes @ 0x4
   498                           
   499  0074                     ??___llmod:	
   500                           ; 0 bytes @ 0x4
   501                           
   502  0074                     ??___lwdiv:	
   503                           ; 0 bytes @ 0x4
   504                           
   505  0074                     putch@data:	
   506                           ; 0 bytes @ 0x4
   507                           
   508  0074                     _isdigit$598:	
   509                           ; 1 bytes @ 0x4
   510                           
   511  0074                     ___wmul@product:	
   512                           ; 1 bytes @ 0x4
   513                           
   514                           
   515                           ; 2 bytes @ 0x4
   516  0074                     	ds	1
   517  0075                     ??_time_set_provider:	
   518  0075                     ??_tick_get:	
   519                           ; 0 bytes @ 0x5
   520                           
   521  0075                     ??___lwmod:	
   522                           ; 0 bytes @ 0x5
   523                           
   524  0075                     isdigit@c:	
   525                           ; 0 bytes @ 0x5
   526                           
   527  0075                     ___llmod@counter:	
   528                           ; 1 bytes @ 0x5
   529                           
   530                           
   531                           ; 1 bytes @ 0x5
   532  0075                     	ds	1
   533  0076                     ??_time_minute:	
   534  0076                     ??_time_minute_t:	
   535                           ; 0 bytes @ 0x6
   536                           
   537                           
   538                           	psect	cstackBANK0
   539  0020                     __pcstackBANK0:	
   540                           ; 0 bytes @ 0x6
   541                           
   542  0020                     ?___wmul:	
   543  0020                     ?___lwdiv:	
   544                           ; 2 bytes @ 0x0
   545                           
   546  0020                     ?_time_provider:	
   547                           ; 2 bytes @ 0x0
   548                           
   549  0020                     ?_tick_get:	
   550                           ; 4 bytes @ 0x0
   551                           
   552  0020                     ?___lmul:	
   553                           ; 4 bytes @ 0x0
   554                           
   555  0020                     ?___lldiv:	
   556                           ; 4 bytes @ 0x0
   557                           
   558  0020                     ?___llmod:	
   559                           ; 4 bytes @ 0x0
   560                           
   561  0020                     ___wmul@multiplier:	
   562                           ; 4 bytes @ 0x0
   563                           
   564  0020                     ___lwdiv@divisor:	
   565                           ; 2 bytes @ 0x0
   566                           
   567  0020                     ___lmul@multiplier:	
   568                           ; 2 bytes @ 0x0
   569                           
   570  0020                     ___lldiv@divisor:	
   571                           ; 4 bytes @ 0x0
   572                           
   573  0020                     ___llmod@divisor:	
   574                           ; 4 bytes @ 0x0
   575                           
   576                           
   577                           ; 4 bytes @ 0x0
   578  0020                     	ds	2
   579  0022                     ___wmul@multiplicand:	
   580  0022                     ___lwdiv@dividend:	
   581                           ; 2 bytes @ 0x2
   582                           
   583                           
   584                           ; 2 bytes @ 0x2
   585  0022                     	ds	2
   586  0024                     ?_time_set:	
   587  0024                     ___lwdiv@counter:	
   588                           ; 0 bytes @ 0x4
   589                           
   590  0024                     time_set@now:	
   591                           ; 1 bytes @ 0x4
   592                           
   593  0024                     ___lmul@multiplicand:	
   594                           ; 4 bytes @ 0x4
   595                           
   596  0024                     ___lldiv@dividend:	
   597                           ; 4 bytes @ 0x4
   598                           
   599  0024                     ___llmod@dividend:	
   600                           ; 4 bytes @ 0x4
   601                           
   602                           
   603                           ; 4 bytes @ 0x4
   604  0024                     	ds	1
   605  0025                     ___lwdiv@quotient:	
   606                           
   607                           ; 2 bytes @ 0x5
   608  0025                     	ds	2
   609  0027                     ?___lwmod:	
   610  0027                     ___lwmod@divisor:	
   611                           ; 2 bytes @ 0x7
   612                           
   613                           
   614                           ; 2 bytes @ 0x7
   615  0027                     	ds	1
   616  0028                     ??_time_set:	
   617  0028                     ___lmul@product:	
   618                           ; 0 bytes @ 0x8
   619                           
   620  0028                     ___lldiv@quotient:	
   621                           ; 4 bytes @ 0x8
   622                           
   623                           
   624                           ; 4 bytes @ 0x8
   625  0028                     	ds	1
   626  0029                     ___lwmod@dividend:	
   627                           
   628                           ; 2 bytes @ 0x9
   629  0029                     	ds	2
   630  002B                     ___lwmod@counter:	
   631                           
   632                           ; 1 bytes @ 0xB
   633  002B                     	ds	1
   634  002C                     ?_printf:	
   635  002C                     ?_time_is_leap:	
   636                           ; 2 bytes @ 0xC
   637                           
   638  002C                     ?_time_get:	
   639                           ; 2 bytes @ 0xC
   640                           
   641  002C                     ___lldiv@counter:	
   642                           ; 4 bytes @ 0xC
   643                           
   644  002C                     time_is_leap@year:	
   645                           ; 1 bytes @ 0xC
   646                           
   647                           
   648                           ; 2 bytes @ 0xC
   649  002C                     	ds	2
   650  002E                     ??_time_is_leap:	
   651                           
   652                           ; 0 bytes @ 0xE
   653  002E                     	ds	2
   654  0030                     ??_time_get:	
   655  0030                     _time_is_leap$218:	
   656                           ; 0 bytes @ 0x10
   657                           
   658                           
   659                           ; 1 bytes @ 0x10
   660  0030                     	ds	1
   661  0031                     ?_time_break:	
   662  0031                     ?_time_make:	
   663                           ; 0 bytes @ 0x11
   664                           
   665  0031                     time_break@timeinput:	
   666                           ; 4 bytes @ 0x11
   667                           
   668                           
   669                           ; 4 bytes @ 0x11
   670  0031                     	ds	3
   671  0034                     time_get@now:	
   672                           
   673                           ; 4 bytes @ 0x14
   674  0034                     	ds	1
   675  0035                     ??_time_make:	
   676  0035                     time_break@timeinfo:	
   677                           ; 0 bytes @ 0x15
   678                           
   679                           
   680                           ; 1 bytes @ 0x15
   681  0035                     	ds	1
   682  0036                     ??_time_break:	
   683                           
   684                           ; 0 bytes @ 0x16
   685  0036                     	ds	2
   686  0038                     ?_time_set_provider:	
   687  0038                     ??_printf:	
   688                           ; 0 bytes @ 0x18
   689                           
   690  0038                     time_set_provider@timespan:	
   691                           ; 0 bytes @ 0x18
   692                           
   693                           
   694                           ; 4 bytes @ 0x18
   695  0038                     	ds	1
   696  0039                     time_make@tstamp:	
   697                           
   698                           ; 4 bytes @ 0x19
   699  0039                     	ds	2
   700  003B                     printf@ap:	
   701                           
   702                           ; 1 bytes @ 0x1B
   703  003B                     	ds	1
   704  003C                     time_set_provider@callback:	
   705  003C                     printf@prec:	
   706                           ; 1 bytes @ 0x1C
   707                           
   708                           
   709                           ; 1 bytes @ 0x1C
   710  003C                     	ds	1
   711  003D                     time_make@i:	
   712  003D                     printf@_val:	
   713                           ; 2 bytes @ 0x1D
   714                           
   715                           
   716                           ; 4 bytes @ 0x1D
   717  003D                     	ds	1
   718  003E                     _time_break$282:	
   719                           
   720                           ; 2 bytes @ 0x1E
   721  003E                     	ds	1
   722  003F                     time_make@timeinfo:	
   723                           
   724                           ; 1 bytes @ 0x1F
   725  003F                     	ds	1
   726  0040                     _time_break$283:	
   727                           
   728                           ; 2 bytes @ 0x20
   729  0040                     	ds	1
   730  0041                     printf@flag:	
   731                           
   732                           ; 1 bytes @ 0x21
   733  0041                     	ds	1
   734  0042                     printf@f:	
   735  0042                     time_break@days:	
   736                           ; 1 bytes @ 0x22
   737                           
   738                           
   739                           ; 4 bytes @ 0x22
   740  0042                     	ds	1
   741  0043                     printf@width:	
   742                           
   743                           ; 2 bytes @ 0x23
   744  0043                     	ds	2
   745  0045                     printf@c:	
   746                           
   747                           ; 1 bytes @ 0x25
   748  0045                     	ds	1
   749  0046                     time_break@monthLength:	
   750                           
   751                           ; 1 bytes @ 0x26
   752  0046                     	ds	1
   753  0047                     time_break@year:	
   754                           
   755                           ; 1 bytes @ 0x27
   756  0047                     	ds	1
   757  0048                     time_break@month:	
   758                           
   759                           ; 1 bytes @ 0x28
   760  0048                     	ds	1
   761  0049                     time_break@xTime:	
   762                           
   763                           ; 4 bytes @ 0x29
   764  0049                     	ds	4
   765  004D                     ?_time_update:	
   766  004D                     time_update@time:	
   767                           ; 0 bytes @ 0x2D
   768                           
   769                           
   770                           ; 4 bytes @ 0x2D
   771  004D                     	ds	4
   772  0051                     ??_time_update:	
   773                           
   774                           ; 0 bytes @ 0x31
   775  0051                     	ds	1
   776  0052                     ?_time_minute_t:	
   777  0052                     time_minute_t@time:	
   778                           ; 1 bytes @ 0x32
   779                           
   780                           
   781                           ; 4 bytes @ 0x32
   782  0052                     	ds	4
   783  0056                     ??_main:	
   784                           
   785                           ; 0 bytes @ 0x36
   786  0056                     	ds	12
   787                           
   788                           	psect	maintext
   789  0619                     __pmaintext:	
   790 ;;
   791 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
   792 ;;
   793 ;; *************** function _main *****************
   794 ;; Defined at:
   795 ;;		line 39 in file "main.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;  tinfo           7    8[BANK1 ] struct tm_t
   800 ;;  last            4    4[BANK1 ] unsigned long 
   801 ;;  now             4    0[BANK1 ] unsigned long 
   802 ;; Return value:  Size  Location     Type
   803 ;;		None               void
   804 ;; Registers used:
   805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 17F/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   811 ;;      Params:         0       0       0       0       0
   812 ;;      Locals:         0       0      15       0       0
   813 ;;      Temps:          0      12       0       0       0
   814 ;;      Totals:         0      12      15       0       0
   815 ;;Total ram usage:       27 bytes
   816 ;; Hardware stack levels required when called:    8
   817 ;; This function calls:
   818 ;;		_printf
   819 ;;		_tick_get
   820 ;;		_tick_init
   821 ;;		_time_break
   822 ;;		_time_get
   823 ;;		_time_make
   824 ;;		_time_minute
   825 ;;		_time_set
   826 ;;		_time_set_provider
   827 ;; This function is called by:
   828 ;;		Startup code after reset
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           
   833                           ;psect for function _main
   834  0619                     _main:	
   835                           
   836                           ;main.c: 41: ANSEL = 0x00;
   837                           
   838                           ;incstack = 0
   839                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   840  0619  1683               	bsf	3,5	;RP0=1, select bank1
   841  061A  1303               	bcf	3,6	;RP1=0, select bank1
   842  061B  019B               	clrf	27	;volatile
   843                           
   844                           ;main.c: 42: TRISA = 0xFF;
   845  061C  30FF               	movlw	255
   846  061D  0085               	movwf	5	;volatile
   847                           
   848                           ;main.c: 43: TRISB = 0b00000100;
   849  061E  3004               	movlw	4
   850  061F  0086               	movwf	6	;volatile
   851                           
   852                           ;main.c: 46: struct tm_t tinfo;
   853                           ;main.c: 49: time_t now;
   854                           ;main.c: 52: uint32_t last = 0;
   855  0620  3000               	movlw	0
   856  0621  00BC               	movwf	(main@last+3)^(0+128)
   857  0622  3000               	movlw	0
   858  0623  00BB               	movwf	(main@last+2)^(0+128)
   859  0624  3000               	movlw	0
   860  0625  00BA               	movwf	(main@last+1)^(0+128)
   861  0626  3000               	movlw	0
   862  0627  00B9               	movwf	main@last^(0+128)
   863                           
   864                           ;main.c: 55: tinfo.tm_year = 14;
   865  0628  300E               	movlw	14
   866  0629  1283               	bcf	3,5	;RP0=0, select bank0
   867  062A  1303               	bcf	3,6	;RP1=0, select bank0
   868  062B  00D6               	movwf	??_main
   869  062C  0856               	movf	??_main,w
   870  062D  1683               	bsf	3,5	;RP0=1, select bank1
   871  062E  1303               	bcf	3,6	;RP1=0, select bank1
   872  062F  00C3               	movwf	(main@tinfo^(0+128)+6)
   873                           
   874                           ;main.c: 56: tinfo.tm_mon = 1;
   875  0630  01C2               	clrf	(main@tinfo^(0+128)+5)
   876  0631  0AC2               	incf	(main@tinfo^(0+128)+5),f
   877                           
   878                           ;main.c: 57: tinfo.tm_mday = 1;
   879  0632  01C1               	clrf	(main@tinfo^(0+128)+4)
   880  0633  0AC1               	incf	(main@tinfo^(0+128)+4),f
   881                           
   882                           ;main.c: 58: tinfo.tm_hour = 13;
   883  0634  300D               	movlw	13
   884  0635  1283               	bcf	3,5	;RP0=0, select bank0
   885  0636  1303               	bcf	3,6	;RP1=0, select bank0
   886  0637  00D6               	movwf	??_main
   887  0638  0856               	movf	??_main,w
   888  0639  1683               	bsf	3,5	;RP0=1, select bank1
   889  063A  1303               	bcf	3,6	;RP1=0, select bank1
   890  063B  00BF               	movwf	(main@tinfo^(0+128)+2)
   891                           
   892                           ;main.c: 59: tinfo.tm_min = 55;
   893  063C  3037               	movlw	55
   894  063D  1283               	bcf	3,5	;RP0=0, select bank0
   895  063E  1303               	bcf	3,6	;RP1=0, select bank0
   896  063F  00D6               	movwf	??_main
   897  0640  0856               	movf	??_main,w
   898  0641  1683               	bsf	3,5	;RP0=1, select bank1
   899  0642  1303               	bcf	3,6	;RP1=0, select bank1
   900  0643  00BE               	movwf	(main@tinfo^(0+128)+1)
   901                           
   902                           ;main.c: 60: tinfo.tm_sec = 30;
   903  0644  301E               	movlw	30
   904  0645  1283               	bcf	3,5	;RP0=0, select bank0
   905  0646  1303               	bcf	3,6	;RP1=0, select bank0
   906  0647  00D6               	movwf	??_main
   907  0648  0856               	movf	??_main,w
   908  0649  1683               	bsf	3,5	;RP0=1, select bank1
   909  064A  1303               	bcf	3,6	;RP1=0, select bank1
   910  064B  00BD               	movwf	main@tinfo^(0+128)
   911                           
   912                           ;main.c: 63: tick_init();
   913  064C  158A  24AA  118A   	fcall	_tick_init
   914                           
   915                           ;main.c: 65: initialt = time_make(&tinfo);
   916  064F  30BD               	movlw	main@tinfo& (0+255)
   917  0650  118A  230E  118A   	fcall	_time_make
   918  0653  1283               	bcf	3,5	;RP0=0, select bank0
   919  0654  1303               	bcf	3,6	;RP1=0, select bank0
   920  0655  0834               	movf	?_time_make+3,w
   921  0656  1683               	bsf	3,5	;RP0=1, select bank1
   922  0657  1303               	bcf	3,6	;RP1=0, select bank1
   923  0658  00C7               	movwf	(_initialt+3)^(0+128)
   924  0659  1283               	bcf	3,5	;RP0=0, select bank0
   925  065A  1303               	bcf	3,6	;RP1=0, select bank0
   926  065B  0833               	movf	?_time_make+2,w
   927  065C  1683               	bsf	3,5	;RP0=1, select bank1
   928  065D  1303               	bcf	3,6	;RP1=0, select bank1
   929  065E  00C6               	movwf	(_initialt+2)^(0+128)
   930  065F  1283               	bcf	3,5	;RP0=0, select bank0
   931  0660  1303               	bcf	3,6	;RP1=0, select bank0
   932  0661  0832               	movf	?_time_make+1,w
   933  0662  1683               	bsf	3,5	;RP0=1, select bank1
   934  0663  1303               	bcf	3,6	;RP1=0, select bank1
   935  0664  00C5               	movwf	(_initialt+1)^(0+128)
   936  0665  1283               	bcf	3,5	;RP0=0, select bank0
   937  0666  1303               	bcf	3,6	;RP1=0, select bank0
   938  0667  0831               	movf	?_time_make,w
   939  0668  1683               	bsf	3,5	;RP0=1, select bank1
   940  0669  1303               	bcf	3,6	;RP1=0, select bank1
   941  066A  00C4               	movwf	_initialt^(0+128)
   942                           
   943                           ;main.c: 67: time_set(initialt);
   944  066B  0847               	movf	(_initialt+3)^(0+128),w
   945  066C  1283               	bcf	3,5	;RP0=0, select bank0
   946  066D  1303               	bcf	3,6	;RP1=0, select bank0
   947  066E  00A7               	movwf	time_set@now+3
   948  066F  1683               	bsf	3,5	;RP0=1, select bank1
   949  0670  1303               	bcf	3,6	;RP1=0, select bank1
   950  0671  0846               	movf	(_initialt+2)^(0+128),w
   951  0672  1283               	bcf	3,5	;RP0=0, select bank0
   952  0673  1303               	bcf	3,6	;RP1=0, select bank0
   953  0674  00A6               	movwf	time_set@now+2
   954  0675  1683               	bsf	3,5	;RP0=1, select bank1
   955  0676  1303               	bcf	3,6	;RP1=0, select bank1
   956  0677  0845               	movf	(_initialt+1)^(0+128),w
   957  0678  1283               	bcf	3,5	;RP0=0, select bank0
   958  0679  1303               	bcf	3,6	;RP1=0, select bank0
   959  067A  00A5               	movwf	time_set@now+1
   960  067B  1683               	bsf	3,5	;RP0=1, select bank1
   961  067C  1303               	bcf	3,6	;RP1=0, select bank1
   962  067D  0844               	movf	_initialt^(0+128),w
   963  067E  1283               	bcf	3,5	;RP0=0, select bank0
   964  067F  1303               	bcf	3,6	;RP1=0, select bank0
   965  0680  00A4               	movwf	time_set@now
   966  0681  118A  2776  118A   	fcall	_time_set
   967                           
   968                           ;main.c: 69: time_set_provider(&time_provider, (86400UL));
   969  0684  3000               	movlw	0
   970  0685  1283               	bcf	3,5	;RP0=0, select bank0
   971  0686  1303               	bcf	3,6	;RP1=0, select bank0
   972  0687  00BB               	movwf	time_set_provider@timespan+3
   973  0688  3001               	movlw	1
   974  0689  00BA               	movwf	time_set_provider@timespan+2
   975  068A  3051               	movlw	81
   976  068B  00B9               	movwf	time_set_provider@timespan+1
   977  068C  3080               	movlw	128
   978  068D  00B8               	movwf	time_set_provider@timespan
   979  068E  3001               	movlw	(fp__time_provider-fpbase)& (0+255)
   980  068F  158A  25B2  118A   	fcall	_time_set_provider
   981                           
   982                           ;main.c: 71: printf("TimeLib Test Program\r\n");
   983  0692  3043               	movlw	(STR_1-__stringbase)& (0+255)
   984  0693                     L1:	
   985  0693  118A  24A4  118A   	fcall	_printf
   986  0696                     l2297:	
   987                           ;main.c: 73: for (;;) {
   988                           
   989                           
   990                           ;main.c: 75: if (tick_get() - last > ((unsigned long long)((1000000 + 128ull)/8ull))) {
   991  0696  1683               	bsf	3,5	;RP0=1, select bank1
   992  0697  1303               	bcf	3,6	;RP1=0, select bank1
   993  0698  0939               	comf	main@last^(0+128),w
   994  0699  1283               	bcf	3,5	;RP0=0, select bank0
   995  069A  1303               	bcf	3,6	;RP1=0, select bank0
   996  069B  00D6               	movwf	??_main
   997  069C  1683               	bsf	3,5	;RP0=1, select bank1
   998  069D  1303               	bcf	3,6	;RP1=0, select bank1
   999  069E  093A               	comf	(main@last+1)^(0+128),w
  1000  069F  1283               	bcf	3,5	;RP0=0, select bank0
  1001  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1002  06A1  00D7               	movwf	??_main+1
  1003  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  1004  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  1005  06A4  093B               	comf	(main@last+2)^(0+128),w
  1006  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  1007  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  1008  06A7  00D8               	movwf	??_main+2
  1009  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  1010  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  1011  06AA  093C               	comf	(main@last+3)^(0+128),w
  1012  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1013  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  1014  06AD  00D9               	movwf	??_main+3
  1015  06AE  0AD6               	incf	??_main,f
  1016  06AF  1903               	skipnz
  1017  06B0  0AD7               	incf	??_main+1,f
  1018  06B1  1903               	skipnz
  1019  06B2  0AD8               	incf	??_main+2,f
  1020  06B3  1903               	skipnz
  1021  06B4  0AD9               	incf	??_main+3,f
  1022  06B5  158A  24CA  118A   	fcall	_tick_get
  1023  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  1024  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  1025  06BA  0820               	movf	?_tick_get,w
  1026  06BB  07D6               	addwf	??_main,f
  1027  06BC  0821               	movf	?_tick_get+1,w
  1028  06BD  1803               	skipnc
  1029  06BE  0F21               	incfsz	?_tick_get+1,w
  1030  06BF  2EC1               	goto	u2800
  1031  06C0  2EC2               	goto	u2801
  1032  06C1                     u2800:	
  1033  06C1  07D7               	addwf	??_main+1,f
  1034  06C2                     u2801:	
  1035  06C2  0822               	movf	?_tick_get+2,w
  1036  06C3  1803               	skipnc
  1037  06C4  0F22               	incfsz	?_tick_get+2,w
  1038  06C5  2EC7               	goto	u2802
  1039  06C6  2EC8               	goto	u2803
  1040  06C7                     u2802:	
  1041  06C7  07D8               	addwf	??_main+2,f
  1042  06C8                     u2803:	
  1043  06C8  0823               	movf	?_tick_get+3,w
  1044  06C9  1803               	skipnc
  1045  06CA  0A23               	incf	?_tick_get+3,w
  1046  06CB  07D9               	addwf	??_main+3,f
  1047  06CC  3000               	movlw	0
  1048  06CD  0259               	subwf	??_main+3,w
  1049  06CE  1D03               	skipz
  1050  06CF  2EDA               	goto	u2815
  1051  06D0  3001               	movlw	1
  1052  06D1  0258               	subwf	??_main+2,w
  1053  06D2  1D03               	skipz
  1054  06D3  2EDA               	goto	u2815
  1055  06D4  30E8               	movlw	232
  1056  06D5  0257               	subwf	??_main+1,w
  1057  06D6  1D03               	skipz
  1058  06D7  2EDA               	goto	u2815
  1059  06D8  3059               	movlw	89
  1060  06D9  0256               	subwf	??_main,w
  1061  06DA                     u2815:	
  1062  06DA  1C03               	skipc
  1063  06DB  2E96               	goto	l2297
  1064                           
  1065                           ;main.c: 76: time_minute();
  1066  06DC  118A  20EE  118A   	fcall	_time_minute
  1067                           
  1068                           ;main.c: 77: last = tick_get();
  1069  06DF  158A  24CA  118A   	fcall	_tick_get
  1070  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1071  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1072  06E4  0823               	movf	?_tick_get+3,w
  1073  06E5  1683               	bsf	3,5	;RP0=1, select bank1
  1074  06E6  1303               	bcf	3,6	;RP1=0, select bank1
  1075  06E7  00BC               	movwf	(main@last+3)^(0+128)
  1076  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  1077  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  1078  06EA  0822               	movf	?_tick_get+2,w
  1079  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  1080  06EC  1303               	bcf	3,6	;RP1=0, select bank1
  1081  06ED  00BB               	movwf	(main@last+2)^(0+128)
  1082  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  1083  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  1084  06F0  0821               	movf	?_tick_get+1,w
  1085  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  1086  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  1087  06F3  00BA               	movwf	(main@last+1)^(0+128)
  1088  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1089  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1090  06F6  0820               	movf	?_tick_get,w
  1091  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  1092  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  1093  06F9  00B9               	movwf	main@last^(0+128)
  1094                           
  1095                           ;main.c: 79: now = time_get();
  1096  06FA  158A  2705  118A   	fcall	_time_get
  1097  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1098  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1099  06FF  082F               	movf	?_time_get+3,w
  1100  0700  1683               	bsf	3,5	;RP0=1, select bank1
  1101  0701  1303               	bcf	3,6	;RP1=0, select bank1
  1102  0702  00B8               	movwf	(main@now+3)^(0+128)
  1103  0703  1283               	bcf	3,5	;RP0=0, select bank0
  1104  0704  1303               	bcf	3,6	;RP1=0, select bank0
  1105  0705  082E               	movf	?_time_get+2,w
  1106  0706  1683               	bsf	3,5	;RP0=1, select bank1
  1107  0707  1303               	bcf	3,6	;RP1=0, select bank1
  1108  0708  00B7               	movwf	(main@now+2)^(0+128)
  1109  0709  1283               	bcf	3,5	;RP0=0, select bank0
  1110  070A  1303               	bcf	3,6	;RP1=0, select bank0
  1111  070B  082D               	movf	?_time_get+1,w
  1112  070C  1683               	bsf	3,5	;RP0=1, select bank1
  1113  070D  1303               	bcf	3,6	;RP1=0, select bank1
  1114  070E  00B6               	movwf	(main@now+1)^(0+128)
  1115  070F  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0710  1303               	bcf	3,6	;RP1=0, select bank0
  1117  0711  082C               	movf	?_time_get,w
  1118  0712  1683               	bsf	3,5	;RP0=1, select bank1
  1119  0713  1303               	bcf	3,6	;RP1=0, select bank1
  1120  0714  00B5               	movwf	main@now^(0+128)
  1121                           
  1122                           ;main.c: 81: time_break(now, &tinfo);
  1123  0715  0838               	movf	(main@now+3)^(0+128),w
  1124  0716  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0717  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0718  00B4               	movwf	time_break@timeinput+3
  1127  0719  1683               	bsf	3,5	;RP0=1, select bank1
  1128  071A  1303               	bcf	3,6	;RP1=0, select bank1
  1129  071B  0837               	movf	(main@now+2)^(0+128),w
  1130  071C  1283               	bcf	3,5	;RP0=0, select bank0
  1131  071D  1303               	bcf	3,6	;RP1=0, select bank0
  1132  071E  00B3               	movwf	time_break@timeinput+2
  1133  071F  1683               	bsf	3,5	;RP0=1, select bank1
  1134  0720  1303               	bcf	3,6	;RP1=0, select bank1
  1135  0721  0836               	movf	(main@now+1)^(0+128),w
  1136  0722  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0723  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0724  00B2               	movwf	time_break@timeinput+1
  1139  0725  1683               	bsf	3,5	;RP0=1, select bank1
  1140  0726  1303               	bcf	3,6	;RP1=0, select bank1
  1141  0727  0835               	movf	main@now^(0+128),w
  1142  0728  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0729  1303               	bcf	3,6	;RP1=0, select bank0
  1144  072A  00B1               	movwf	time_break@timeinput
  1145  072B  30BD               	movlw	main@tinfo& (0+255)
  1146  072C  00D6               	movwf	??_main
  1147  072D  0856               	movf	??_main,w
  1148  072E  00B5               	movwf	time_break@timeinfo
  1149  072F  118A  2108  118A   	fcall	_time_break
  1150                           
  1151                           ;main.c: 83: printf("Time: %02d:%02d:%02d Date: %02d/%02d/%02d\r\n", tinfo.tm_hour, tinf
      +                          o.tm_min, tinfo.tm_sec, tinfo.tm_mday, tinfo.tm_mon, tinfo.tm_year);
  1152  0732  1683               	bsf	3,5	;RP0=1, select bank1
  1153  0733  1303               	bcf	3,6	;RP1=0, select bank1
  1154  0734  083F               	movf	(main@tinfo^(0+128)+2),w
  1155  0735  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0736  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0737  00D6               	movwf	??_main
  1158  0738  01D7               	clrf	??_main+1
  1159  0739  0856               	movf	??_main,w
  1160  073A  00AC               	movwf	?_printf
  1161  073B  0857               	movf	??_main+1,w
  1162  073C  00AD               	movwf	?_printf+1
  1163  073D  1683               	bsf	3,5	;RP0=1, select bank1
  1164  073E  1303               	bcf	3,6	;RP1=0, select bank1
  1165  073F  083E               	movf	(main@tinfo^(0+128)+1),w
  1166  0740  1283               	bcf	3,5	;RP0=0, select bank0
  1167  0741  1303               	bcf	3,6	;RP1=0, select bank0
  1168  0742  00D8               	movwf	??_main+2
  1169  0743  01D9               	clrf	??_main+3
  1170  0744  0858               	movf	??_main+2,w
  1171  0745  00AE               	movwf	?_printf+2
  1172  0746  0859               	movf	??_main+3,w
  1173  0747  00AF               	movwf	?_printf+3
  1174  0748  1683               	bsf	3,5	;RP0=1, select bank1
  1175  0749  1303               	bcf	3,6	;RP1=0, select bank1
  1176  074A  083D               	movf	main@tinfo^(0+128),w
  1177  074B  1283               	bcf	3,5	;RP0=0, select bank0
  1178  074C  1303               	bcf	3,6	;RP1=0, select bank0
  1179  074D  00DA               	movwf	??_main+4
  1180  074E  01DB               	clrf	??_main+5
  1181  074F  085A               	movf	??_main+4,w
  1182  0750  00B0               	movwf	?_printf+4
  1183  0751  085B               	movf	??_main+5,w
  1184  0752  00B1               	movwf	?_printf+5
  1185  0753  1683               	bsf	3,5	;RP0=1, select bank1
  1186  0754  1303               	bcf	3,6	;RP1=0, select bank1
  1187  0755  0841               	movf	(main@tinfo^(0+128)+4),w
  1188  0756  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0757  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0758  00DC               	movwf	??_main+6
  1191  0759  01DD               	clrf	??_main+7
  1192  075A  085C               	movf	??_main+6,w
  1193  075B  00B2               	movwf	?_printf+6
  1194  075C  085D               	movf	??_main+7,w
  1195  075D  00B3               	movwf	?_printf+7
  1196  075E  1683               	bsf	3,5	;RP0=1, select bank1
  1197  075F  1303               	bcf	3,6	;RP1=0, select bank1
  1198  0760  0842               	movf	(main@tinfo^(0+128)+5),w
  1199  0761  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0762  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0763  00DE               	movwf	??_main+8
  1202  0764  01DF               	clrf	??_main+9
  1203  0765  085E               	movf	??_main+8,w
  1204  0766  00B4               	movwf	?_printf+8
  1205  0767  085F               	movf	??_main+9,w
  1206  0768  00B5               	movwf	?_printf+9
  1207  0769  1683               	bsf	3,5	;RP0=1, select bank1
  1208  076A  1303               	bcf	3,6	;RP1=0, select bank1
  1209  076B  0843               	movf	(main@tinfo^(0+128)+6),w
  1210  076C  1283               	bcf	3,5	;RP0=0, select bank0
  1211  076D  1303               	bcf	3,6	;RP1=0, select bank0
  1212  076E  00E0               	movwf	??_main+10
  1213  076F  01E1               	clrf	??_main+11
  1214  0770  0860               	movf	??_main+10,w
  1215  0771  00B6               	movwf	?_printf+10
  1216  0772  0861               	movf	??_main+11,w
  1217  0773  00B7               	movwf	?_printf+11
  1218  0774  3017               	movlw	(STR_2-__stringbase)& (0+255)
  1219  0775  2E93               	goto	L1
  1220  0776                     __end_of_main:	
  1221                           ;main.c: 84: }
  1222                           ;main.c: 85: }
  1223                           
  1224                           
  1225                           	psect	text1
  1226  0DB2                     __ptext1:	
  1227 ;; *************** function _time_set_provider *****************
  1228 ;; Defined at:
  1229 ;;		line 278 in file "../TimeLib.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  callback        1    wreg     PTR FTN()unsigned long 
  1232 ;;		 -> time_provider(4), 
  1233 ;;  timespan        4   24[BANK0 ] unsigned long 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  callback        1   28[BANK0 ] PTR FTN()unsigned long 
  1236 ;;		 -> time_provider(4), 
  1237 ;; Return value:  Size  Location     Type
  1238 ;;		None               void
  1239 ;; Registers used:
  1240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1246 ;;      Params:         0       4       0       0       0
  1247 ;;      Locals:         0       1       0       0       0
  1248 ;;      Temps:          1       0       0       0       0
  1249 ;;      Totals:         1       5       0       0       0
  1250 ;;Total ram usage:        6 bytes
  1251 ;; Hardware stack levels used:    1
  1252 ;; Hardware stack levels required when called:    6
  1253 ;; This function calls:
  1254 ;;		_time_get
  1255 ;; This function is called by:
  1256 ;;		_main
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           
  1261                           ;psect for function _time_set_provider
  1262  0DB2                     _time_set_provider:	
  1263                           
  1264                           ;incstack = 0
  1265                           ; Regs used in _time_set_provider: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1266                           ;time_set_provider@callback stored from wreg
  1267  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  1268  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  1269  0DB4  00BC               	movwf	time_set_provider@callback
  1270                           
  1271                           ;TimeLib.c: 281: if (callback == 0)
  1272  0DB5  08BC               	movf	time_set_provider@callback,f
  1273  0DB6  1903               	btfsc	3,2
  1274  0DB7  0008               	return
  1275                           
  1276                           ;TimeLib.c: 284: time_provider_callback = callback;
  1277                           
  1278                           ;TimeLib.c: 282: return;
  1279  0DB8  083C               	movf	time_set_provider@callback,w
  1280  0DB9  00F5               	movwf	??_time_set_provider
  1281  0DBA  0875               	movf	??_time_set_provider,w
  1282  0DBB  00E3               	movwf	_time_provider_callback
  1283                           
  1284                           ;TimeLib.c: 286: sync_interval = (timespan == 0) ? (86400UL) : timespan;
  1285  0DBC  083B               	movf	time_set_provider@timespan+3,w
  1286  0DBD  043A               	iorwf	time_set_provider@timespan+2,w
  1287  0DBE  0439               	iorwf	time_set_provider@timespan+1,w
  1288  0DBF  0438               	iorwf	time_set_provider@timespan,w
  1289  0DC0  1903               	skipnz
  1290  0DC1  2DD8               	goto	l2129
  1291  0DC2  083B               	movf	time_set_provider@timespan+3,w
  1292  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  1293  0DC4  1303               	bcf	3,6	;RP1=0, select bank1
  1294  0DC5  00D3               	movwf	(_sync_interval+3)^(0+128)
  1295  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0DC8  083A               	movf	time_set_provider@timespan+2,w
  1298  0DC9  1683               	bsf	3,5	;RP0=1, select bank1
  1299  0DCA  1303               	bcf	3,6	;RP1=0, select bank1
  1300  0DCB  00D2               	movwf	(_sync_interval+2)^(0+128)
  1301  0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  1302  0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  1303  0DCE  0839               	movf	time_set_provider@timespan+1,w
  1304  0DCF  1683               	bsf	3,5	;RP0=1, select bank1
  1305  0DD0  1303               	bcf	3,6	;RP1=0, select bank1
  1306  0DD1  00D1               	movwf	(_sync_interval+1)^(0+128)
  1307  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  1309  0DD4  0838               	movf	time_set_provider@timespan,w
  1310  0DD5  1683               	bsf	3,5	;RP0=1, select bank1
  1311  0DD6  1303               	bcf	3,6	;RP1=0, select bank1
  1312  0DD7  2DE1               	goto	L2
  1313  0DD8                     l2129:	
  1314  0DD8  3000               	movlw	0
  1315  0DD9  1683               	bsf	3,5	;RP0=1, select bank1
  1316  0DDA  1303               	bcf	3,6	;RP1=0, select bank1
  1317  0DDB  00D3               	movwf	(_sync_interval+3)^(0+128)
  1318  0DDC  3001               	movlw	1
  1319  0DDD  00D2               	movwf	(_sync_interval+2)^(0+128)
  1320  0DDE  3051               	movlw	81
  1321  0DDF  00D1               	movwf	(_sync_interval+1)^(0+128)
  1322  0DE0  3080               	movlw	128
  1323  0DE1                     L2:	
  1324  0DE1  00D0               	movwf	_sync_interval^(0+128)
  1325                           
  1326                           ;TimeLib.c: 288: sync_next = sys_time;
  1327  0DE2  0879               	movf	_sys_time+3,w
  1328  0DE3  00CF               	movwf	(_sync_next+3)^(0+128)
  1329  0DE4  0878               	movf	_sys_time+2,w
  1330  0DE5  00CE               	movwf	(_sync_next+2)^(0+128)
  1331  0DE6  0877               	movf	_sys_time+1,w
  1332  0DE7  00CD               	movwf	(_sync_next+1)^(0+128)
  1333  0DE8  0876               	movf	_sys_time,w
  1334  0DE9  00CC               	movwf	_sync_next^(0+128)
  1335                           
  1336                           ;TimeLib.c: 290: time_get();
  1337  0DEA  158A  2705         	fcall	_time_get
  1338  0DEC  0008               	return
  1339  0DED                     __end_of_time_set_provider:	
  1340                           
  1341                           	psect	text2
  1342  00EE                     __ptext2:	
  1343 ;; *************** function _time_minute *****************
  1344 ;; Defined at:
  1345 ;;		line 164 in file "../TimeLib.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      unsigned char 
  1352 ;; Registers used:
  1353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359 ;;      Params:         0       0       0       0       0
  1360 ;;      Locals:         0       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0
  1362 ;;      Totals:         0       0       0       0       0
  1363 ;;Total ram usage:        0 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    7
  1366 ;; This function calls:
  1367 ;;		_time_get
  1368 ;;		_time_minute_t
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           
  1375                           ;psect for function _time_minute
  1376  00EE                     _time_minute:	
  1377                           
  1378                           ;TimeLib.c: 166: return time_minute_t(time_get());
  1379                           ;	Return value of _time_minute is never used
  1380                           
  1381                           ;incstack = 0
  1382                           ; Regs used in _time_minute: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1383  00EE  158A  2705  118A   	fcall	_time_get
  1384  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1385  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1386  00F3  082F               	movf	?_time_get+3,w
  1387  00F4  00D5               	movwf	time_minute_t@time+3
  1388  00F5  082E               	movf	?_time_get+2,w
  1389  00F6  00D4               	movwf	time_minute_t@time+2
  1390  00F7  082D               	movf	?_time_get+1,w
  1391  00F8  00D3               	movwf	time_minute_t@time+1
  1392  00F9  082C               	movf	?_time_get,w
  1393  00FA  00D2               	movwf	time_minute_t@time
  1394  00FB  158A  24BA         	fcall	_time_minute_t
  1395  00FD  0008               	return
  1396  00FE                     __end_of_time_minute:	
  1397                           
  1398                           	psect	text3
  1399  0CBA                     __ptext3:	
  1400 ;; *************** function _time_minute_t *****************
  1401 ;; Defined at:
  1402 ;;		line 123 in file "../TimeLib.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  time            4   50[BANK0 ] unsigned long 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      unsigned char 
  1409 ;; Registers used:
  1410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         0       4       0       0       0
  1417 ;;      Locals:         0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0
  1419 ;;      Totals:         0       4       0       0       0
  1420 ;;Total ram usage:        4 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    6
  1423 ;; This function calls:
  1424 ;;		_time_update
  1425 ;; This function is called by:
  1426 ;;		_time_minute
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           
  1431                           ;psect for function _time_minute_t
  1432  0CBA                     _time_minute_t:	
  1433                           
  1434                           ;TimeLib.c: 125: time_update(time);
  1435                           
  1436                           ;incstack = 0
  1437                           ; Regs used in _time_minute_t: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1438  0CBA  1283               	bcf	3,5	;RP0=0, select bank0
  1439  0CBB  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0CBC  0855               	movf	time_minute_t@time+3,w
  1441  0CBD  00D0               	movwf	time_update@time+3
  1442  0CBE  0854               	movf	time_minute_t@time+2,w
  1443  0CBF  00CF               	movwf	time_update@time+2
  1444  0CC0  0853               	movf	time_minute_t@time+1,w
  1445  0CC1  00CE               	movwf	time_update@time+1
  1446  0CC2  0852               	movf	time_minute_t@time,w
  1447  0CC3  00CD               	movwf	time_update@time
  1448  0CC4  158A  266E         	fcall	_time_update
  1449                           
  1450                           ;TimeLib.c: 126: return telements.tm_min;
  1451  0CC6  1683               	bsf	3,5	;RP0=1, select bank1
  1452  0CC7  1303               	bcf	3,6	;RP1=0, select bank1
  1453  0CC8  082F               	movf	(_telements^(0+128)+1),w
  1454  0CC9  0008               	return
  1455  0CCA                     __end_of_time_minute_t:	
  1456                           
  1457                           	psect	text4
  1458  0E6E                     __ptext4:	
  1459 ;; *************** function _time_update *****************
  1460 ;; Defined at:
  1461 ;;		line 66 in file "../TimeLib.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  time            4   45[BANK0 ] unsigned long 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;		None               void
  1468 ;; Registers used:
  1469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1475 ;;      Params:         0       4       0       0       0
  1476 ;;      Locals:         0       0       0       0       0
  1477 ;;      Temps:          0       1       0       0       0
  1478 ;;      Totals:         0       5       0       0       0
  1479 ;;Total ram usage:        5 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    5
  1482 ;; This function calls:
  1483 ;;		_time_break
  1484 ;; This function is called by:
  1485 ;;		_time_minute_t
  1486 ;;		_time_second_t
  1487 ;;		_time_hour_t
  1488 ;;		_time_wday_t
  1489 ;;		_time_day_t
  1490 ;;		_time_month_t
  1491 ;;		_time_year_t
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           
  1496                           ;psect for function _time_update
  1497  0E6E                     _time_update:	
  1498                           
  1499                           ;TimeLib.c: 68: if (tcache != time) {
  1500                           
  1501                           ;incstack = 0
  1502                           ; Regs used in _time_update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1503  0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0E70  0850               	movf	time_update@time+3,w
  1506  0E71  1683               	bsf	3,5	;RP0=1, select bank1
  1507  0E72  1303               	bcf	3,6	;RP1=0, select bank1
  1508  0E73  0629               	xorwf	(_tcache+3)^(0+128),w
  1509  0E74  1D03               	skipz
  1510  0E75  2E8C               	goto	u2245
  1511  0E76  1283               	bcf	3,5	;RP0=0, select bank0
  1512  0E77  1303               	bcf	3,6	;RP1=0, select bank0
  1513  0E78  084F               	movf	time_update@time+2,w
  1514  0E79  1683               	bsf	3,5	;RP0=1, select bank1
  1515  0E7A  1303               	bcf	3,6	;RP1=0, select bank1
  1516  0E7B  0628               	xorwf	(_tcache+2)^(0+128),w
  1517  0E7C  1D03               	skipz
  1518  0E7D  2E8C               	goto	u2245
  1519  0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  1520  0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  1521  0E80  084E               	movf	time_update@time+1,w
  1522  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  1523  0E82  1303               	bcf	3,6	;RP1=0, select bank1
  1524  0E83  0627               	xorwf	(_tcache+1)^(0+128),w
  1525  0E84  1D03               	skipz
  1526  0E85  2E8C               	goto	u2245
  1527  0E86  1283               	bcf	3,5	;RP0=0, select bank0
  1528  0E87  1303               	bcf	3,6	;RP1=0, select bank0
  1529  0E88  084D               	movf	time_update@time,w
  1530  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  1531  0E8A  1303               	bcf	3,6	;RP1=0, select bank1
  1532  0E8B  0626               	xorwf	_tcache^(0+128),w
  1533  0E8C                     u2245:	
  1534  0E8C  1903               	skipnz
  1535  0E8D  0008               	return
  1536                           
  1537                           ;TimeLib.c: 69: tcache = time;
  1538  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  1539  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  1540  0E90  0850               	movf	time_update@time+3,w
  1541  0E91  1683               	bsf	3,5	;RP0=1, select bank1
  1542  0E92  1303               	bcf	3,6	;RP1=0, select bank1
  1543  0E93  00A9               	movwf	(_tcache+3)^(0+128)
  1544  0E94  1283               	bcf	3,5	;RP0=0, select bank0
  1545  0E95  1303               	bcf	3,6	;RP1=0, select bank0
  1546  0E96  084F               	movf	time_update@time+2,w
  1547  0E97  1683               	bsf	3,5	;RP0=1, select bank1
  1548  0E98  1303               	bcf	3,6	;RP1=0, select bank1
  1549  0E99  00A8               	movwf	(_tcache+2)^(0+128)
  1550  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0E9C  084E               	movf	time_update@time+1,w
  1553  0E9D  1683               	bsf	3,5	;RP0=1, select bank1
  1554  0E9E  1303               	bcf	3,6	;RP1=0, select bank1
  1555  0E9F  00A7               	movwf	(_tcache+1)^(0+128)
  1556  0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  1557  0EA1  1303               	bcf	3,6	;RP1=0, select bank0
  1558  0EA2  084D               	movf	time_update@time,w
  1559  0EA3  1683               	bsf	3,5	;RP0=1, select bank1
  1560  0EA4  1303               	bcf	3,6	;RP1=0, select bank1
  1561  0EA5  00A6               	movwf	_tcache^(0+128)
  1562                           
  1563                           ;TimeLib.c: 70: time_break(time, &telements);
  1564  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0EA8  0850               	movf	time_update@time+3,w
  1567  0EA9  00B4               	movwf	time_break@timeinput+3
  1568  0EAA  084F               	movf	time_update@time+2,w
  1569  0EAB  00B3               	movwf	time_break@timeinput+2
  1570  0EAC  084E               	movf	time_update@time+1,w
  1571  0EAD  00B2               	movwf	time_break@timeinput+1
  1572  0EAE  084D               	movf	time_update@time,w
  1573  0EAF  00B1               	movwf	time_break@timeinput
  1574  0EB0  30AE               	movlw	_telements& (0+255)
  1575  0EB1  00D1               	movwf	??_time_update
  1576  0EB2  0851               	movf	??_time_update,w
  1577  0EB3  00B5               	movwf	time_break@timeinfo
  1578  0EB4  118A  2108         	fcall	_time_break
  1579  0EB6  0008               	return
  1580  0EB7                     __end_of_time_update:	
  1581                           
  1582                           	psect	text5
  1583  0108                     __ptext5:	
  1584 ;; *************** function _time_break *****************
  1585 ;; Defined at:
  1586 ;;		line 224 in file "../TimeLib.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  timeinput       4   17[BANK0 ] unsigned long 
  1589 ;;  timeinfo        1   21[BANK0 ] PTR struct tm_t
  1590 ;;		 -> telements(7), main@tinfo(7), 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  xTime           4   41[BANK0 ] unsigned long 
  1593 ;;  days            4   34[BANK0 ] unsigned long 
  1594 ;;  month           1   40[BANK0 ] unsigned char 
  1595 ;;  year            1   39[BANK0 ] unsigned char 
  1596 ;;  monthLength     1   38[BANK0 ] unsigned char 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;		None               void
  1599 ;; Registers used:
  1600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1606 ;;      Params:         0       5       0       0       0
  1607 ;;      Locals:         0      15       0       0       0
  1608 ;;      Temps:          0       8       0       0       0
  1609 ;;      Totals:         0      28       0       0       0
  1610 ;;Total ram usage:       28 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    4
  1613 ;; This function calls:
  1614 ;;		___lldiv
  1615 ;;		___llmod
  1616 ;;		_time_is_leap
  1617 ;; This function is called by:
  1618 ;;		_main
  1619 ;;		_time_update
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           
  1624                           ;psect for function _time_break
  1625  0108                     _time_break:	
  1626                           
  1627                           ;TimeLib.c: 226: uint8_t year;
  1628                           ;TimeLib.c: 227: uint8_t month, monthLength;
  1629                           ;TimeLib.c: 228: uint32_t xTime;
  1630                           ;TimeLib.c: 229: unsigned long days;
  1631                           ;TimeLib.c: 231: xTime = (uint32_t) timeinput;
  1632                           
  1633                           ;incstack = 0
  1634 ;; using string table level
  1635                           ; Regs used in _time_break: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1636  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1637  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1638  010A  0834               	movf	time_break@timeinput+3,w
  1639  010B  00CC               	movwf	time_break@xTime+3
  1640  010C  0833               	movf	time_break@timeinput+2,w
  1641  010D  00CB               	movwf	time_break@xTime+2
  1642  010E  0832               	movf	time_break@timeinput+1,w
  1643  010F  00CA               	movwf	time_break@xTime+1
  1644  0110  0831               	movf	time_break@timeinput,w
  1645  0111  00C9               	movwf	time_break@xTime
  1646                           
  1647                           ;TimeLib.c: 232: timeinfo->tm_sec = xTime % 60;
  1648  0112  3000               	movlw	0
  1649  0113  00A3               	movwf	___llmod@divisor+3
  1650  0114  3000               	movlw	0
  1651  0115  00A2               	movwf	___llmod@divisor+2
  1652  0116  3000               	movlw	0
  1653  0117  00A1               	movwf	___llmod@divisor+1
  1654  0118  303C               	movlw	60
  1655  0119  00A0               	movwf	___llmod@divisor
  1656  011A  084C               	movf	time_break@xTime+3,w
  1657  011B  00A7               	movwf	___llmod@dividend+3
  1658  011C  084B               	movf	time_break@xTime+2,w
  1659  011D  00A6               	movwf	___llmod@dividend+2
  1660  011E  084A               	movf	time_break@xTime+1,w
  1661  011F  00A5               	movwf	___llmod@dividend+1
  1662  0120  0849               	movf	time_break@xTime,w
  1663  0121  00A4               	movwf	___llmod@dividend
  1664  0122  158A  26B7  118A   	fcall	___llmod
  1665  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0127  0820               	movf	?___llmod,w
  1668  0128  00B6               	movwf	??_time_break
  1669  0129  0835               	movf	time_break@timeinfo,w
  1670  012A  0084               	movwf	4
  1671  012B  0836               	movf	??_time_break,w
  1672  012C  1383               	bcf	3,7	;select IRP bank0
  1673  012D  0080               	movwf	0
  1674                           
  1675                           ;TimeLib.c: 234: xTime /= 60;
  1676  012E  3000               	movlw	0
  1677  012F  00A3               	movwf	___lldiv@divisor+3
  1678  0130  3000               	movlw	0
  1679  0131  00A2               	movwf	___lldiv@divisor+2
  1680  0132  3000               	movlw	0
  1681  0133  00A1               	movwf	___lldiv@divisor+1
  1682  0134  303C               	movlw	60
  1683  0135  00A0               	movwf	___lldiv@divisor
  1684  0136  084C               	movf	time_break@xTime+3,w
  1685  0137  00A7               	movwf	___lldiv@dividend+3
  1686  0138  084B               	movf	time_break@xTime+2,w
  1687  0139  00A6               	movwf	___lldiv@dividend+2
  1688  013A  084A               	movf	time_break@xTime+1,w
  1689  013B  00A5               	movwf	___lldiv@dividend+1
  1690  013C  0849               	movf	time_break@xTime,w
  1691  013D  00A4               	movwf	___lldiv@dividend
  1692  013E  118A  202F  118A   	fcall	___lldiv
  1693  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1694  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1695  0143  0823               	movf	?___lldiv+3,w
  1696  0144  00CC               	movwf	time_break@xTime+3
  1697  0145  0822               	movf	?___lldiv+2,w
  1698  0146  00CB               	movwf	time_break@xTime+2
  1699  0147  0821               	movf	?___lldiv+1,w
  1700  0148  00CA               	movwf	time_break@xTime+1
  1701  0149  0820               	movf	?___lldiv,w
  1702  014A  00C9               	movwf	time_break@xTime
  1703                           
  1704                           ;TimeLib.c: 235: timeinfo->tm_min = xTime % 60;
  1705  014B  3000               	movlw	0
  1706  014C  00A3               	movwf	___llmod@divisor+3
  1707  014D  3000               	movlw	0
  1708  014E  00A2               	movwf	___llmod@divisor+2
  1709  014F  3000               	movlw	0
  1710  0150  00A1               	movwf	___llmod@divisor+1
  1711  0151  303C               	movlw	60
  1712  0152  00A0               	movwf	___llmod@divisor
  1713  0153  084C               	movf	time_break@xTime+3,w
  1714  0154  00A7               	movwf	___llmod@dividend+3
  1715  0155  084B               	movf	time_break@xTime+2,w
  1716  0156  00A6               	movwf	___llmod@dividend+2
  1717  0157  084A               	movf	time_break@xTime+1,w
  1718  0158  00A5               	movwf	___llmod@dividend+1
  1719  0159  0849               	movf	time_break@xTime,w
  1720  015A  00A4               	movwf	___llmod@dividend
  1721  015B  158A  26B7  118A   	fcall	___llmod
  1722  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1723  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1724  0160  0820               	movf	?___llmod,w
  1725  0161  00B6               	movwf	??_time_break
  1726  0162  0A35               	incf	time_break@timeinfo,w
  1727  0163  0084               	movwf	4
  1728  0164  0836               	movf	??_time_break,w
  1729  0165  1383               	bcf	3,7	;select IRP bank0
  1730  0166  0080               	movwf	0
  1731                           
  1732                           ;TimeLib.c: 237: xTime /= 60;
  1733  0167  3000               	movlw	0
  1734  0168  00A3               	movwf	___lldiv@divisor+3
  1735  0169  3000               	movlw	0
  1736  016A  00A2               	movwf	___lldiv@divisor+2
  1737  016B  3000               	movlw	0
  1738  016C  00A1               	movwf	___lldiv@divisor+1
  1739  016D  303C               	movlw	60
  1740  016E  00A0               	movwf	___lldiv@divisor
  1741  016F  084C               	movf	time_break@xTime+3,w
  1742  0170  00A7               	movwf	___lldiv@dividend+3
  1743  0171  084B               	movf	time_break@xTime+2,w
  1744  0172  00A6               	movwf	___lldiv@dividend+2
  1745  0173  084A               	movf	time_break@xTime+1,w
  1746  0174  00A5               	movwf	___lldiv@dividend+1
  1747  0175  0849               	movf	time_break@xTime,w
  1748  0176  00A4               	movwf	___lldiv@dividend
  1749  0177  118A  202F  118A   	fcall	___lldiv
  1750  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1751  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1752  017C  0823               	movf	?___lldiv+3,w
  1753  017D  00CC               	movwf	time_break@xTime+3
  1754  017E  0822               	movf	?___lldiv+2,w
  1755  017F  00CB               	movwf	time_break@xTime+2
  1756  0180  0821               	movf	?___lldiv+1,w
  1757  0181  00CA               	movwf	time_break@xTime+1
  1758  0182  0820               	movf	?___lldiv,w
  1759  0183  00C9               	movwf	time_break@xTime
  1760                           
  1761                           ;TimeLib.c: 238: timeinfo->tm_hour = xTime % 24;
  1762  0184  3000               	movlw	0
  1763  0185  00A3               	movwf	___llmod@divisor+3
  1764  0186  3000               	movlw	0
  1765  0187  00A2               	movwf	___llmod@divisor+2
  1766  0188  3000               	movlw	0
  1767  0189  00A1               	movwf	___llmod@divisor+1
  1768  018A  3018               	movlw	24
  1769  018B  00A0               	movwf	___llmod@divisor
  1770  018C  084C               	movf	time_break@xTime+3,w
  1771  018D  00A7               	movwf	___llmod@dividend+3
  1772  018E  084B               	movf	time_break@xTime+2,w
  1773  018F  00A6               	movwf	___llmod@dividend+2
  1774  0190  084A               	movf	time_break@xTime+1,w
  1775  0191  00A5               	movwf	___llmod@dividend+1
  1776  0192  0849               	movf	time_break@xTime,w
  1777  0193  00A4               	movwf	___llmod@dividend
  1778  0194  158A  26B7  118A   	fcall	___llmod
  1779  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1780  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1781  0199  0820               	movf	?___llmod,w
  1782  019A  00B6               	movwf	??_time_break
  1783  019B  0835               	movf	time_break@timeinfo,w
  1784  019C  3E02               	addlw	2
  1785  019D  0084               	movwf	4
  1786  019E  0836               	movf	??_time_break,w
  1787  019F  1383               	bcf	3,7	;select IRP bank0
  1788  01A0  0080               	movwf	0
  1789                           
  1790                           ;TimeLib.c: 240: xTime /= 24;
  1791  01A1  3000               	movlw	0
  1792  01A2  00A3               	movwf	___lldiv@divisor+3
  1793  01A3  3000               	movlw	0
  1794  01A4  00A2               	movwf	___lldiv@divisor+2
  1795  01A5  3000               	movlw	0
  1796  01A6  00A1               	movwf	___lldiv@divisor+1
  1797  01A7  3018               	movlw	24
  1798  01A8  00A0               	movwf	___lldiv@divisor
  1799  01A9  084C               	movf	time_break@xTime+3,w
  1800  01AA  00A7               	movwf	___lldiv@dividend+3
  1801  01AB  084B               	movf	time_break@xTime+2,w
  1802  01AC  00A6               	movwf	___lldiv@dividend+2
  1803  01AD  084A               	movf	time_break@xTime+1,w
  1804  01AE  00A5               	movwf	___lldiv@dividend+1
  1805  01AF  0849               	movf	time_break@xTime,w
  1806  01B0  00A4               	movwf	___lldiv@dividend
  1807  01B1  118A  202F  118A   	fcall	___lldiv
  1808  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1809  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1810  01B6  0823               	movf	?___lldiv+3,w
  1811  01B7  00CC               	movwf	time_break@xTime+3
  1812  01B8  0822               	movf	?___lldiv+2,w
  1813  01B9  00CB               	movwf	time_break@xTime+2
  1814  01BA  0821               	movf	?___lldiv+1,w
  1815  01BB  00CA               	movwf	time_break@xTime+1
  1816  01BC  0820               	movf	?___lldiv,w
  1817  01BD  00C9               	movwf	time_break@xTime
  1818                           
  1819                           ;TimeLib.c: 241: timeinfo->tm_wday = ((xTime + 4) % 7) + 1;
  1820  01BE  3000               	movlw	0
  1821  01BF  00A3               	movwf	___llmod@divisor+3
  1822  01C0  3000               	movlw	0
  1823  01C1  00A2               	movwf	___llmod@divisor+2
  1824  01C2  3000               	movlw	0
  1825  01C3  00A1               	movwf	___llmod@divisor+1
  1826  01C4  3007               	movlw	7
  1827  01C5  00A0               	movwf	___llmod@divisor
  1828  01C6  3004               	movlw	4
  1829  01C7  00B6               	movwf	??_time_break
  1830  01C8  3000               	movlw	0
  1831  01C9  00B7               	movwf	??_time_break+1
  1832  01CA  3000               	movlw	0
  1833  01CB  00B8               	movwf	??_time_break+2
  1834  01CC  3000               	movlw	0
  1835  01CD  00B9               	movwf	??_time_break+3
  1836  01CE  0849               	movf	time_break@xTime,w
  1837  01CF  07B6               	addwf	??_time_break,f
  1838  01D0  084A               	movf	time_break@xTime+1,w
  1839  01D1  1803               	skipnc
  1840  01D2  0F4A               	incfsz	time_break@xTime+1,w
  1841  01D3  29D5               	goto	u2120
  1842  01D4  29D6               	goto	u2121
  1843  01D5                     u2120:	
  1844  01D5  07B7               	addwf	??_time_break+1,f
  1845  01D6                     u2121:	
  1846  01D6  084B               	movf	time_break@xTime+2,w
  1847  01D7  1803               	skipnc
  1848  01D8  0F4B               	incfsz	time_break@xTime+2,w
  1849  01D9  29DB               	goto	u2122
  1850  01DA  29DC               	goto	u2123
  1851  01DB                     u2122:	
  1852  01DB  07B8               	addwf	??_time_break+2,f
  1853  01DC                     u2123:	
  1854  01DC  084C               	movf	time_break@xTime+3,w
  1855  01DD  1803               	skipnc
  1856  01DE  0A4C               	incf	time_break@xTime+3,w
  1857  01DF  07B9               	addwf	??_time_break+3,f
  1858  01E0  0839               	movf	??_time_break+3,w
  1859  01E1  00A7               	movwf	___llmod@dividend+3
  1860  01E2  0838               	movf	??_time_break+2,w
  1861  01E3  00A6               	movwf	___llmod@dividend+2
  1862  01E4  0837               	movf	??_time_break+1,w
  1863  01E5  00A5               	movwf	___llmod@dividend+1
  1864  01E6  0836               	movf	??_time_break,w
  1865  01E7  00A4               	movwf	___llmod@dividend
  1866  01E8  158A  26B7  118A   	fcall	___llmod
  1867  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1868  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1869  01ED  0820               	movf	?___llmod,w
  1870  01EE  3E01               	addlw	1
  1871  01EF  00BA               	movwf	??_time_break+4
  1872  01F0  0835               	movf	time_break@timeinfo,w
  1873  01F1  3E03               	addlw	3
  1874  01F2  0084               	movwf	4
  1875  01F3  083A               	movf	??_time_break+4,w
  1876  01F4  1383               	bcf	3,7	;select IRP bank0
  1877  01F5  0080               	movwf	0
  1878                           
  1879                           ;TimeLib.c: 243: year = 0;
  1880  01F6  01C7               	clrf	time_break@year
  1881                           
  1882                           ;TimeLib.c: 244: days = 0;
  1883  01F7  3000               	movlw	0
  1884  01F8  00C5               	movwf	time_break@days+3
  1885  01F9  3000               	movlw	0
  1886  01FA  00C4               	movwf	time_break@days+2
  1887  01FB  3000               	movlw	0
  1888  01FC  00C3               	movwf	time_break@days+1
  1889  01FD  3000               	movlw	0
  1890  01FE  00C2               	movwf	time_break@days
  1891                           
  1892                           ;TimeLib.c: 245: while ((unsigned) (days += (time_is_leap(1970 + year) ? 366 : 365)) <= 
      +                          xTime)
  1893  01FF  2A04               	goto	l1923
  1894  0200                     l1921:	
  1895                           
  1896                           ;TimeLib.c: 246: year++;
  1897  0200  3001               	movlw	1
  1898  0201  00B6               	movwf	??_time_break
  1899  0202  0836               	movf	??_time_break,w
  1900  0203  07C7               	addwf	time_break@year,f
  1901  0204                     l1923:	
  1902  0204  0847               	movf	time_break@year,w
  1903  0205  3EB2               	addlw	178
  1904  0206  00AC               	movwf	time_is_leap@year
  1905  0207  3007               	movlw	7
  1906  0208  1803               	skipnc
  1907  0209  3008               	movlw	8
  1908  020A  00AD               	movwf	time_is_leap@year+1
  1909  020B  158A  2577  118A   	fcall	_time_is_leap
  1910  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1911  020F  1303               	bcf	3,6	;RP1=0, select bank0
  1912  0210  082D               	movf	?_time_is_leap+1,w
  1913  0211  042C               	iorwf	?_time_is_leap,w
  1914  0212  1D03               	skipz
  1915  0213  2A16               	goto	l1927
  1916  0214  306D               	movlw	109
  1917  0215  2A17               	goto	L3
  1918  0216                     l1927:	
  1919  0216  306E               	movlw	110
  1920  0217                     L3:	
  1921  0217  00BE               	movwf	_time_break$282
  1922  0218  3001               	movlw	1
  1923  0219  00BF               	movwf	_time_break$282+1
  1924  021A  083E               	movf	_time_break$282,w
  1925  021B  00B6               	movwf	??_time_break
  1926  021C  083F               	movf	_time_break$282+1,w
  1927  021D  00B7               	movwf	??_time_break+1
  1928  021E  3000               	movlw	0
  1929  021F  1BB7               	btfsc	??_time_break+1,7
  1930  0220  30FF               	movlw	255
  1931  0221  00B8               	movwf	??_time_break+2
  1932  0222  00B9               	movwf	??_time_break+3
  1933  0223  0836               	movf	??_time_break,w
  1934  0224  07C2               	addwf	time_break@days,f
  1935  0225  0837               	movf	??_time_break+1,w
  1936  0226  1103               	clrz
  1937  0227  1803               	skipnc
  1938  0228  3E01               	addlw	1
  1939  0229  1D03               	btfss	3,2
  1940  022A  07C3               	addwf	time_break@days+1,f
  1941  022B  0838               	movf	??_time_break+2,w
  1942  022C  1103               	clrz
  1943  022D  1803               	skipnc
  1944  022E  3E01               	addlw	1
  1945  022F  1D03               	btfss	3,2
  1946  0230  07C4               	addwf	time_break@days+2,f
  1947  0231  0839               	movf	??_time_break+3,w
  1948  0232  1103               	clrz
  1949  0233  1803               	skipnc
  1950  0234  3E01               	addlw	1
  1951  0235  1D03               	btfss	3,2
  1952  0236  07C5               	addwf	time_break@days+3,f
  1953  0237  0842               	movf	time_break@days,w
  1954  0238  00BA               	movwf	??_time_break+4
  1955  0239  0843               	movf	time_break@days+1,w
  1956  023A  00BB               	movwf	??_time_break+5
  1957  023B  01BC               	clrf	??_time_break+6
  1958  023C  01BD               	clrf	??_time_break+7
  1959  023D  083D               	movf	??_time_break+7,w
  1960  023E  024C               	subwf	time_break@xTime+3,w
  1961  023F  1D03               	skipz
  1962  0240  2A4B               	goto	u2155
  1963  0241  083C               	movf	??_time_break+6,w
  1964  0242  024B               	subwf	time_break@xTime+2,w
  1965  0243  1D03               	skipz
  1966  0244  2A4B               	goto	u2155
  1967  0245  083B               	movf	??_time_break+5,w
  1968  0246  024A               	subwf	time_break@xTime+1,w
  1969  0247  1D03               	skipz
  1970  0248  2A4B               	goto	u2155
  1971  0249  083A               	movf	??_time_break+4,w
  1972  024A  0249               	subwf	time_break@xTime,w
  1973  024B                     u2155:	
  1974  024B  1803               	skipnc
  1975  024C  2A00               	goto	l1921
  1976                           
  1977                           ;TimeLib.c: 248: timeinfo->tm_year = year;
  1978  024D  0847               	movf	time_break@year,w
  1979  024E  00B6               	movwf	??_time_break
  1980  024F  0835               	movf	time_break@timeinfo,w
  1981  0250  3E06               	addlw	6
  1982  0251  0084               	movwf	4
  1983  0252  0836               	movf	??_time_break,w
  1984  0253  1383               	bcf	3,7	;select IRP bank0
  1985  0254  0080               	movwf	0
  1986                           
  1987                           ;TimeLib.c: 250: days -= time_is_leap(1970 + year) ? 366 : 365;
  1988  0255  0847               	movf	time_break@year,w
  1989  0256  3EB2               	addlw	178
  1990  0257  00AC               	movwf	time_is_leap@year
  1991  0258  3007               	movlw	7
  1992  0259  1803               	skipnc
  1993  025A  3008               	movlw	8
  1994  025B  00AD               	movwf	time_is_leap@year+1
  1995  025C  158A  2577  118A   	fcall	_time_is_leap
  1996  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1997  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1998  0261  082D               	movf	?_time_is_leap+1,w
  1999  0262  042C               	iorwf	?_time_is_leap,w
  2000  0263  1D03               	skipz
  2001  0264  2A67               	goto	l1935
  2002  0265  306D               	movlw	109
  2003  0266  2A68               	goto	L4
  2004  0267                     l1935:	
  2005  0267  306E               	movlw	110
  2006  0268                     L4:	
  2007  0268  00C0               	movwf	_time_break$283
  2008  0269  3001               	movlw	1
  2009  026A  00C1               	movwf	_time_break$283+1
  2010  026B  0840               	movf	_time_break$283,w
  2011  026C  00B6               	movwf	??_time_break
  2012  026D  0841               	movf	_time_break$283+1,w
  2013  026E  00B7               	movwf	??_time_break+1
  2014  026F  3000               	movlw	0
  2015  0270  1BB7               	btfsc	??_time_break+1,7
  2016  0271  30FF               	movlw	255
  2017  0272  00B8               	movwf	??_time_break+2
  2018  0273  00B9               	movwf	??_time_break+3
  2019  0274  0836               	movf	??_time_break,w
  2020  0275  02C2               	subwf	time_break@days,f
  2021  0276  0837               	movf	??_time_break+1,w
  2022  0277  1C03               	skipc
  2023  0278  0F37               	incfsz	??_time_break+1,w
  2024  0279  2A7B               	goto	u2175
  2025  027A  2A7C               	goto	u2176
  2026  027B                     u2175:	
  2027  027B  02C3               	subwf	time_break@days+1,f
  2028  027C                     u2176:	
  2029  027C  0838               	movf	??_time_break+2,w
  2030  027D  1C03               	skipc
  2031  027E  0F38               	incfsz	??_time_break+2,w
  2032  027F  2A81               	goto	u2177
  2033  0280  2A82               	goto	u2178
  2034  0281                     u2177:	
  2035  0281  02C4               	subwf	time_break@days+2,f
  2036  0282                     u2178:	
  2037  0282  0839               	movf	??_time_break+3,w
  2038  0283  1C03               	skipc
  2039  0284  0F39               	incfsz	??_time_break+3,w
  2040  0285  2A87               	goto	u2179
  2041  0286  2A88               	goto	u2170
  2042  0287                     u2179:	
  2043  0287  02C5               	subwf	time_break@days+3,f
  2044  0288                     u2170:	
  2045                           
  2046                           ;TimeLib.c: 251: xTime -= days;
  2047  0288  0842               	movf	time_break@days,w
  2048  0289  02C9               	subwf	time_break@xTime,f
  2049  028A  0843               	movf	time_break@days+1,w
  2050  028B  1C03               	skipc
  2051  028C  0F43               	incfsz	time_break@days+1,w
  2052  028D  02CA               	subwf	time_break@xTime+1,f
  2053  028E  0844               	movf	time_break@days+2,w
  2054  028F  1C03               	skipc
  2055  0290  0F44               	incfsz	time_break@days+2,w
  2056  0291  02CB               	subwf	time_break@xTime+2,f
  2057  0292  0845               	movf	time_break@days+3,w
  2058  0293  1C03               	skipc
  2059  0294  0F45               	incfsz	time_break@days+3,w
  2060  0295  02CC               	subwf	time_break@xTime+3,f
  2061                           
  2062                           ;TimeLib.c: 253: days = 0;
  2063  0296  3000               	movlw	0
  2064  0297  00C5               	movwf	time_break@days+3
  2065  0298  3000               	movlw	0
  2066  0299  00C4               	movwf	time_break@days+2
  2067  029A  3000               	movlw	0
  2068  029B  00C3               	movwf	time_break@days+1
  2069  029C  3000               	movlw	0
  2070  029D  00C2               	movwf	time_break@days
  2071                           
  2072                           ;TimeLib.c: 254: month = 0;
  2073  029E  01C8               	clrf	time_break@month
  2074                           
  2075                           ;TimeLib.c: 255: monthLength = 0;
  2076  029F  01C6               	clrf	time_break@monthLength
  2077                           
  2078                           ;TimeLib.c: 256: for (month = 0; month < 12; month++) {
  2079  02A0  01C8               	clrf	time_break@month
  2080  02A1  300C               	movlw	12
  2081  02A2  0248               	subwf	time_break@month,w
  2082  02A3  1803               	btfsc	3,0
  2083  02A4  2AFC               	goto	l1965
  2084  02A5                     l1947:	
  2085                           
  2086                           ;TimeLib.c: 258: if (month == 1) {
  2087  02A5  0848               	movf	time_break@month,w
  2088  02A6  3A01               	xorlw	1
  2089  02A7  1D03               	skipz
  2090  02A8  2ABD               	goto	l1955
  2091                           
  2092                           ;TimeLib.c: 259: if (time_is_leap(1970 + year)) {
  2093  02A9  0847               	movf	time_break@year,w
  2094  02AA  3EB2               	addlw	178
  2095  02AB  00AC               	movwf	time_is_leap@year
  2096  02AC  3007               	movlw	7
  2097  02AD  1803               	skipnc
  2098  02AE  3008               	movlw	8
  2099  02AF  00AD               	movwf	time_is_leap@year+1
  2100  02B0  158A  2577  118A   	fcall	_time_is_leap
  2101  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2102  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  2103  02B5  082D               	movf	?_time_is_leap+1,w
  2104  02B6  042C               	iorwf	?_time_is_leap,w
  2105  02B7  1903               	skipnz
  2106  02B8  2ABB               	goto	l1953
  2107                           
  2108                           ;TimeLib.c: 260: monthLength = 29;
  2109  02B9  301D               	movlw	29
  2110  02BA  2AC3               	goto	L6
  2111  02BB                     l1953:	
  2112                           ;TimeLib.c: 261: } else {
  2113                           
  2114                           
  2115                           ;TimeLib.c: 262: monthLength = 28;
  2116  02BB  301C               	movlw	28
  2117  02BC  2AC3               	goto	L6
  2118  02BD                     l1955:	
  2119                           ;TimeLib.c: 263: }
  2120                           ;TimeLib.c: 264: } else {
  2121                           
  2122                           
  2123                           ;TimeLib.c: 265: monthLength = month_length[month];
  2124  02BD  0848               	movf	time_break@month,w
  2125  02BE  3E01               	addlw	low (_month_length-__stringbase)
  2126  02BF  0084               	movwf	4
  2127  02C0  118A  208F  118A   	fcall	stringdir
  2128  02C3                     L6:	
  2129  02C3  00B6               	movwf	??_time_break
  2130  02C4  0836               	movf	??_time_break,w
  2131  02C5  00C6               	movwf	time_break@monthLength
  2132                           
  2133                           ;TimeLib.c: 266: }
  2134                           ;TimeLib.c: 268: if (xTime >= monthLength) {
  2135  02C6  0846               	movf	time_break@monthLength,w
  2136  02C7  00B6               	movwf	??_time_break
  2137  02C8  01B7               	clrf	??_time_break+1
  2138  02C9  01B8               	clrf	??_time_break+2
  2139  02CA  01B9               	clrf	??_time_break+3
  2140  02CB  0839               	movf	??_time_break+3,w
  2141  02CC  024C               	subwf	time_break@xTime+3,w
  2142  02CD  1D03               	skipz
  2143  02CE  2AD9               	goto	u2215
  2144  02CF  0838               	movf	??_time_break+2,w
  2145  02D0  024B               	subwf	time_break@xTime+2,w
  2146  02D1  1D03               	skipz
  2147  02D2  2AD9               	goto	u2215
  2148  02D3  0837               	movf	??_time_break+1,w
  2149  02D4  024A               	subwf	time_break@xTime+1,w
  2150  02D5  1D03               	skipz
  2151  02D6  2AD9               	goto	u2215
  2152  02D7  0836               	movf	??_time_break,w
  2153  02D8  0249               	subwf	time_break@xTime,w
  2154  02D9                     u2215:	
  2155  02D9  1C03               	skipc
  2156  02DA  2AFC               	goto	l1965
  2157                           
  2158                           ;TimeLib.c: 269: xTime -= monthLength;
  2159  02DB  0846               	movf	time_break@monthLength,w
  2160  02DC  00B6               	movwf	??_time_break
  2161  02DD  01B7               	clrf	??_time_break+1
  2162  02DE  01B8               	clrf	??_time_break+2
  2163  02DF  01B9               	clrf	??_time_break+3
  2164  02E0  0836               	movf	??_time_break,w
  2165  02E1  02C9               	subwf	time_break@xTime,f
  2166  02E2  0837               	movf	??_time_break+1,w
  2167  02E3  1C03               	skipc
  2168  02E4  0F37               	incfsz	??_time_break+1,w
  2169  02E5  2AE7               	goto	u2225
  2170  02E6  2AE8               	goto	u2226
  2171  02E7                     u2225:	
  2172  02E7  02CA               	subwf	time_break@xTime+1,f
  2173  02E8                     u2226:	
  2174  02E8  0838               	movf	??_time_break+2,w
  2175  02E9  1C03               	skipc
  2176  02EA  0F38               	incfsz	??_time_break+2,w
  2177  02EB  2AED               	goto	u2227
  2178  02EC  2AEE               	goto	u2228
  2179  02ED                     u2227:	
  2180  02ED  02CB               	subwf	time_break@xTime+2,f
  2181  02EE                     u2228:	
  2182  02EE  0839               	movf	??_time_break+3,w
  2183  02EF  1C03               	skipc
  2184  02F0  0F39               	incfsz	??_time_break+3,w
  2185  02F1  2AF3               	goto	u2229
  2186  02F2  2AF4               	goto	l1961
  2187  02F3                     u2229:	
  2188  02F3  02CC               	subwf	time_break@xTime+3,f
  2189  02F4                     l1961:	
  2190                           ;TimeLib.c: 271: break;
  2191                           
  2192                           ;TimeLib.c: 270: } else {
  2193                           
  2194  02F4  3001               	movlw	1
  2195  02F5  00B6               	movwf	??_time_break
  2196  02F6  0836               	movf	??_time_break,w
  2197  02F7  07C8               	addwf	time_break@month,f
  2198  02F8  300C               	movlw	12
  2199  02F9  0248               	subwf	time_break@month,w
  2200  02FA  1C03               	skipc
  2201  02FB  2AA5               	goto	l1947
  2202  02FC                     l1965:	
  2203                           
  2204                           ;TimeLib.c: 272: }
  2205                           ;TimeLib.c: 273: }
  2206                           ;TimeLib.c: 274: timeinfo->tm_mon = month + 1;
  2207  02FC  0848               	movf	time_break@month,w
  2208  02FD  3E01               	addlw	1
  2209  02FE  00B6               	movwf	??_time_break
  2210  02FF  0835               	movf	time_break@timeinfo,w
  2211  0300  3E05               	addlw	5
  2212  0301  0084               	movwf	4
  2213  0302  0836               	movf	??_time_break,w
  2214  0303  1383               	bcf	3,7	;select IRP bank0
  2215  0304  0080               	movwf	0
  2216                           
  2217                           ;TimeLib.c: 275: timeinfo->tm_mday = xTime + 1;
  2218  0305  0849               	movf	time_break@xTime,w
  2219  0306  3E01               	addlw	1
  2220  0307  00B6               	movwf	??_time_break
  2221  0308  0835               	movf	time_break@timeinfo,w
  2222  0309  3E04               	addlw	4
  2223  030A  0084               	movwf	4
  2224  030B  0836               	movf	??_time_break,w
  2225  030C  0080               	movwf	0
  2226  030D  0008               	return
  2227  030E                     __end_of_time_break:	
  2228                           
  2229                           	psect	text6
  2230  0EB7                     __ptext6:	
  2231 ;; *************** function ___llmod *****************
  2232 ;; Defined at:
  2233 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  divisor         4    0[BANK0 ] unsigned long 
  2236 ;;  dividend        4    4[BANK0 ] unsigned long 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  counter         1    5[COMMON] unsigned char 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  4    0[BANK0 ] unsigned long 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2, status,0
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2248 ;;      Params:         0       8       0       0       0
  2249 ;;      Locals:         1       0       0       0       0
  2250 ;;      Temps:          1       0       0       0       0
  2251 ;;      Totals:         2       8       0       0       0
  2252 ;;Total ram usage:       10 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:    2
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_time_break
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           
  2263                           ;psect for function ___llmod
  2264  0EB7                     ___llmod:	
  2265                           
  2266                           ;incstack = 0
  2267                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2268  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  2269  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  2270  0EB9  0823               	movf	___llmod@divisor+3,w
  2271  0EBA  0422               	iorwf	___llmod@divisor+2,w
  2272  0EBB  0421               	iorwf	___llmod@divisor+1,w
  2273  0EBC  0420               	iorwf	___llmod@divisor,w
  2274  0EBD  1903               	skipnz
  2275  0EBE  2EFC               	goto	l1891
  2276  0EBF  01F5               	clrf	___llmod@counter
  2277  0EC0  0AF5               	incf	___llmod@counter,f
  2278  0EC1                     l1881:	
  2279  0EC1  1BA3               	btfsc	___llmod@divisor+3,7
  2280  0EC2  2ED1               	goto	l1883
  2281  0EC3  3001               	movlw	1
  2282  0EC4  00F4               	movwf	??___llmod
  2283  0EC5                     u2075:	
  2284  0EC5  1003               	clrc
  2285  0EC6  0DA0               	rlf	___llmod@divisor,f
  2286  0EC7  0DA1               	rlf	___llmod@divisor+1,f
  2287  0EC8  0DA2               	rlf	___llmod@divisor+2,f
  2288  0EC9  0DA3               	rlf	___llmod@divisor+3,f
  2289  0ECA  0BF4               	decfsz	??___llmod,f
  2290  0ECB  2EC5               	goto	u2075
  2291  0ECC  3001               	movlw	1
  2292  0ECD  00F4               	movwf	??___llmod
  2293  0ECE  0874               	movf	??___llmod,w
  2294  0ECF  07F5               	addwf	___llmod@counter,f
  2295  0ED0  2EC1               	goto	l1881
  2296  0ED1                     l1883:	
  2297  0ED1  0823               	movf	___llmod@divisor+3,w
  2298  0ED2  0227               	subwf	___llmod@dividend+3,w
  2299  0ED3  1D03               	skipz
  2300  0ED4  2EDF               	goto	u2095
  2301  0ED5  0822               	movf	___llmod@divisor+2,w
  2302  0ED6  0226               	subwf	___llmod@dividend+2,w
  2303  0ED7  1D03               	skipz
  2304  0ED8  2EDF               	goto	u2095
  2305  0ED9  0821               	movf	___llmod@divisor+1,w
  2306  0EDA  0225               	subwf	___llmod@dividend+1,w
  2307  0EDB  1D03               	skipz
  2308  0EDC  2EDF               	goto	u2095
  2309  0EDD  0820               	movf	___llmod@divisor,w
  2310  0EDE  0224               	subwf	___llmod@dividend,w
  2311  0EDF                     u2095:	
  2312  0EDF  1C03               	skipc
  2313  0EE0  2EEF               	goto	l1887
  2314  0EE1  0820               	movf	___llmod@divisor,w
  2315  0EE2  02A4               	subwf	___llmod@dividend,f
  2316  0EE3  0821               	movf	___llmod@divisor+1,w
  2317  0EE4  1C03               	skipc
  2318  0EE5  0F21               	incfsz	___llmod@divisor+1,w
  2319  0EE6  02A5               	subwf	___llmod@dividend+1,f
  2320  0EE7  0822               	movf	___llmod@divisor+2,w
  2321  0EE8  1C03               	skipc
  2322  0EE9  0F22               	incfsz	___llmod@divisor+2,w
  2323  0EEA  02A6               	subwf	___llmod@dividend+2,f
  2324  0EEB  0823               	movf	___llmod@divisor+3,w
  2325  0EEC  1C03               	skipc
  2326  0EED  0F23               	incfsz	___llmod@divisor+3,w
  2327  0EEE  02A7               	subwf	___llmod@dividend+3,f
  2328  0EEF                     l1887:	
  2329  0EEF  3001               	movlw	1
  2330  0EF0                     u2105:	
  2331  0EF0  1003               	clrc
  2332  0EF1  0CA3               	rrf	___llmod@divisor+3,f
  2333  0EF2  0CA2               	rrf	___llmod@divisor+2,f
  2334  0EF3  0CA1               	rrf	___llmod@divisor+1,f
  2335  0EF4  0CA0               	rrf	___llmod@divisor,f
  2336  0EF5  3EFF               	addlw	-1
  2337  0EF6  1D03               	skipz
  2338  0EF7  2EF0               	goto	u2105
  2339  0EF8  3001               	movlw	1
  2340  0EF9  02F5               	subwf	___llmod@counter,f
  2341  0EFA  1D03               	btfss	3,2
  2342  0EFB  2ED1               	goto	l1883
  2343  0EFC                     l1891:	
  2344  0EFC  0827               	movf	___llmod@dividend+3,w
  2345  0EFD  00A3               	movwf	?___llmod+3
  2346  0EFE  0826               	movf	___llmod@dividend+2,w
  2347  0EFF  00A2               	movwf	?___llmod+2
  2348  0F00  0825               	movf	___llmod@dividend+1,w
  2349  0F01  00A1               	movwf	?___llmod+1
  2350  0F02  0824               	movf	___llmod@dividend,w
  2351  0F03  00A0               	movwf	?___llmod
  2352  0F04  0008               	return
  2353  0F05                     __end_of___llmod:	
  2354                           
  2355                           	psect	text7
  2356  002F                     __ptext7:	
  2357 ;; *************** function ___lldiv *****************
  2358 ;; Defined at:
  2359 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  divisor         4    0[BANK0 ] unsigned long 
  2362 ;;  dividend        4    4[BANK0 ] unsigned long 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  quotient        4    8[BANK0 ] unsigned long 
  2365 ;;  counter         1   12[BANK0 ] unsigned char 
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  4    0[BANK0 ] unsigned long 
  2368 ;; Registers used:
  2369 ;;		wreg, status,2, status,0
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2375 ;;      Params:         0       8       0       0       0
  2376 ;;      Locals:         0       5       0       0       0
  2377 ;;      Temps:          1       0       0       0       0
  2378 ;;      Totals:         1      13       0       0       0
  2379 ;;Total ram usage:       14 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    2
  2382 ;; This function calls:
  2383 ;;		Nothing
  2384 ;; This function is called by:
  2385 ;;		_time_break
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           
  2390                           ;psect for function ___lldiv
  2391  002F                     ___lldiv:	
  2392                           
  2393                           ;incstack = 0
  2394                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2395  002F  3000               	movlw	0
  2396  0030  1283               	bcf	3,5	;RP0=0, select bank0
  2397  0031  1303               	bcf	3,6	;RP1=0, select bank0
  2398  0032  00AB               	movwf	___lldiv@quotient+3
  2399  0033  3000               	movlw	0
  2400  0034  00AA               	movwf	___lldiv@quotient+2
  2401  0035  3000               	movlw	0
  2402  0036  00A9               	movwf	___lldiv@quotient+1
  2403  0037  3000               	movlw	0
  2404  0038  00A8               	movwf	___lldiv@quotient
  2405  0039  0823               	movf	___lldiv@divisor+3,w
  2406  003A  0422               	iorwf	___lldiv@divisor+2,w
  2407  003B  0421               	iorwf	___lldiv@divisor+1,w
  2408  003C  0420               	iorwf	___lldiv@divisor,w
  2409  003D  1903               	skipnz
  2410  003E  2886               	goto	l1871
  2411  003F  01AC               	clrf	___lldiv@counter
  2412  0040  0AAC               	incf	___lldiv@counter,f
  2413  0041                     l1857:	
  2414  0041  1BA3               	btfsc	___lldiv@divisor+3,7
  2415  0042  2851               	goto	l1859
  2416  0043  3001               	movlw	1
  2417  0044  00F4               	movwf	??___lldiv
  2418  0045                     u2005:	
  2419  0045  1003               	clrc
  2420  0046  0DA0               	rlf	___lldiv@divisor,f
  2421  0047  0DA1               	rlf	___lldiv@divisor+1,f
  2422  0048  0DA2               	rlf	___lldiv@divisor+2,f
  2423  0049  0DA3               	rlf	___lldiv@divisor+3,f
  2424  004A  0BF4               	decfsz	??___lldiv,f
  2425  004B  2845               	goto	u2005
  2426  004C  3001               	movlw	1
  2427  004D  00F4               	movwf	??___lldiv
  2428  004E  0874               	movf	??___lldiv,w
  2429  004F  07AC               	addwf	___lldiv@counter,f
  2430  0050  2841               	goto	l1857
  2431  0051                     l1859:	
  2432  0051  3001               	movlw	1
  2433  0052  00F4               	movwf	??___lldiv
  2434  0053                     u2025:	
  2435  0053  1003               	clrc
  2436  0054  0DA8               	rlf	___lldiv@quotient,f
  2437  0055  0DA9               	rlf	___lldiv@quotient+1,f
  2438  0056  0DAA               	rlf	___lldiv@quotient+2,f
  2439  0057  0DAB               	rlf	___lldiv@quotient+3,f
  2440  0058  0BF4               	decfsz	??___lldiv,f
  2441  0059  2853               	goto	u2025
  2442  005A  0823               	movf	___lldiv@divisor+3,w
  2443  005B  0227               	subwf	___lldiv@dividend+3,w
  2444  005C  1D03               	skipz
  2445  005D  2868               	goto	u2035
  2446  005E  0822               	movf	___lldiv@divisor+2,w
  2447  005F  0226               	subwf	___lldiv@dividend+2,w
  2448  0060  1D03               	skipz
  2449  0061  2868               	goto	u2035
  2450  0062  0821               	movf	___lldiv@divisor+1,w
  2451  0063  0225               	subwf	___lldiv@dividend+1,w
  2452  0064  1D03               	skipz
  2453  0065  2868               	goto	u2035
  2454  0066  0820               	movf	___lldiv@divisor,w
  2455  0067  0224               	subwf	___lldiv@dividend,w
  2456  0068                     u2035:	
  2457  0068  1C03               	skipc
  2458  0069  2879               	goto	l1867
  2459  006A  0820               	movf	___lldiv@divisor,w
  2460  006B  02A4               	subwf	___lldiv@dividend,f
  2461  006C  0821               	movf	___lldiv@divisor+1,w
  2462  006D  1C03               	skipc
  2463  006E  0F21               	incfsz	___lldiv@divisor+1,w
  2464  006F  02A5               	subwf	___lldiv@dividend+1,f
  2465  0070  0822               	movf	___lldiv@divisor+2,w
  2466  0071  1C03               	skipc
  2467  0072  0F22               	incfsz	___lldiv@divisor+2,w
  2468  0073  02A6               	subwf	___lldiv@dividend+2,f
  2469  0074  0823               	movf	___lldiv@divisor+3,w
  2470  0075  1C03               	skipc
  2471  0076  0F23               	incfsz	___lldiv@divisor+3,w
  2472  0077  02A7               	subwf	___lldiv@dividend+3,f
  2473  0078  1428               	bsf	___lldiv@quotient,0
  2474  0079                     l1867:	
  2475  0079  3001               	movlw	1
  2476  007A                     u2045:	
  2477  007A  1003               	clrc
  2478  007B  0CA3               	rrf	___lldiv@divisor+3,f
  2479  007C  0CA2               	rrf	___lldiv@divisor+2,f
  2480  007D  0CA1               	rrf	___lldiv@divisor+1,f
  2481  007E  0CA0               	rrf	___lldiv@divisor,f
  2482  007F  3EFF               	addlw	-1
  2483  0080  1D03               	skipz
  2484  0081  287A               	goto	u2045
  2485  0082  3001               	movlw	1
  2486  0083  02AC               	subwf	___lldiv@counter,f
  2487  0084  1D03               	btfss	3,2
  2488  0085  2851               	goto	l1859
  2489  0086                     l1871:	
  2490  0086  082B               	movf	___lldiv@quotient+3,w
  2491  0087  00A3               	movwf	?___lldiv+3
  2492  0088  082A               	movf	___lldiv@quotient+2,w
  2493  0089  00A2               	movwf	?___lldiv+2
  2494  008A  0829               	movf	___lldiv@quotient+1,w
  2495  008B  00A1               	movwf	?___lldiv+1
  2496  008C  0828               	movf	___lldiv@quotient,w
  2497  008D  00A0               	movwf	?___lldiv
  2498  008E  0008               	return
  2499  008F                     __end_of___lldiv:	
  2500                           
  2501                           	psect	text8
  2502  0F05                     __ptext8:	
  2503 ;; *************** function _time_get *****************
  2504 ;; Defined at:
  2505 ;;		line 86 in file "../TimeLib.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  now             4   20[BANK0 ] unsigned long 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  4   12[BANK0 ] unsigned long 
  2512 ;; Registers used:
  2513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2519 ;;      Params:         0       4       0       0       0
  2520 ;;      Locals:         0       4       0       0       0
  2521 ;;      Temps:          0       4       0       0       0
  2522 ;;      Totals:         0      12       0       0       0
  2523 ;;Total ram usage:       12 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; Hardware stack levels required when called:    5
  2526 ;; This function calls:
  2527 ;;		Absolute function
  2528 ;;		_tick_get
  2529 ;;		_time_provider
  2530 ;;		_time_set
  2531 ;; This function is called by:
  2532 ;;		_main
  2533 ;;		_time_minute
  2534 ;;		_time_set_provider
  2535 ;;		_time_second
  2536 ;;		_time_hour
  2537 ;;		_time_wday
  2538 ;;		_time_day
  2539 ;;		_time_month
  2540 ;;		_time_year
  2541 ;;		_time_get_status
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           
  2546                           ;psect for function _time_get
  2547  0F05                     _time_get:	
  2548                           
  2549                           ;TimeLib.c: 88: time_t now = 0;
  2550                           
  2551                           ;incstack = 0
  2552                           ; Regs used in _time_get: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2553  0F05  3000               	movlw	0
  2554  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0F08  00B7               	movwf	time_get@now+3
  2557  0F09  3000               	movlw	0
  2558  0F0A  00B6               	movwf	time_get@now+2
  2559  0F0B  3000               	movlw	0
  2560  0F0C  00B5               	movwf	time_get@now+1
  2561  0F0D  3000               	movlw	0
  2562  0F0E  00B4               	movwf	time_get@now
  2563                           
  2564                           ;TimeLib.c: 91: if (sync_next <= sys_time) {
  2565  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  2566  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  2567  0F11  084F               	movf	(_sync_next+3)^(0+128),w
  2568  0F12  0279               	subwf	_sys_time+3,w
  2569  0F13  1D03               	skipz
  2570  0F14  2F1F               	goto	u2255
  2571  0F15  084E               	movf	(_sync_next+2)^(0+128),w
  2572  0F16  0278               	subwf	_sys_time+2,w
  2573  0F17  1D03               	skipz
  2574  0F18  2F1F               	goto	u2255
  2575  0F19  084D               	movf	(_sync_next+1)^(0+128),w
  2576  0F1A  0277               	subwf	_sys_time+1,w
  2577  0F1B  1D03               	skipz
  2578  0F1C  2F1F               	goto	u2255
  2579  0F1D  084C               	movf	_sync_next^(0+128),w
  2580  0F1E  0276               	subwf	_sys_time,w
  2581  0F1F                     u2255:	
  2582  0F1F  1C03               	skipc
  2583  0F20  2FB1               	goto	l1997
  2584                           
  2585                           ;TimeLib.c: 93: if (time_provider_callback != 0) {
  2586  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  2587  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  2588  0F23  0863               	movf	_time_provider_callback,w
  2589  0F24  1903               	btfsc	3,2
  2590  0F25  2FB1               	goto	l1997
  2591                           
  2592                           ;TimeLib.c: 95: now = time_provider_callback();
  2593  0F26  0863               	movf	_time_provider_callback,w
  2594  0F27  118A  2100  158A   	fcall	fptable
  2595  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  2596  0F2B  1303               	bcf	3,6	;RP1=0, select bank0
  2597  0F2C  0823               	movf	?_time_provider+3,w
  2598  0F2D  00B7               	movwf	time_get@now+3
  2599  0F2E  0822               	movf	?_time_provider+2,w
  2600  0F2F  00B6               	movwf	time_get@now+2
  2601  0F30  0821               	movf	?_time_provider+1,w
  2602  0F31  00B5               	movwf	time_get@now+1
  2603  0F32  0820               	movf	?_time_provider,w
  2604  0F33  00B4               	movwf	time_get@now
  2605                           
  2606                           ;TimeLib.c: 97: if (now != 0)
  2607  0F34  0837               	movf	time_get@now+3,w
  2608  0F35  0436               	iorwf	time_get@now+2,w
  2609  0F36  0435               	iorwf	time_get@now+1,w
  2610  0F37  0434               	iorwf	time_get@now,w
  2611  0F38  1903               	skipnz
  2612  0F39  2F46               	goto	l1991
  2613                           
  2614                           ;TimeLib.c: 98: time_set(now);
  2615  0F3A  0837               	movf	time_get@now+3,w
  2616  0F3B  00A7               	movwf	time_set@now+3
  2617  0F3C  0836               	movf	time_get@now+2,w
  2618  0F3D  00A6               	movwf	time_set@now+2
  2619  0F3E  0835               	movf	time_get@now+1,w
  2620  0F3F  00A5               	movwf	time_set@now+1
  2621  0F40  0834               	movf	time_get@now,w
  2622  0F41  00A4               	movwf	time_set@now
  2623  0F42  118A  2776  158A   	fcall	_time_set
  2624  0F45  2FAF               	goto	L7
  2625  0F46                     l1991:	
  2626                           
  2627                           ;TimeLib.c: 99: else {
  2628                           ;TimeLib.c: 100: sync_next = sys_time + sync_interval;
  2629  0F46  0876               	movf	_sys_time,w
  2630  0F47  1683               	bsf	3,5	;RP0=1, select bank1
  2631  0F48  1303               	bcf	3,6	;RP1=0, select bank1
  2632  0F49  0750               	addwf	_sync_interval^(0+128),w
  2633  0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  2634  0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  2635  0F4C  00B0               	movwf	??_time_get
  2636  0F4D  3000               	movlw	0
  2637  0F4E  1803               	skipnc
  2638  0F4F  3001               	movlw	1
  2639  0F50  0777               	addwf	_sys_time+1,w
  2640  0F51  01B2               	clrf	??_time_get+2
  2641  0F52  1803               	skipnc
  2642  0F53  0AB2               	incf	??_time_get+2,f
  2643  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  2644  0F55  1303               	bcf	3,6	;RP1=0, select bank1
  2645  0F56  0751               	addwf	(_sync_interval+1)^(0+128),w
  2646  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  2647  0F58  1303               	bcf	3,6	;RP1=0, select bank0
  2648  0F59  00B1               	movwf	??_time_get+1
  2649  0F5A  1803               	skipnc
  2650  0F5B  0AB2               	incf	??_time_get+2,f
  2651  0F5C  0878               	movf	_sys_time+2,w
  2652  0F5D  0732               	addwf	??_time_get+2,w
  2653  0F5E  01B3               	clrf	??_time_get+3
  2654  0F5F  1803               	skipnc
  2655  0F60  0AB3               	incf	??_time_get+3,f
  2656  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  2657  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  2658  0F63  0752               	addwf	(_sync_interval+2)^(0+128),w
  2659  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  2660  0F65  1303               	bcf	3,6	;RP1=0, select bank0
  2661  0F66  00B2               	movwf	??_time_get+2
  2662  0F67  1803               	skipnc
  2663  0F68  0AB3               	incf	??_time_get+3,f
  2664  0F69  0879               	movf	_sys_time+3,w
  2665  0F6A  0733               	addwf	??_time_get+3,w
  2666  0F6B  1683               	bsf	3,5	;RP0=1, select bank1
  2667  0F6C  1303               	bcf	3,6	;RP1=0, select bank1
  2668  0F6D  0753               	addwf	(_sync_interval+3)^(0+128),w
  2669  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0F70  00B3               	movwf	??_time_get+3
  2672  0F71  0833               	movf	??_time_get+3,w
  2673  0F72  1683               	bsf	3,5	;RP0=1, select bank1
  2674  0F73  1303               	bcf	3,6	;RP1=0, select bank1
  2675  0F74  00CF               	movwf	(_sync_next+3)^(0+128)
  2676  0F75  1283               	bcf	3,5	;RP0=0, select bank0
  2677  0F76  1303               	bcf	3,6	;RP1=0, select bank0
  2678  0F77  0832               	movf	??_time_get+2,w
  2679  0F78  1683               	bsf	3,5	;RP0=1, select bank1
  2680  0F79  1303               	bcf	3,6	;RP1=0, select bank1
  2681  0F7A  00CE               	movwf	(_sync_next+2)^(0+128)
  2682  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  2683  0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  2684  0F7D  0831               	movf	??_time_get+1,w
  2685  0F7E  1683               	bsf	3,5	;RP0=1, select bank1
  2686  0F7F  1303               	bcf	3,6	;RP1=0, select bank1
  2687  0F80  00CD               	movwf	(_sync_next+1)^(0+128)
  2688  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  2689  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  2690  0F83  0830               	movf	??_time_get,w
  2691  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  2692  0F85  1303               	bcf	3,6	;RP1=0, select bank1
  2693  0F86  00CC               	movwf	_sync_next^(0+128)
  2694                           
  2695                           ;TimeLib.c: 101: tstatus = (tstatus == E_TIME_NOT_SET) ? E_TIME_NOT_SET : E_TIME_NEEDS_S
      +                          YNC;
  2696  0F87  3000               	movlw	0
  2697  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  2698  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  2699  0F8A  08E2               	movf	_tstatus,f
  2700  0F8B  1D03               	skipz
  2701  0F8C  3001               	movlw	1
  2702  0F8D  00B0               	movwf	??_time_get
  2703  0F8E  0830               	movf	??_time_get,w
  2704  0F8F  00E2               	movwf	_tstatus
  2705                           
  2706                           ;TimeLib.c: 102: }
  2707                           ;TimeLib.c: 103: }
  2708                           ;TimeLib.c: 104: }
  2709                           ;TimeLib.c: 108: while (tick_get() - last_update >= ((unsigned long long)((1000000 + 128
      +                          ull)/8ull))) {
  2710  0F90  2FB1               	goto	l1997
  2711  0F91                     l1995:	
  2712                           
  2713                           ;TimeLib.c: 110: sys_time++;
  2714  0F91  3001               	movlw	1
  2715  0F92  07F6               	addwf	_sys_time,f
  2716  0F93  3000               	movlw	0
  2717  0F94  1803               	skipnc
  2718  0F95  3001               	movlw	1
  2719  0F96  07F7               	addwf	_sys_time+1,f
  2720  0F97  3000               	movlw	0
  2721  0F98  1803               	skipnc
  2722  0F99  3001               	movlw	1
  2723  0F9A  07F8               	addwf	_sys_time+2,f
  2724  0F9B  3000               	movlw	0
  2725  0F9C  1803               	skipnc
  2726  0F9D  3001               	movlw	1
  2727  0F9E  07F9               	addwf	_sys_time+3,f
  2728                           
  2729                           ;TimeLib.c: 111: last_update += ((unsigned long long)((1000000 + 128ull)/8ull));
  2730  0F9F  3058               	movlw	88
  2731  0FA0  1683               	bsf	3,5	;RP0=1, select bank1
  2732  0FA1  1303               	bcf	3,6	;RP1=0, select bank1
  2733  0FA2  07C8               	addwf	_last_update^(0+128),f
  2734  0FA3  30E8               	movlw	232
  2735  0FA4  1803               	skipnc
  2736  0FA5  30E9               	movlw	233
  2737  0FA6  07C9               	addwf	(_last_update+1)^(0+128),f
  2738  0FA7  3001               	movlw	1
  2739  0FA8  1803               	skipnc
  2740  0FA9  3002               	movlw	2
  2741  0FAA  07CA               	addwf	(_last_update+2)^(0+128),f
  2742  0FAB  3000               	movlw	0
  2743  0FAC  1803               	skipnc
  2744  0FAD  3001               	movlw	1
  2745  0FAE  07CB               	addwf	(_last_update+3)^(0+128),f
  2746  0FAF                     L7:	
  2747  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  2749  0FB1                     l1997:	
  2750  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  2751  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  2752  0FB3  0948               	comf	_last_update^(0+128),w
  2753  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  2754  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  2755  0FB6  00B0               	movwf	??_time_get
  2756  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  2757  0FB8  1303               	bcf	3,6	;RP1=0, select bank1
  2758  0FB9  0949               	comf	(_last_update+1)^(0+128),w
  2759  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0FBC  00B1               	movwf	??_time_get+1
  2762  0FBD  1683               	bsf	3,5	;RP0=1, select bank1
  2763  0FBE  1303               	bcf	3,6	;RP1=0, select bank1
  2764  0FBF  094A               	comf	(_last_update+2)^(0+128),w
  2765  0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  2766  0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  2767  0FC2  00B2               	movwf	??_time_get+2
  2768  0FC3  1683               	bsf	3,5	;RP0=1, select bank1
  2769  0FC4  1303               	bcf	3,6	;RP1=0, select bank1
  2770  0FC5  094B               	comf	(_last_update+3)^(0+128),w
  2771  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  2772  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  2773  0FC8  00B3               	movwf	??_time_get+3
  2774  0FC9  0AB0               	incf	??_time_get,f
  2775  0FCA  1903               	skipnz
  2776  0FCB  0AB1               	incf	??_time_get+1,f
  2777  0FCC  1903               	skipnz
  2778  0FCD  0AB2               	incf	??_time_get+2,f
  2779  0FCE  1903               	skipnz
  2780  0FCF  0AB3               	incf	??_time_get+3,f
  2781  0FD0  158A  24CA  158A   	fcall	_tick_get
  2782  0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  2783  0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  2784  0FD5  0820               	movf	?_tick_get,w
  2785  0FD6  07B0               	addwf	??_time_get,f
  2786  0FD7  0821               	movf	?_tick_get+1,w
  2787  0FD8  1803               	skipnc
  2788  0FD9  0F21               	incfsz	?_tick_get+1,w
  2789  0FDA  2FDC               	goto	u2280
  2790  0FDB  2FDD               	goto	u2281
  2791  0FDC                     u2280:	
  2792  0FDC  07B1               	addwf	??_time_get+1,f
  2793  0FDD                     u2281:	
  2794  0FDD  0822               	movf	?_tick_get+2,w
  2795  0FDE  1803               	skipnc
  2796  0FDF  0F22               	incfsz	?_tick_get+2,w
  2797  0FE0  2FE2               	goto	u2282
  2798  0FE1  2FE3               	goto	u2283
  2799  0FE2                     u2282:	
  2800  0FE2  07B2               	addwf	??_time_get+2,f
  2801  0FE3                     u2283:	
  2802  0FE3  0823               	movf	?_tick_get+3,w
  2803  0FE4  1803               	skipnc
  2804  0FE5  0A23               	incf	?_tick_get+3,w
  2805  0FE6  07B3               	addwf	??_time_get+3,f
  2806  0FE7  3000               	movlw	0
  2807  0FE8  0233               	subwf	??_time_get+3,w
  2808  0FE9  1D03               	skipz
  2809  0FEA  2FF5               	goto	u2295
  2810  0FEB  3001               	movlw	1
  2811  0FEC  0232               	subwf	??_time_get+2,w
  2812  0FED  1D03               	skipz
  2813  0FEE  2FF5               	goto	u2295
  2814  0FEF  30E8               	movlw	232
  2815  0FF0  0231               	subwf	??_time_get+1,w
  2816  0FF1  1D03               	skipz
  2817  0FF2  2FF5               	goto	u2295
  2818  0FF3  3058               	movlw	88
  2819  0FF4  0230               	subwf	??_time_get,w
  2820  0FF5                     u2295:	
  2821  0FF5  1803               	skipnc
  2822  0FF6  2F91               	goto	l1995
  2823                           
  2824                           ;TimeLib.c: 112: }
  2825                           ;TimeLib.c: 114: return sys_time;
  2826  0FF7  0879               	movf	_sys_time+3,w
  2827  0FF8  00AF               	movwf	?_time_get+3
  2828  0FF9  0878               	movf	_sys_time+2,w
  2829  0FFA  00AE               	movwf	?_time_get+2
  2830  0FFB  0877               	movf	_sys_time+1,w
  2831  0FFC  00AD               	movwf	?_time_get+1
  2832  0FFD  0876               	movf	_sys_time,w
  2833  0FFE  00AC               	movwf	?_time_get
  2834  0FFF  0008               	return
  2835  1000                     __end_of_time_get:	
  2836                           
  2837                           	psect	text9
  2838  0776                     __ptext9:	
  2839 ;; *************** function _time_set *****************
  2840 ;; Defined at:
  2841 ;;		line 78 in file "../TimeLib.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  now             4    4[BANK0 ] unsigned long 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;		None
  2846 ;; Return value:  Size  Location     Type
  2847 ;;		None               void
  2848 ;; Registers used:
  2849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2855 ;;      Params:         0       4       0       0       0
  2856 ;;      Locals:         0       0       0       0       0
  2857 ;;      Temps:          0       4       0       0       0
  2858 ;;      Totals:         0       8       0       0       0
  2859 ;;Total ram usage:        8 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    4
  2862 ;; This function calls:
  2863 ;;		_tick_get
  2864 ;; This function is called by:
  2865 ;;		_main
  2866 ;;		_time_get
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           
  2871                           ;psect for function _time_set
  2872  0776                     _time_set:	
  2873                           
  2874                           ;TimeLib.c: 80: sys_time = now;
  2875                           
  2876                           ;incstack = 0
  2877                           ; Regs used in _time_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2878  0776  1283               	bcf	3,5	;RP0=0, select bank0
  2879  0777  1303               	bcf	3,6	;RP1=0, select bank0
  2880  0778  0827               	movf	time_set@now+3,w
  2881  0779  00F9               	movwf	_sys_time+3
  2882  077A  0826               	movf	time_set@now+2,w
  2883  077B  00F8               	movwf	_sys_time+2
  2884  077C  0825               	movf	time_set@now+1,w
  2885  077D  00F7               	movwf	_sys_time+1
  2886  077E  0824               	movf	time_set@now,w
  2887  077F  00F6               	movwf	_sys_time
  2888                           
  2889                           ;TimeLib.c: 81: sync_next = now + sync_interval;
  2890  0780  0824               	movf	time_set@now,w
  2891  0781  1683               	bsf	3,5	;RP0=1, select bank1
  2892  0782  1303               	bcf	3,6	;RP1=0, select bank1
  2893  0783  0750               	addwf	_sync_interval^(0+128),w
  2894  0784  1283               	bcf	3,5	;RP0=0, select bank0
  2895  0785  1303               	bcf	3,6	;RP1=0, select bank0
  2896  0786  00A8               	movwf	??_time_set
  2897  0787  3000               	movlw	0
  2898  0788  1803               	skipnc
  2899  0789  3001               	movlw	1
  2900  078A  0725               	addwf	time_set@now+1,w
  2901  078B  01AA               	clrf	??_time_set+2
  2902  078C  1803               	skipnc
  2903  078D  0AAA               	incf	??_time_set+2,f
  2904  078E  1683               	bsf	3,5	;RP0=1, select bank1
  2905  078F  1303               	bcf	3,6	;RP1=0, select bank1
  2906  0790  0751               	addwf	(_sync_interval+1)^(0+128),w
  2907  0791  1283               	bcf	3,5	;RP0=0, select bank0
  2908  0792  1303               	bcf	3,6	;RP1=0, select bank0
  2909  0793  00A9               	movwf	??_time_set+1
  2910  0794  1803               	skipnc
  2911  0795  0AAA               	incf	??_time_set+2,f
  2912  0796  0826               	movf	time_set@now+2,w
  2913  0797  072A               	addwf	??_time_set+2,w
  2914  0798  01AB               	clrf	??_time_set+3
  2915  0799  1803               	skipnc
  2916  079A  0AAB               	incf	??_time_set+3,f
  2917  079B  1683               	bsf	3,5	;RP0=1, select bank1
  2918  079C  1303               	bcf	3,6	;RP1=0, select bank1
  2919  079D  0752               	addwf	(_sync_interval+2)^(0+128),w
  2920  079E  1283               	bcf	3,5	;RP0=0, select bank0
  2921  079F  1303               	bcf	3,6	;RP1=0, select bank0
  2922  07A0  00AA               	movwf	??_time_set+2
  2923  07A1  1803               	skipnc
  2924  07A2  0AAB               	incf	??_time_set+3,f
  2925  07A3  0827               	movf	time_set@now+3,w
  2926  07A4  072B               	addwf	??_time_set+3,w
  2927  07A5  1683               	bsf	3,5	;RP0=1, select bank1
  2928  07A6  1303               	bcf	3,6	;RP1=0, select bank1
  2929  07A7  0753               	addwf	(_sync_interval+3)^(0+128),w
  2930  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  2931  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  2932  07AA  00AB               	movwf	??_time_set+3
  2933  07AB  082B               	movf	??_time_set+3,w
  2934  07AC  1683               	bsf	3,5	;RP0=1, select bank1
  2935  07AD  1303               	bcf	3,6	;RP1=0, select bank1
  2936  07AE  00CF               	movwf	(_sync_next+3)^(0+128)
  2937  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  2938  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  2939  07B1  082A               	movf	??_time_set+2,w
  2940  07B2  1683               	bsf	3,5	;RP0=1, select bank1
  2941  07B3  1303               	bcf	3,6	;RP1=0, select bank1
  2942  07B4  00CE               	movwf	(_sync_next+2)^(0+128)
  2943  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  2944  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  2945  07B7  0829               	movf	??_time_set+1,w
  2946  07B8  1683               	bsf	3,5	;RP0=1, select bank1
  2947  07B9  1303               	bcf	3,6	;RP1=0, select bank1
  2948  07BA  00CD               	movwf	(_sync_next+1)^(0+128)
  2949  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  2950  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  2951  07BD  0828               	movf	??_time_set,w
  2952  07BE  1683               	bsf	3,5	;RP0=1, select bank1
  2953  07BF  1303               	bcf	3,6	;RP1=0, select bank1
  2954  07C0  00CC               	movwf	_sync_next^(0+128)
  2955                           
  2956                           ;TimeLib.c: 82: tstatus = E_TIME_OK;
  2957  07C1  3002               	movlw	2
  2958  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  2959  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  2960  07C4  00A8               	movwf	??_time_set
  2961  07C5  0828               	movf	??_time_set,w
  2962  07C6  00E2               	movwf	_tstatus
  2963                           
  2964                           ;TimeLib.c: 83: last_update = tick_get();
  2965  07C7  158A  24CA         	fcall	_tick_get
  2966  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  2967  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  2968  07CB  0823               	movf	?_tick_get+3,w
  2969  07CC  1683               	bsf	3,5	;RP0=1, select bank1
  2970  07CD  1303               	bcf	3,6	;RP1=0, select bank1
  2971  07CE  00CB               	movwf	(_last_update+3)^(0+128)
  2972  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  2973  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  2974  07D1  0822               	movf	?_tick_get+2,w
  2975  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  2976  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  2977  07D4  00CA               	movwf	(_last_update+2)^(0+128)
  2978  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  2979  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  2980  07D7  0821               	movf	?_tick_get+1,w
  2981  07D8  1683               	bsf	3,5	;RP0=1, select bank1
  2982  07D9  1303               	bcf	3,6	;RP1=0, select bank1
  2983  07DA  00C9               	movwf	(_last_update+1)^(0+128)
  2984  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  2985  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  2986  07DD  0820               	movf	?_tick_get,w
  2987  07DE  1683               	bsf	3,5	;RP0=1, select bank1
  2988  07DF  1303               	bcf	3,6	;RP1=0, select bank1
  2989  07E0  00C8               	movwf	_last_update^(0+128)
  2990  07E1  0008               	return
  2991  07E2                     __end_of_time_set:	
  2992                           
  2993                           	psect	text10
  2994  0CCA                     __ptext10:	
  2995 ;; *************** function _tick_get *****************
  2996 ;; Defined at:
  2997 ;;		line 44 in file "../Tick/Tick-PIC16.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;		None
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;		None
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  4    0[BANK0 ] unsigned long 
  3004 ;; Registers used:
  3005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3011 ;;      Params:         0       4       0       0       0
  3012 ;;      Locals:         0       0       0       0       0
  3013 ;;      Temps:          0       0       0       0       0
  3014 ;;      Totals:         0       4       0       0       0
  3015 ;;Total ram usage:        4 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; Hardware stack levels required when called:    3
  3018 ;; This function calls:
  3019 ;;		_tick_read_internal
  3020 ;; This function is called by:
  3021 ;;		_main
  3022 ;;		_time_set
  3023 ;;		_time_get
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           
  3028                           ;psect for function _tick_get
  3029  0CCA                     _tick_get:	
  3030                           
  3031                           ;Tick-PIC16.c: 46: tick_read_internal();
  3032                           
  3033                           ;incstack = 0
  3034                           ; Regs used in _tick_get: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3035  0CCA  158A  251A         	fcall	_tick_read_internal
  3036                           
  3037                           ;Tick-PIC16.c: 47: return *((uint32_t *) & tickbuffer[0]);
  3038  0CCC  30A0               	movlw	low _tickbuffer
  3039  0CCD  0084               	movwf	4
  3040  0CCE  1383               	bcf	3,7	;select IRP bank1
  3041  0CCF  0800               	movf	0,w
  3042  0CD0  1283               	bcf	3,5	;RP0=0, select bank0
  3043  0CD1  1303               	bcf	3,6	;RP1=0, select bank0
  3044  0CD2  00A0               	movwf	?_tick_get
  3045  0CD3  0A84               	incf	4,f
  3046  0CD4  0800               	movf	0,w
  3047  0CD5  00A1               	movwf	?_tick_get+1
  3048  0CD6  0A84               	incf	4,f
  3049  0CD7  0800               	movf	0,w
  3050  0CD8  00A2               	movwf	?_tick_get+2
  3051  0CD9  0A84               	incf	4,f
  3052  0CDA  0800               	movf	0,w
  3053  0CDB  00A3               	movwf	?_tick_get+3
  3054  0CDC  0008               	return
  3055  0CDD                     __end_of_tick_get:	
  3056                           
  3057                           	psect	text11
  3058  0D1A                     __ptext11:	
  3059 ;; *************** function _tick_read_internal *****************
  3060 ;; Defined at:
  3061 ;;		line 58 in file "../Tick/Tick-PIC16.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;		None
  3066 ;; Return value:  Size  Location     Type
  3067 ;;		None               void
  3068 ;; Registers used:
  3069 ;;		wreg
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3075 ;;      Params:         0       0       0       0       0
  3076 ;;      Locals:         0       0       0       0       0
  3077 ;;      Temps:          1       0       0       0       0
  3078 ;;      Totals:         1       0       0       0       0
  3079 ;;Total ram usage:        1 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; Hardware stack levels required when called:    2
  3082 ;; This function calls:
  3083 ;;		Nothing
  3084 ;; This function is called by:
  3085 ;;		_tick_get
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           
  3090                           ;psect for function _tick_read_internal
  3091  0D1A                     _tick_read_internal:	
  3092  0D1A                     l218:	
  3093                           ;incstack = 0
  3094                           ; Regs used in _tick_read_internal: [wreg]
  3095                           ;Tick-PIC16.c: 60: do {
  3096                           
  3097                           
  3098                           ;Tick-PIC16.c: 61: PIE1bits.TMR1IE = 1;
  3099  0D1A  1683               	bsf	3,5	;RP0=1, select bank1
  3100  0D1B  1303               	bcf	3,6	;RP1=0, select bank1
  3101  0D1C  140C               	bsf	12,0	;volatile
  3102  0D1D  0000               	nop	;# 
  3103                           
  3104                           ;Tick-PIC16.c: 63: PIE1bits.TMR1IE = 0;
  3105  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  3106  0D1F  1303               	bcf	3,6	;RP1=0, select bank1
  3107  0D20  100C               	bcf	12,0	;volatile
  3108                           
  3109                           ;Tick-PIC16.c: 65: tickbuffer[0] = TMR1L;
  3110  0D21  1283               	bcf	3,5	;RP0=0, select bank0
  3111  0D22  1303               	bcf	3,6	;RP1=0, select bank0
  3112  0D23  080E               	movf	14,w	;volatile
  3113  0D24  00F4               	movwf	??_tick_read_internal
  3114  0D25  0874               	movf	??_tick_read_internal,w
  3115  0D26  1683               	bsf	3,5	;RP0=1, select bank1
  3116  0D27  1303               	bcf	3,6	;RP1=0, select bank1
  3117  0D28  00A0               	movwf	_tickbuffer^(0+128)
  3118                           
  3119                           ;Tick-PIC16.c: 66: tickbuffer[1] = TMR1H;
  3120  0D29  1283               	bcf	3,5	;RP0=0, select bank0
  3121  0D2A  1303               	bcf	3,6	;RP1=0, select bank0
  3122  0D2B  080F               	movf	15,w	;volatile
  3123  0D2C  00F4               	movwf	??_tick_read_internal
  3124  0D2D  0874               	movf	??_tick_read_internal,w
  3125  0D2E  1683               	bsf	3,5	;RP0=1, select bank1
  3126  0D2F  1303               	bcf	3,6	;RP1=0, select bank1
  3127  0D30  00A1               	movwf	(_tickbuffer^(0+128)+1)
  3128                           
  3129                           ;Tick-PIC16.c: 68: *((uint32_t*) & tickbuffer[2]) = tickcnt;
  3130  0D31  082D               	movf	(_tickcnt+3)^(0+128),w	;volatile
  3131  0D32  00A5               	movwf	((_tickbuffer+3)^(0+128)+2)
  3132  0D33  082C               	movf	(_tickcnt+2)^(0+128),w	;volatile
  3133  0D34  00A4               	movwf	((_tickbuffer+2)^(0+128)+2)
  3134  0D35  082B               	movf	(_tickcnt+1)^(0+128),w	;volatile
  3135  0D36  00A3               	movwf	((_tickbuffer+1)^(0+128)+2)
  3136  0D37  082A               	movf	_tickcnt^(0+128),w	;volatile
  3137  0D38  00A2               	movwf	(_tickbuffer^(0+128)+2)
  3138                           
  3139                           ;Tick-PIC16.c: 69: } while (PIR1bits.TMR1IF);
  3140  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3142  0D3B  180C               	btfsc	12,0	;volatile
  3143  0D3C  2D1A               	goto	l218
  3144                           
  3145                           ;Tick-PIC16.c: 70: PIE1bits.TMR1IE = 1;
  3146  0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  3147  0D3E  1303               	bcf	3,6	;RP1=0, select bank1
  3148  0D3F  140C               	bsf	12,0	;volatile
  3149  0D40  0008               	return
  3150  0D41                     __end_of_tick_read_internal:	
  3151                           
  3152                           	psect	text12
  3153  07E2                     __ptext12:	
  3154 ;; *************** function _time_provider *****************
  3155 ;; Defined at:
  3156 ;;		line 89 in file "main.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;		None
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  4    0[BANK0 ] unsigned long 
  3163 ;; Registers used:
  3164 ;;		wreg
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3170 ;;      Params:         0       4       0       0       0
  3171 ;;      Locals:         0       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0
  3173 ;;      Totals:         0       4       0       0       0
  3174 ;;Total ram usage:        4 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    2
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_main
  3181 ;;		_time_get
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           
  3186                           ;psect for function _time_provider
  3187  07E2                     _time_provider:	
  3188                           
  3189                           ;main.c: 95: return initialt;
  3190                           
  3191                           ;incstack = 0
  3192                           ; Regs used in _time_provider: [wreg]
  3193  07E2  1683               	bsf	3,5	;RP0=1, select bank1
  3194  07E3  1303               	bcf	3,6	;RP1=0, select bank1
  3195  07E4  0847               	movf	(_initialt+3)^(0+128),w
  3196  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  3197  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  3198  07E7  00A3               	movwf	?_time_provider+3
  3199  07E8  1683               	bsf	3,5	;RP0=1, select bank1
  3200  07E9  1303               	bcf	3,6	;RP1=0, select bank1
  3201  07EA  0846               	movf	(_initialt+2)^(0+128),w
  3202  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  3203  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  3204  07ED  00A2               	movwf	?_time_provider+2
  3205  07EE  1683               	bsf	3,5	;RP0=1, select bank1
  3206  07EF  1303               	bcf	3,6	;RP1=0, select bank1
  3207  07F0  0845               	movf	(_initialt+1)^(0+128),w
  3208  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  3209  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  3210  07F3  00A1               	movwf	?_time_provider+1
  3211  07F4  1683               	bsf	3,5	;RP0=1, select bank1
  3212  07F5  1303               	bcf	3,6	;RP1=0, select bank1
  3213  07F6  0844               	movf	_initialt^(0+128),w
  3214  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  3215  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  3216  07F9  00A0               	movwf	?_time_provider
  3217  07FA  0008               	return
  3218  07FB                     __end_of_time_provider:	
  3219                           
  3220                           	psect	text13
  3221  030E                     __ptext13:	
  3222 ;; *************** function _time_make *****************
  3223 ;; Defined at:
  3224 ;;		line 194 in file "../TimeLib.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  timeinfo        1    wreg     PTR struct tm_t
  3227 ;;		 -> main@tinfo(7), 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  timeinfo        1   31[BANK0 ] PTR struct tm_t
  3230 ;;		 -> main@tinfo(7), 
  3231 ;;  tstamp          4   25[BANK0 ] unsigned long 
  3232 ;;  i               2   29[BANK0 ] int 
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  4   17[BANK0 ] unsigned long 
  3235 ;; Registers used:
  3236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3242 ;;      Params:         0       4       0       0       0
  3243 ;;      Locals:         0       7       0       0       0
  3244 ;;      Temps:          0       4       0       0       0
  3245 ;;      Totals:         0      15       0       0       0
  3246 ;;Total ram usage:       15 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:    4
  3249 ;; This function calls:
  3250 ;;		___lmul
  3251 ;;		_time_is_leap
  3252 ;; This function is called by:
  3253 ;;		_main
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function _time_make
  3259  030E                     _time_make:	
  3260                           
  3261                           ;incstack = 0
  3262                           ; Regs used in _time_make: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3263                           ;time_make@timeinfo stored from wreg
  3264  030E  1283               	bcf	3,5	;RP0=0, select bank0
  3265  030F  1303               	bcf	3,6	;RP1=0, select bank0
  3266  0310  00BF               	movwf	time_make@timeinfo
  3267                           
  3268                           ;TimeLib.c: 196: int i;
  3269                           ;TimeLib.c: 197: uint32_t tstamp;
  3270                           ;TimeLib.c: 201: tstamp = timeinfo->tm_year * ((86400UL) * 365);
  3271  0311  083F               	movf	time_make@timeinfo,w
  3272  0312  3E06               	addlw	6
  3273  0313  0084               	movwf	4
  3274  0314  1383               	bcf	3,7	;select IRP bank0
  3275  0315  0800               	movf	0,w
  3276  0316  00B5               	movwf	??_time_make
  3277  0317  01B6               	clrf	??_time_make+1
  3278  0318  01B7               	clrf	??_time_make+2
  3279  0319  01B8               	clrf	??_time_make+3
  3280  031A  0838               	movf	??_time_make+3,w
  3281  031B  00A3               	movwf	___lmul@multiplier+3
  3282  031C  0837               	movf	??_time_make+2,w
  3283  031D  00A2               	movwf	___lmul@multiplier+2
  3284  031E  0836               	movf	??_time_make+1,w
  3285  031F  00A1               	movwf	___lmul@multiplier+1
  3286  0320  0835               	movf	??_time_make,w
  3287  0321  00A0               	movwf	___lmul@multiplier
  3288  0322  3001               	movlw	1
  3289  0323  00A7               	movwf	___lmul@multiplicand+3
  3290  0324  30E1               	movlw	225
  3291  0325  00A6               	movwf	___lmul@multiplicand+2
  3292  0326  3033               	movlw	51
  3293  0327  00A5               	movwf	___lmul@multiplicand+1
  3294  0328  3080               	movlw	128
  3295  0329  00A4               	movwf	___lmul@multiplicand
  3296  032A  158A  262D  118A   	fcall	___lmul
  3297  032D  1283               	bcf	3,5	;RP0=0, select bank0
  3298  032E  1303               	bcf	3,6	;RP1=0, select bank0
  3299  032F  0823               	movf	?___lmul+3,w
  3300  0330  00BC               	movwf	time_make@tstamp+3
  3301  0331  0822               	movf	?___lmul+2,w
  3302  0332  00BB               	movwf	time_make@tstamp+2
  3303  0333  0821               	movf	?___lmul+1,w
  3304  0334  00BA               	movwf	time_make@tstamp+1
  3305  0335  0820               	movf	?___lmul,w
  3306  0336  00B9               	movwf	time_make@tstamp
  3307                           
  3308                           ;TimeLib.c: 203: for (i = 0; i < timeinfo->tm_year; i++) {
  3309  0337  01BD               	clrf	time_make@i
  3310  0338  01BE               	clrf	time_make@i+1
  3311  0339                     l2097:	
  3312  0339  083F               	movf	time_make@timeinfo,w
  3313  033A  3E06               	addlw	6
  3314  033B  0084               	movwf	4
  3315  033C  083E               	movf	time_make@i+1,w
  3316  033D  3A80               	xorlw	128
  3317  033E  00B5               	movwf	??_time_make
  3318  033F  3080               	movlw	128
  3319  0340  0235               	subwf	??_time_make,w
  3320  0341  1D03               	skipz
  3321  0342  2B46               	goto	u2505
  3322  0343  1383               	bcf	3,7	;select IRP bank0
  3323  0344  0800               	movf	0,w
  3324  0345  023D               	subwf	time_make@i,w
  3325  0346                     u2505:	
  3326  0346  1803               	btfsc	3,0
  3327  0347  2B70               	goto	l2099
  3328                           
  3329                           ;TimeLib.c: 204: if (time_is_leap(i + 1970))
  3330  0348  1283               	bcf	3,5	;RP0=0, select bank0
  3331  0349  1303               	bcf	3,6	;RP1=0, select bank0
  3332  034A  083D               	movf	time_make@i,w
  3333  034B  3EB2               	addlw	178
  3334  034C  00AC               	movwf	time_is_leap@year
  3335  034D  083E               	movf	time_make@i+1,w
  3336  034E  1803               	skipnc
  3337  034F  3E01               	addlw	1
  3338  0350  3E07               	addlw	7
  3339  0351  00AD               	movwf	time_is_leap@year+1
  3340  0352  158A  2577  118A   	fcall	_time_is_leap
  3341  0355  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0356  1303               	bcf	3,6	;RP1=0, select bank0
  3343  0357  082D               	movf	?_time_is_leap+1,w
  3344  0358  042C               	iorwf	?_time_is_leap,w
  3345  0359  1903               	skipnz
  3346  035A  2B69               	goto	l147
  3347                           
  3348                           ;TimeLib.c: 205: tstamp += (86400UL);
  3349  035B  3080               	movlw	128
  3350  035C  07B9               	addwf	time_make@tstamp,f
  3351  035D  3051               	movlw	81
  3352  035E  1803               	skipnc
  3353  035F  3052               	movlw	82
  3354  0360  07BA               	addwf	time_make@tstamp+1,f
  3355  0361  3001               	movlw	1
  3356  0362  1803               	skipnc
  3357  0363  3002               	movlw	2
  3358  0364  07BB               	addwf	time_make@tstamp+2,f
  3359  0365  3000               	movlw	0
  3360  0366  1803               	skipnc
  3361  0367  3001               	movlw	1
  3362  0368  07BC               	addwf	time_make@tstamp+3,f
  3363  0369                     l147:	
  3364  0369  3001               	movlw	1
  3365  036A  07BD               	addwf	time_make@i,f
  3366  036B  1803               	skipnc
  3367  036C  0ABE               	incf	time_make@i+1,f
  3368  036D  3000               	movlw	0
  3369  036E  07BE               	addwf	time_make@i+1,f
  3370  036F  2B39               	goto	l2097
  3371  0370                     l2099:	
  3372                           
  3373                           ;TimeLib.c: 206: }
  3374                           ;TimeLib.c: 208: for (i = 1; i < timeinfo->tm_mon; i++) {
  3375  0370  3001               	movlw	1
  3376  0371  1283               	bcf	3,5	;RP0=0, select bank0
  3377  0372  1303               	bcf	3,6	;RP1=0, select bank0
  3378  0373  00BD               	movwf	time_make@i
  3379  0374  3000               	movlw	0
  3380  0375  00BE               	movwf	time_make@i+1
  3381  0376                     l2111:	
  3382  0376  083F               	movf	time_make@timeinfo,w
  3383  0377  3E05               	addlw	5
  3384  0378  0084               	movwf	4
  3385  0379  083E               	movf	time_make@i+1,w
  3386  037A  3A80               	xorlw	128
  3387  037B  00B5               	movwf	??_time_make
  3388  037C  3080               	movlw	128
  3389  037D  0235               	subwf	??_time_make,w
  3390  037E  1D03               	skipz
  3391  037F  2B83               	goto	u2545
  3392  0380  1383               	bcf	3,7	;select IRP bank0
  3393  0381  0800               	movf	0,w
  3394  0382  023D               	subwf	time_make@i,w
  3395  0383                     u2545:	
  3396  0383  1803               	btfsc	3,0
  3397  0384  2BE9               	goto	l2113
  3398                           
  3399                           ;TimeLib.c: 209: if (i == 2 && time_is_leap(timeinfo->tm_year + 1970))
  3400  0385  3002               	movlw	2
  3401  0386  1283               	bcf	3,5	;RP0=0, select bank0
  3402  0387  1303               	bcf	3,6	;RP1=0, select bank0
  3403  0388  063D               	xorwf	time_make@i,w
  3404  0389  043E               	iorwf	time_make@i+1,w
  3405  038A  1D03               	skipz
  3406  038B  2BAE               	goto	l2107
  3407  038C  083F               	movf	time_make@timeinfo,w
  3408  038D  3E06               	addlw	6
  3409  038E  0084               	movwf	4
  3410  038F  1383               	bcf	3,7	;select IRP bank0
  3411  0390  0800               	movf	0,w
  3412  0391  3EB2               	addlw	178
  3413  0392  00AC               	movwf	time_is_leap@year
  3414  0393  3007               	movlw	7
  3415  0394  1803               	skipnc
  3416  0395  3008               	movlw	8
  3417  0396  00AD               	movwf	time_is_leap@year+1
  3418  0397  158A  2577  118A   	fcall	_time_is_leap
  3419  039A  1283               	bcf	3,5	;RP0=0, select bank0
  3420  039B  1303               	bcf	3,6	;RP1=0, select bank0
  3421  039C  082D               	movf	?_time_is_leap+1,w
  3422  039D  042C               	iorwf	?_time_is_leap,w
  3423  039E  1903               	skipnz
  3424  039F  2BAE               	goto	l2107
  3425                           
  3426                           ;TimeLib.c: 210: tstamp += (86400UL) * 29;
  3427  03A0  3080               	movlw	128
  3428  03A1  07B9               	addwf	time_make@tstamp,f
  3429  03A2  303B               	movlw	59
  3430  03A3  1803               	skipnc
  3431  03A4  303C               	movlw	60
  3432  03A5  07BA               	addwf	time_make@tstamp+1,f
  3433  03A6  3026               	movlw	38
  3434  03A7  1803               	skipnc
  3435  03A8  3027               	movlw	39
  3436  03A9  07BB               	addwf	time_make@tstamp+2,f
  3437  03AA  3000               	movlw	0
  3438  03AB  1803               	skipnc
  3439  03AC  3001               	movlw	1
  3440  03AD  2BE1               	goto	L8
  3441  03AE                     l2107:	
  3442                           
  3443                           ;TimeLib.c: 211: else
  3444                           ;TimeLib.c: 212: tstamp += (86400UL) * month_length[i - 1];
  3445  03AE  083D               	movf	time_make@i,w
  3446  03AF  3EFF               	addlw	255
  3447  03B0  3E01               	addlw	low (_month_length-__stringbase)
  3448  03B1  0084               	movwf	4
  3449  03B2  118A  208F  118A   	fcall	stringdir
  3450  03B5  00B5               	movwf	??_time_make
  3451  03B6  01B6               	clrf	??_time_make+1
  3452  03B7  01B7               	clrf	??_time_make+2
  3453  03B8  01B8               	clrf	??_time_make+3
  3454  03B9  0838               	movf	??_time_make+3,w
  3455  03BA  00A3               	movwf	___lmul@multiplier+3
  3456  03BB  0837               	movf	??_time_make+2,w
  3457  03BC  00A2               	movwf	___lmul@multiplier+2
  3458  03BD  0836               	movf	??_time_make+1,w
  3459  03BE  00A1               	movwf	___lmul@multiplier+1
  3460  03BF  0835               	movf	??_time_make,w
  3461  03C0  00A0               	movwf	___lmul@multiplier
  3462  03C1  3000               	movlw	0
  3463  03C2  00A7               	movwf	___lmul@multiplicand+3
  3464  03C3  3001               	movlw	1
  3465  03C4  00A6               	movwf	___lmul@multiplicand+2
  3466  03C5  3051               	movlw	81
  3467  03C6  00A5               	movwf	___lmul@multiplicand+1
  3468  03C7  3080               	movlw	128
  3469  03C8  00A4               	movwf	___lmul@multiplicand
  3470  03C9  158A  262D  118A   	fcall	___lmul
  3471  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  3472  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  3473  03CE  0820               	movf	?___lmul,w
  3474  03CF  07B9               	addwf	time_make@tstamp,f
  3475  03D0  0821               	movf	?___lmul+1,w
  3476  03D1  1103               	clrz
  3477  03D2  1803               	skipnc
  3478  03D3  3E01               	addlw	1
  3479  03D4  1D03               	btfss	3,2
  3480  03D5  07BA               	addwf	time_make@tstamp+1,f
  3481  03D6  0822               	movf	?___lmul+2,w
  3482  03D7  1103               	clrz
  3483  03D8  1803               	skipnc
  3484  03D9  3E01               	addlw	1
  3485  03DA  1D03               	btfss	3,2
  3486  03DB  07BB               	addwf	time_make@tstamp+2,f
  3487  03DC  0823               	movf	?___lmul+3,w
  3488  03DD  1103               	clrz
  3489  03DE  1803               	skipnc
  3490  03DF  3E01               	addlw	1
  3491  03E0  1D03               	btfss	3,2
  3492  03E1                     L8:	
  3493  03E1  07BC               	addwf	time_make@tstamp+3,f
  3494  03E2  3001               	movlw	1
  3495  03E3  07BD               	addwf	time_make@i,f
  3496  03E4  1803               	skipnc
  3497  03E5  0ABE               	incf	time_make@i+1,f
  3498  03E6  3000               	movlw	0
  3499  03E7  07BE               	addwf	time_make@i+1,f
  3500  03E8  2B76               	goto	l2111
  3501  03E9                     l2113:	
  3502                           
  3503                           ;TimeLib.c: 213: }
  3504                           ;TimeLib.c: 215: tstamp += (uint32_t) (timeinfo->tm_mday - 1) * (uint32_t) (86400UL);
  3505  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  3506  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  3507  03EB  083F               	movf	time_make@timeinfo,w
  3508  03EC  3E04               	addlw	4
  3509  03ED  0084               	movwf	4
  3510  03EE  1383               	bcf	3,7	;select IRP bank0
  3511  03EF  0800               	movf	0,w
  3512  03F0  3EFF               	addlw	255
  3513  03F1  00A0               	movwf	___lmul@multiplier
  3514  03F2  30FF               	movlw	255
  3515  03F3  1803               	skipnc
  3516  03F4  3000               	movlw	0
  3517  03F5  00A1               	movwf	___lmul@multiplier+1
  3518  03F6  01A2               	clrf	___lmul@multiplier+2
  3519  03F7  1BA1               	btfsc	___lmul@multiplier+1,7
  3520  03F8  03A2               	decf	___lmul@multiplier+2,f
  3521  03F9  0822               	movf	___lmul@multiplier+2,w
  3522  03FA  00A3               	movwf	___lmul@multiplier+3
  3523  03FB  3000               	movlw	0
  3524  03FC  00A7               	movwf	___lmul@multiplicand+3
  3525  03FD  3001               	movlw	1
  3526  03FE  00A6               	movwf	___lmul@multiplicand+2
  3527  03FF  3051               	movlw	81
  3528  0400  00A5               	movwf	___lmul@multiplicand+1
  3529  0401  3080               	movlw	128
  3530  0402  00A4               	movwf	___lmul@multiplicand
  3531  0403  158A  262D  118A   	fcall	___lmul
  3532  0406  1283               	bcf	3,5	;RP0=0, select bank0
  3533  0407  1303               	bcf	3,6	;RP1=0, select bank0
  3534  0408  0820               	movf	?___lmul,w
  3535  0409  07B9               	addwf	time_make@tstamp,f
  3536  040A  0821               	movf	?___lmul+1,w
  3537  040B  1103               	clrz
  3538  040C  1803               	skipnc
  3539  040D  3E01               	addlw	1
  3540  040E  1D03               	btfss	3,2
  3541  040F  07BA               	addwf	time_make@tstamp+1,f
  3542  0410  0822               	movf	?___lmul+2,w
  3543  0411  1103               	clrz
  3544  0412  1803               	skipnc
  3545  0413  3E01               	addlw	1
  3546  0414  1D03               	btfss	3,2
  3547  0415  07BB               	addwf	time_make@tstamp+2,f
  3548  0416  0823               	movf	?___lmul+3,w
  3549  0417  1103               	clrz
  3550  0418  1803               	skipnc
  3551  0419  3E01               	addlw	1
  3552  041A  1D03               	btfss	3,2
  3553  041B  07BC               	addwf	time_make@tstamp+3,f
  3554                           
  3555                           ;TimeLib.c: 217: tstamp += (uint32_t) timeinfo->tm_hour * (uint32_t) (3600UL);
  3556  041C  083F               	movf	time_make@timeinfo,w
  3557  041D  3E02               	addlw	2
  3558  041E  0084               	movwf	4
  3559  041F  1383               	bcf	3,7	;select IRP bank0
  3560  0420  0800               	movf	0,w
  3561  0421  00B5               	movwf	??_time_make
  3562  0422  01B6               	clrf	??_time_make+1
  3563  0423  01B7               	clrf	??_time_make+2
  3564  0424  01B8               	clrf	??_time_make+3
  3565  0425  0838               	movf	??_time_make+3,w
  3566  0426  00A3               	movwf	___lmul@multiplier+3
  3567  0427  0837               	movf	??_time_make+2,w
  3568  0428  00A2               	movwf	___lmul@multiplier+2
  3569  0429  0836               	movf	??_time_make+1,w
  3570  042A  00A1               	movwf	___lmul@multiplier+1
  3571  042B  0835               	movf	??_time_make,w
  3572  042C  00A0               	movwf	___lmul@multiplier
  3573  042D  3000               	movlw	0
  3574  042E  00A7               	movwf	___lmul@multiplicand+3
  3575  042F  3000               	movlw	0
  3576  0430  00A6               	movwf	___lmul@multiplicand+2
  3577  0431  300E               	movlw	14
  3578  0432  00A5               	movwf	___lmul@multiplicand+1
  3579  0433  3010               	movlw	16
  3580  0434  00A4               	movwf	___lmul@multiplicand
  3581  0435  158A  262D  118A   	fcall	___lmul
  3582  0438  1283               	bcf	3,5	;RP0=0, select bank0
  3583  0439  1303               	bcf	3,6	;RP1=0, select bank0
  3584  043A  0820               	movf	?___lmul,w
  3585  043B  07B9               	addwf	time_make@tstamp,f
  3586  043C  0821               	movf	?___lmul+1,w
  3587  043D  1103               	clrz
  3588  043E  1803               	skipnc
  3589  043F  3E01               	addlw	1
  3590  0440  1D03               	btfss	3,2
  3591  0441  07BA               	addwf	time_make@tstamp+1,f
  3592  0442  0822               	movf	?___lmul+2,w
  3593  0443  1103               	clrz
  3594  0444  1803               	skipnc
  3595  0445  3E01               	addlw	1
  3596  0446  1D03               	btfss	3,2
  3597  0447  07BB               	addwf	time_make@tstamp+2,f
  3598  0448  0823               	movf	?___lmul+3,w
  3599  0449  1103               	clrz
  3600  044A  1803               	skipnc
  3601  044B  3E01               	addlw	1
  3602  044C  1D03               	btfss	3,2
  3603  044D  07BC               	addwf	time_make@tstamp+3,f
  3604                           
  3605                           ;TimeLib.c: 218: tstamp += (uint32_t) timeinfo->tm_min * (uint32_t) (60UL);
  3606  044E  0A3F               	incf	time_make@timeinfo,w
  3607  044F  0084               	movwf	4
  3608  0450  1383               	bcf	3,7	;select IRP bank0
  3609  0451  0800               	movf	0,w
  3610  0452  00B5               	movwf	??_time_make
  3611  0453  01B6               	clrf	??_time_make+1
  3612  0454  01B7               	clrf	??_time_make+2
  3613  0455  01B8               	clrf	??_time_make+3
  3614  0456  0838               	movf	??_time_make+3,w
  3615  0457  00A3               	movwf	___lmul@multiplier+3
  3616  0458  0837               	movf	??_time_make+2,w
  3617  0459  00A2               	movwf	___lmul@multiplier+2
  3618  045A  0836               	movf	??_time_make+1,w
  3619  045B  00A1               	movwf	___lmul@multiplier+1
  3620  045C  0835               	movf	??_time_make,w
  3621  045D  00A0               	movwf	___lmul@multiplier
  3622  045E  3000               	movlw	0
  3623  045F  00A7               	movwf	___lmul@multiplicand+3
  3624  0460  3000               	movlw	0
  3625  0461  00A6               	movwf	___lmul@multiplicand+2
  3626  0462  3000               	movlw	0
  3627  0463  00A5               	movwf	___lmul@multiplicand+1
  3628  0464  303C               	movlw	60
  3629  0465  00A4               	movwf	___lmul@multiplicand
  3630  0466  158A  262D  118A   	fcall	___lmul
  3631  0469  1283               	bcf	3,5	;RP0=0, select bank0
  3632  046A  1303               	bcf	3,6	;RP1=0, select bank0
  3633  046B  0820               	movf	?___lmul,w
  3634  046C  07B9               	addwf	time_make@tstamp,f
  3635  046D  0821               	movf	?___lmul+1,w
  3636  046E  1103               	clrz
  3637  046F  1803               	skipnc
  3638  0470  3E01               	addlw	1
  3639  0471  1D03               	btfss	3,2
  3640  0472  07BA               	addwf	time_make@tstamp+1,f
  3641  0473  0822               	movf	?___lmul+2,w
  3642  0474  1103               	clrz
  3643  0475  1803               	skipnc
  3644  0476  3E01               	addlw	1
  3645  0477  1D03               	btfss	3,2
  3646  0478  07BB               	addwf	time_make@tstamp+2,f
  3647  0479  0823               	movf	?___lmul+3,w
  3648  047A  1103               	clrz
  3649  047B  1803               	skipnc
  3650  047C  3E01               	addlw	1
  3651  047D  1D03               	btfss	3,2
  3652  047E  07BC               	addwf	time_make@tstamp+3,f
  3653                           
  3654                           ;TimeLib.c: 219: tstamp += (uint32_t) timeinfo->tm_sec;
  3655  047F  083F               	movf	time_make@timeinfo,w
  3656  0480  0084               	movwf	4
  3657  0481  1383               	bcf	3,7	;select IRP bank0
  3658  0482  0800               	movf	0,w
  3659  0483  00B5               	movwf	??_time_make
  3660  0484  01B6               	clrf	??_time_make+1
  3661  0485  01B7               	clrf	??_time_make+2
  3662  0486  01B8               	clrf	??_time_make+3
  3663  0487  0835               	movf	??_time_make,w
  3664  0488  07B9               	addwf	time_make@tstamp,f
  3665  0489  0836               	movf	??_time_make+1,w
  3666  048A  1103               	clrz
  3667  048B  1803               	skipnc
  3668  048C  3E01               	addlw	1
  3669  048D  1D03               	btfss	3,2
  3670  048E  07BA               	addwf	time_make@tstamp+1,f
  3671  048F  0837               	movf	??_time_make+2,w
  3672  0490  1103               	clrz
  3673  0491  1803               	skipnc
  3674  0492  3E01               	addlw	1
  3675  0493  1D03               	btfss	3,2
  3676  0494  07BB               	addwf	time_make@tstamp+2,f
  3677  0495  0838               	movf	??_time_make+3,w
  3678  0496  1103               	clrz
  3679  0497  1803               	skipnc
  3680  0498  3E01               	addlw	1
  3681  0499  1D03               	btfss	3,2
  3682  049A  07BC               	addwf	time_make@tstamp+3,f
  3683                           
  3684                           ;TimeLib.c: 221: return tstamp;
  3685  049B  083C               	movf	time_make@tstamp+3,w
  3686  049C  00B4               	movwf	?_time_make+3
  3687  049D  083B               	movf	time_make@tstamp+2,w
  3688  049E  00B3               	movwf	?_time_make+2
  3689  049F  083A               	movf	time_make@tstamp+1,w
  3690  04A0  00B2               	movwf	?_time_make+1
  3691  04A1  0839               	movf	time_make@tstamp,w
  3692  04A2  00B1               	movwf	?_time_make
  3693  04A3  0008               	return
  3694  04A4                     __end_of_time_make:	
  3695                           
  3696                           	psect	text14
  3697  0D77                     __ptext14:	
  3698 ;; *************** function _time_is_leap *****************
  3699 ;; Defined at:
  3700 ;;		line 60 in file "../TimeLib.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  year            2   12[BANK0 ] unsigned int 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;		None
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  2   12[BANK0 ] int 
  3707 ;; Registers used:
  3708 ;;		wreg, status,2, status,0, pclath, cstack
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3714 ;;      Params:         0       2       0       0       0
  3715 ;;      Locals:         0       1       0       0       0
  3716 ;;      Temps:          0       2       0       0       0
  3717 ;;      Totals:         0       5       0       0       0
  3718 ;;Total ram usage:        5 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    3
  3721 ;; This function calls:
  3722 ;;		___lwmod
  3723 ;; This function is called by:
  3724 ;;		_time_make
  3725 ;;		_time_break
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           
  3730                           ;psect for function _time_is_leap
  3731  0D77                     _time_is_leap:	
  3732                           
  3733                           ;TimeLib.c: 63: return((year % 4 == 0 && year % 100 != 0) || year % 400 == 0);
  3734                           
  3735                           ;incstack = 0
  3736                           ; Regs used in _time_is_leap: [wreg+status,2+status,0+pclath+cstack]
  3737  0D77  1283               	bcf	3,5	;RP0=0, select bank0
  3738  0D78  1303               	bcf	3,6	;RP1=0, select bank0
  3739  0D79  01B0               	clrf	_time_is_leap$218
  3740  0D7A  0AB0               	incf	_time_is_leap$218,f
  3741  0D7B  3003               	movlw	3
  3742  0D7C  052C               	andwf	time_is_leap@year,w
  3743  0D7D  00AE               	movwf	??_time_is_leap
  3744  0D7E  3000               	movlw	0
  3745  0D7F  052D               	andwf	time_is_leap@year+1,w
  3746  0D80  00AF               	movwf	??_time_is_leap+1
  3747  0D81  082F               	movf	??_time_is_leap+1,w
  3748  0D82  042E               	iorwf	??_time_is_leap,w
  3749  0D83  1D03               	skipz
  3750  0D84  2D98               	goto	l1839
  3751  0D85  3064               	movlw	100
  3752  0D86  00A7               	movwf	___lwmod@divisor
  3753  0D87  3000               	movlw	0
  3754  0D88  00A8               	movwf	___lwmod@divisor+1
  3755  0D89  082D               	movf	time_is_leap@year+1,w
  3756  0D8A  01AA               	clrf	___lwmod@dividend+1
  3757  0D8B  07AA               	addwf	___lwmod@dividend+1,f
  3758  0D8C  082C               	movf	time_is_leap@year,w
  3759  0D8D  01A9               	clrf	___lwmod@dividend
  3760  0D8E  07A9               	addwf	___lwmod@dividend,f
  3761  0D8F  158A  2541  158A   	fcall	___lwmod
  3762  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  3763  0D93  1303               	bcf	3,6	;RP1=0, select bank0
  3764  0D94  0828               	movf	?___lwmod+1,w
  3765  0D95  0427               	iorwf	?___lwmod,w
  3766  0D96  1D03               	skipz
  3767  0D97  2DAA               	goto	l1843
  3768  0D98                     l1839:	
  3769  0D98  3090               	movlw	144
  3770  0D99  00A7               	movwf	___lwmod@divisor
  3771  0D9A  3001               	movlw	1
  3772  0D9B  00A8               	movwf	___lwmod@divisor+1
  3773  0D9C  082D               	movf	time_is_leap@year+1,w
  3774  0D9D  01AA               	clrf	___lwmod@dividend+1
  3775  0D9E  07AA               	addwf	___lwmod@dividend+1,f
  3776  0D9F  082C               	movf	time_is_leap@year,w
  3777  0DA0  01A9               	clrf	___lwmod@dividend
  3778  0DA1  07A9               	addwf	___lwmod@dividend,f
  3779  0DA2  158A  2541         	fcall	___lwmod
  3780  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  3781  0DA5  1303               	bcf	3,6	;RP1=0, select bank0
  3782  0DA6  0828               	movf	?___lwmod+1,w
  3783  0DA7  0427               	iorwf	?___lwmod,w
  3784  0DA8  1D03               	btfss	3,2
  3785  0DA9  01B0               	clrf	_time_is_leap$218
  3786  0DAA                     l1843:	
  3787  0DAA  0830               	movf	_time_is_leap$218,w
  3788  0DAB  00AE               	movwf	??_time_is_leap
  3789  0DAC  01AF               	clrf	??_time_is_leap+1
  3790  0DAD  082E               	movf	??_time_is_leap,w
  3791  0DAE  00AC               	movwf	?_time_is_leap
  3792  0DAF  082F               	movf	??_time_is_leap+1,w
  3793  0DB0  00AD               	movwf	?_time_is_leap+1
  3794  0DB1  0008               	return
  3795  0DB2                     __end_of_time_is_leap:	
  3796                           
  3797                           	psect	text15
  3798  0E2D                     __ptext15:	
  3799 ;; *************** function ___lmul *****************
  3800 ;; Defined at:
  3801 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3804 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  product         4    8[BANK0 ] unsigned long 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  4    0[BANK0 ] unsigned long 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3816 ;;      Params:         0       8       0       0       0
  3817 ;;      Locals:         0       4       0       0       0
  3818 ;;      Temps:          1       0       0       0       0
  3819 ;;      Totals:         1      12       0       0       0
  3820 ;;Total ram usage:       13 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    2
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_time_make
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           
  3831                           ;psect for function ___lmul
  3832  0E2D                     ___lmul:	
  3833                           
  3834                           ;incstack = 0
  3835                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3836  0E2D  3000               	movlw	0
  3837  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  3838  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  3839  0E30  00AB               	movwf	___lmul@product+3
  3840  0E31  3000               	movlw	0
  3841  0E32  00AA               	movwf	___lmul@product+2
  3842  0E33  3000               	movlw	0
  3843  0E34  00A9               	movwf	___lmul@product+1
  3844  0E35  3000               	movlw	0
  3845  0E36  00A8               	movwf	___lmul@product
  3846  0E37                     l2039:	
  3847  0E37  1C20               	btfss	___lmul@multiplier,0
  3848  0E38  2E4D               	goto	l2043
  3849  0E39  0824               	movf	___lmul@multiplicand,w
  3850  0E3A  07A8               	addwf	___lmul@product,f
  3851  0E3B  0825               	movf	___lmul@multiplicand+1,w
  3852  0E3C  1103               	clrz
  3853  0E3D  1803               	skipnc
  3854  0E3E  3E01               	addlw	1
  3855  0E3F  1D03               	btfss	3,2
  3856  0E40  07A9               	addwf	___lmul@product+1,f
  3857  0E41  0826               	movf	___lmul@multiplicand+2,w
  3858  0E42  1103               	clrz
  3859  0E43  1803               	skipnc
  3860  0E44  3E01               	addlw	1
  3861  0E45  1D03               	btfss	3,2
  3862  0E46  07AA               	addwf	___lmul@product+2,f
  3863  0E47  0827               	movf	___lmul@multiplicand+3,w
  3864  0E48  1103               	clrz
  3865  0E49  1803               	skipnc
  3866  0E4A  3E01               	addlw	1
  3867  0E4B  1D03               	btfss	3,2
  3868  0E4C  07AB               	addwf	___lmul@product+3,f
  3869  0E4D                     l2043:	
  3870  0E4D  3001               	movlw	1
  3871  0E4E  00F4               	movwf	??___lmul
  3872  0E4F                     u2395:	
  3873  0E4F  1003               	clrc
  3874  0E50  0DA4               	rlf	___lmul@multiplicand,f
  3875  0E51  0DA5               	rlf	___lmul@multiplicand+1,f
  3876  0E52  0DA6               	rlf	___lmul@multiplicand+2,f
  3877  0E53  0DA7               	rlf	___lmul@multiplicand+3,f
  3878  0E54  0BF4               	decfsz	??___lmul,f
  3879  0E55  2E4F               	goto	u2395
  3880  0E56  3001               	movlw	1
  3881  0E57                     u2405:	
  3882  0E57  1003               	clrc
  3883  0E58  0CA3               	rrf	___lmul@multiplier+3,f
  3884  0E59  0CA2               	rrf	___lmul@multiplier+2,f
  3885  0E5A  0CA1               	rrf	___lmul@multiplier+1,f
  3886  0E5B  0CA0               	rrf	___lmul@multiplier,f
  3887  0E5C  3EFF               	addlw	-1
  3888  0E5D  1D03               	skipz
  3889  0E5E  2E57               	goto	u2405
  3890  0E5F  0823               	movf	___lmul@multiplier+3,w
  3891  0E60  0422               	iorwf	___lmul@multiplier+2,w
  3892  0E61  0421               	iorwf	___lmul@multiplier+1,w
  3893  0E62  0420               	iorwf	___lmul@multiplier,w
  3894  0E63  1D03               	skipz
  3895  0E64  2E37               	goto	l2039
  3896  0E65  082B               	movf	___lmul@product+3,w
  3897  0E66  00A3               	movwf	?___lmul+3
  3898  0E67  082A               	movf	___lmul@product+2,w
  3899  0E68  00A2               	movwf	?___lmul+2
  3900  0E69  0829               	movf	___lmul@product+1,w
  3901  0E6A  00A1               	movwf	?___lmul+1
  3902  0E6B  0828               	movf	___lmul@product,w
  3903  0E6C  00A0               	movwf	?___lmul
  3904  0E6D  0008               	return
  3905  0E6E                     __end_of___lmul:	
  3906                           
  3907                           	psect	text16
  3908  0CAA                     __ptext16:	
  3909 ;; *************** function _tick_init *****************
  3910 ;; Defined at:
  3911 ;;		line 30 in file "../Tick/Tick-PIC16.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;		None
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;		None
  3916 ;; Return value:  Size  Location     Type
  3917 ;;		None               void
  3918 ;; Registers used:
  3919 ;;		wreg, status,2
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3925 ;;      Params:         0       0       0       0       0
  3926 ;;      Locals:         0       0       0       0       0
  3927 ;;      Temps:          0       0       0       0       0
  3928 ;;      Totals:         0       0       0       0       0
  3929 ;;Total ram usage:        0 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; Hardware stack levels required when called:    2
  3932 ;; This function calls:
  3933 ;;		Nothing
  3934 ;; This function is called by:
  3935 ;;		_main
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           
  3940                           ;psect for function _tick_init
  3941  0CAA                     _tick_init:	
  3942                           
  3943                           ;Tick-PIC16.c: 32: T1CON = 0;
  3944                           
  3945                           ;incstack = 0
  3946                           ; Regs used in _tick_init: [wreg+status,2]
  3947  0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  3948  0CAB  1303               	bcf	3,6	;RP1=0, select bank0
  3949  0CAC  0190               	clrf	16	;volatile
  3950                           
  3951                           ;Tick-PIC16.c: 33: TMR1L = 0;
  3952  0CAD  018E               	clrf	14	;volatile
  3953                           
  3954                           ;Tick-PIC16.c: 34: TMR1H = 0;
  3955  0CAE  018F               	clrf	15	;volatile
  3956                           
  3957                           ;Tick-PIC16.c: 36: PIR1bits.TMR1IF = 0;
  3958  0CAF  100C               	bcf	12,0	;volatile
  3959                           
  3960                           ;Tick-PIC16.c: 37: PIE1bits.TMR1IE = 1;
  3961  0CB0  1683               	bsf	3,5	;RP0=1, select bank1
  3962  0CB1  1303               	bcf	3,6	;RP1=0, select bank1
  3963  0CB2  140C               	bsf	12,0	;volatile
  3964                           
  3965                           ;Tick-PIC16.c: 38: INTCONbits.GIE = 1;
  3966  0CB3  178B               	bsf	11,7	;volatile
  3967                           
  3968                           ;Tick-PIC16.c: 39: INTCONbits.PEIE = 1;
  3969  0CB4  170B               	bsf	11,6	;volatile
  3970                           
  3971                           ;Tick-PIC16.c: 41: T1CON = 0x31;
  3972  0CB5  3031               	movlw	49
  3973  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  3974  0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  3975  0CB8  0090               	movwf	16	;volatile
  3976  0CB9  0008               	return
  3977  0CBA                     __end_of_tick_init:	
  3978                           
  3979                           	psect	text17
  3980  04A4                     __ptext17:	
  3981 ;; *************** function _printf *****************
  3982 ;; Defined at:
  3983 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  f               1    wreg     PTR const unsigned char 
  3986 ;;		 -> STR_2(44), STR_1(23), 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  f               1   34[BANK0 ] PTR const unsigned char 
  3989 ;;		 -> STR_2(44), STR_1(23), 
  3990 ;;  _val            4   29[BANK0 ] struct .
  3991 ;;  width           2   35[BANK0 ] int 
  3992 ;;  c               1   37[BANK0 ] char 
  3993 ;;  flag            1   33[BANK0 ] unsigned char 
  3994 ;;  prec            1   28[BANK0 ] char 
  3995 ;;  ap              1   27[BANK0 ] PTR void [1]
  3996 ;;		 -> ?_printf(2), 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  2   12[BANK0 ] int 
  3999 ;; Registers used:
  4000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4006 ;;      Params:         0      12       0       0       0
  4007 ;;      Locals:         0      11       0       0       0
  4008 ;;      Temps:          0       3       0       0       0
  4009 ;;      Totals:         0      26       0       0       0
  4010 ;;Total ram usage:       26 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    3
  4013 ;; This function calls:
  4014 ;;		___lwdiv
  4015 ;;		___lwmod
  4016 ;;		___wmul
  4017 ;;		_isdigit
  4018 ;;		_putch
  4019 ;; This function is called by:
  4020 ;;		_main
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           
  4025                           ;psect for function _printf
  4026  04A4                     _printf:	
  4027                           
  4028                           ;incstack = 0
  4029                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4030                           ;printf@f stored from wreg
  4031  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  4032  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  4033  04A6  00C2               	movwf	printf@f
  4034                           
  4035                           ;doprnt.c: 466: va_list ap;
  4036                           ;doprnt.c: 499: signed char c;
  4037                           ;doprnt.c: 501: int width;
  4038                           ;doprnt.c: 506: signed char prec;
  4039                           ;doprnt.c: 508: unsigned char flag;
  4040                           ;doprnt.c: 527: union {
  4041                           ;doprnt.c: 528: unsigned int _val;
  4042                           ;doprnt.c: 529: struct {
  4043                           ;doprnt.c: 530: const char * _cp;
  4044                           ;doprnt.c: 531: unsigned _len;
  4045                           ;doprnt.c: 532: } _str;
  4046                           ;doprnt.c: 533: } _val;
  4047                           ;doprnt.c: 542: *ap = __va_start();
  4048  04A7  302C               	movlw	?_printf& (0+255)
  4049  04A8  00B8               	movwf	??_printf
  4050  04A9  0838               	movf	??_printf,w
  4051  04AA  00BB               	movwf	printf@ap
  4052  04AB                     l2225:	
  4053                           ;doprnt.c: 545: while(c = *f++) {
  4054                           
  4055  04AB  3001               	movlw	1
  4056  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  4057  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  4058  04AE  07C2               	addwf	printf@f,f
  4059  04AF  30FF               	movlw	-1
  4060  04B0  0742               	addwf	printf@f,w
  4061  04B1  0084               	movwf	4
  4062  04B2  118A  208F  118A   	fcall	stringdir
  4063  04B5  00B8               	movwf	??_printf
  4064  04B6  0838               	movf	??_printf,w
  4065  04B7  00C5               	movwf	printf@c
  4066  04B8  08C5               	movf	printf@c,f
  4067  04B9  1903               	btfsc	3,2
  4068  04BA  0008               	return
  4069                           
  4070                           ;doprnt.c: 547: if(c != '%')
  4071  04BB  0845               	movf	printf@c,w
  4072  04BC  3A25               	xorlw	37
  4073  04BD  1903               	skipnz
  4074  04BE  2CC4               	goto	l2139
  4075                           
  4076                           ;doprnt.c: 549: {
  4077                           ;doprnt.c: 550: (putch(c) );
  4078  04BF  0845               	movf	printf@c,w
  4079  04C0  158A  247F  118A   	fcall	_putch
  4080                           
  4081                           ;doprnt.c: 551: continue;
  4082  04C3  2CAB               	goto	l2225
  4083  04C4                     l2139:	
  4084                           
  4085                           ;doprnt.c: 552: }
  4086                           ;doprnt.c: 555: width = 0;
  4087  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  4088  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  4089  04C6  01C3               	clrf	printf@width
  4090  04C7  01C4               	clrf	printf@width+1
  4091                           
  4092                           ;doprnt.c: 557: flag = 0;
  4093  04C8  01C1               	clrf	printf@flag
  4094                           
  4095                           ;doprnt.c: 560: switch(*f) {
  4096                           
  4097                           ;doprnt.c: 559: for(;;) {
  4098  04C9  2CCF               	goto	l2145
  4099  04CA                     l238:	
  4100                           ;doprnt.c: 588: case '0':
  4101                           
  4102                           
  4103                           ;doprnt.c: 589: flag |= 0x04;
  4104  04CA  1541               	bsf	printf@flag,2
  4105                           
  4106                           ;doprnt.c: 590: f++;
  4107  04CB  3001               	movlw	1
  4108  04CC  00B8               	movwf	??_printf
  4109  04CD  0838               	movf	??_printf,w
  4110  04CE  07C2               	addwf	printf@f,f
  4111  04CF                     l2145:	
  4112                           ;doprnt.c: 593: }
  4113                           
  4114                           ;doprnt.c: 591: continue;
  4115                           
  4116  04CF  0842               	movf	printf@f,w
  4117  04D0  0084               	movwf	4
  4118  04D1  118A  208F  118A   	fcall	stringdir
  4119                           
  4120                           ; Switch size 1, requested type "space"
  4121                           ; Number of cases is 1, Range of values is 48 to 48
  4122                           ; switch strategies available:
  4123                           ; Name         Instructions Cycles
  4124                           ; simple_byte            4     3 (average)
  4125                           ; direct_byte           12    10 (fixed)
  4126                           ; jumptable            263     9 (fixed)
  4127                           ;	Chosen strategy is simple_byte
  4128  04D4  3A30               	xorlw	48	; case 48
  4129  04D5  1903               	skipnz
  4130  04D6  2CCA               	goto	l238
  4131  04D7  2CD8               	goto	l2147
  4132  04D8                     l2147:	
  4133                           ;doprnt.c: 595: }
  4134                           
  4135                           ;doprnt.c: 594: break;
  4136                           
  4137                           
  4138                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  4139  04D8  0842               	movf	printf@f,w
  4140  04D9  0084               	movwf	4
  4141  04DA  118A  208F  118A   	fcall	stringdir
  4142  04DD  158A  248C  118A   	fcall	_isdigit
  4143  04E0  1C03               	btfss	3,0
  4144  04E1  2D1C               	goto	l2161
  4145                           
  4146                           ;doprnt.c: 607: width = 0;
  4147  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  4148  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  4149  04E4  01C3               	clrf	printf@width
  4150  04E5  01C4               	clrf	printf@width+1
  4151  04E6                     l2151:	
  4152                           ;doprnt.c: 608: do {
  4153                           
  4154                           
  4155                           ;doprnt.c: 609: width *= 10;
  4156  04E6  300A               	movlw	10
  4157  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  4158  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  4159  04E9  00A0               	movwf	___wmul@multiplier
  4160  04EA  3000               	movlw	0
  4161  04EB  00A1               	movwf	___wmul@multiplier+1
  4162  04EC  0844               	movf	printf@width+1,w
  4163  04ED  01A3               	clrf	___wmul@multiplicand+1
  4164  04EE  07A3               	addwf	___wmul@multiplicand+1,f
  4165  04EF  0843               	movf	printf@width,w
  4166  04F0  01A2               	clrf	___wmul@multiplicand
  4167  04F1  07A2               	addwf	___wmul@multiplicand,f
  4168  04F2  158A  24F5  118A   	fcall	___wmul
  4169  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  4170  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  4171  04F7  0821               	movf	?___wmul+1,w
  4172  04F8  01C4               	clrf	printf@width+1
  4173  04F9  07C4               	addwf	printf@width+1,f
  4174  04FA  0820               	movf	?___wmul,w
  4175  04FB  01C3               	clrf	printf@width
  4176  04FC  07C3               	addwf	printf@width,f
  4177                           
  4178                           ;doprnt.c: 610: width += *f++ - '0';
  4179  04FD  0842               	movf	printf@f,w
  4180  04FE  0084               	movwf	4
  4181  04FF  118A  208F  118A   	fcall	stringdir
  4182  0502  3ED0               	addlw	208
  4183  0503  00B8               	movwf	??_printf
  4184  0504  30FF               	movlw	255
  4185  0505  1803               	skipnc
  4186  0506  3000               	movlw	0
  4187  0507  00B9               	movwf	??_printf+1
  4188  0508  0838               	movf	??_printf,w
  4189  0509  07C3               	addwf	printf@width,f
  4190  050A  1803               	skipnc
  4191  050B  0AC4               	incf	printf@width+1,f
  4192  050C  0839               	movf	??_printf+1,w
  4193  050D  07C4               	addwf	printf@width+1,f
  4194  050E  3001               	movlw	1
  4195  050F  00B8               	movwf	??_printf
  4196  0510  0838               	movf	??_printf,w
  4197  0511  07C2               	addwf	printf@f,f
  4198                           
  4199                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  4200  0512  0842               	movf	printf@f,w
  4201  0513  0084               	movwf	4
  4202  0514  118A  208F  118A   	fcall	stringdir
  4203  0517  158A  248C  118A   	fcall	_isdigit
  4204  051A  1803               	btfsc	3,0
  4205  051B  2CE6               	goto	l2151
  4206  051C                     l2161:	
  4207                           ;doprnt.c: 831: }
  4208                           
  4209                           ;doprnt.c: 822: continue;
  4210                           
  4211                           ;doprnt.c: 811: default:
  4212                           
  4213                           ;doprnt.c: 707: case 'i':
  4214                           ;doprnt.c: 708: break;
  4215                           
  4216                           ;doprnt.c: 706: case 'd':
  4217                           
  4218                           ;doprnt.c: 647: goto alldone;
  4219                           
  4220                           ;doprnt.c: 646: case 0:
  4221                           
  4222                           ;doprnt.c: 617: }
  4223                           ;doprnt.c: 644: switch(c = *f++) {
  4224                           
  4225  051C  3001               	movlw	1
  4226  051D  1283               	bcf	3,5	;RP0=0, select bank0
  4227  051E  1303               	bcf	3,6	;RP1=0, select bank0
  4228  051F  07C2               	addwf	printf@f,f
  4229  0520  30FF               	movlw	-1
  4230  0521  0742               	addwf	printf@f,w
  4231  0522  0084               	movwf	4
  4232  0523  118A  208F  118A   	fcall	stringdir
  4233  0526  00C5               	movwf	printf@c
  4234                           
  4235                           ; Switch size 1, requested type "space"
  4236                           ; Number of cases is 3, Range of values is 0 to 105
  4237                           ; switch strategies available:
  4238                           ; Name         Instructions Cycles
  4239                           ; simple_byte           10     6 (average)
  4240                           ; direct_byte          219     7 (fixed)
  4241                           ; jumptable            260     6 (fixed)
  4242                           ;	Chosen strategy is simple_byte
  4243  0527  3A00               	xorlw	0	; case 0
  4244  0528  1903               	skipnz
  4245  0529  2E18               	goto	l273
  4246  052A  3A64               	xorlw	100	; case 100
  4247  052B  1903               	skipnz
  4248  052C  2D31               	goto	l2163
  4249  052D  3A0D               	xorlw	13	; case 105
  4250  052E  1903               	skipnz
  4251  052F  2D31               	goto	l2163
  4252  0530  2CAB               	goto	l2225
  4253  0531                     l2163:	
  4254                           
  4255                           ;doprnt.c: 1262: {
  4256                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4257  0531  1283               	bcf	3,5	;RP0=0, select bank0
  4258  0532  1303               	bcf	3,6	;RP1=0, select bank0
  4259  0533  083B               	movf	printf@ap,w
  4260  0534  0084               	movwf	4
  4261  0535  1383               	bcf	3,7	;select IRP bank0
  4262  0536  0800               	movf	0,w
  4263  0537  00BD               	movwf	printf@_val
  4264  0538  0A84               	incf	4,f
  4265  0539  0800               	movf	0,w
  4266  053A  00BE               	movwf	printf@_val+1
  4267  053B  3002               	movlw	2
  4268  053C  00B8               	movwf	??_printf
  4269  053D  0838               	movf	??_printf,w
  4270  053E  07BB               	addwf	printf@ap,f
  4271                           
  4272                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  4273  053F  1FBE               	btfss	printf@_val+1,7
  4274  0540  2D4A               	goto	l2173
  4275                           
  4276                           ;doprnt.c: 1271: flag |= 0x03;
  4277  0541  3003               	movlw	3
  4278  0542  00B8               	movwf	??_printf
  4279  0543  0838               	movf	??_printf,w
  4280  0544  04C1               	iorwf	printf@flag,f
  4281                           
  4282                           ;doprnt.c: 1272: _val._val = -_val._val;
  4283  0545  09BD               	comf	printf@_val,f
  4284  0546  09BE               	comf	printf@_val+1,f
  4285  0547  0ABD               	incf	printf@_val,f
  4286  0548  1903               	skipnz
  4287  0549  0ABE               	incf	printf@_val+1,f
  4288  054A                     l2173:	
  4289                           
  4290                           ;doprnt.c: 1273: }
  4291                           ;doprnt.c: 1275: }
  4292                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4293  054A  01C5               	clrf	printf@c
  4294  054B  0AC5               	incf	printf@c,f
  4295  054C  0845               	movf	printf@c,w
  4296  054D  3A05               	xorlw	5
  4297  054E  1903               	btfsc	3,2
  4298  054F  2D6D               	goto	l2185
  4299  0550                     l2177:	
  4300                           
  4301                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  4302  0550  0845               	movf	printf@c,w
  4303  0551  00B8               	movwf	??_printf
  4304  0552  0738               	addwf	??_printf,w
  4305  0553  3E0D               	addlw	low (_dpowers-__stringbase)
  4306  0554  0084               	movwf	4
  4307  0555  118A  208F  118A   	fcall	stringdir
  4308  0558  00B9               	movwf	??_printf+1
  4309  0559  118A  208F  118A   	fcall	stringdir
  4310  055C  00BA               	movwf	??_printf+2
  4311  055D  083A               	movf	??_printf+2,w
  4312  055E  023E               	subwf	printf@_val+1,w
  4313  055F  1D03               	skipz
  4314  0560  2D63               	goto	u2665
  4315  0561  0839               	movf	??_printf+1,w
  4316  0562  023D               	subwf	printf@_val,w
  4317  0563                     u2665:	
  4318  0563  1C03               	btfss	3,0
  4319  0564  2D6D               	goto	l2185
  4320                           
  4321                           ;doprnt.c: 1316: break;
  4322  0565  3001               	movlw	1
  4323  0566  00B8               	movwf	??_printf
  4324  0567  0838               	movf	??_printf,w
  4325  0568  07C5               	addwf	printf@c,f
  4326  0569  0845               	movf	printf@c,w
  4327  056A  3A05               	xorlw	5
  4328  056B  1D03               	skipz
  4329  056C  2D50               	goto	l2177
  4330  056D                     l2185:	
  4331                           
  4332                           ;doprnt.c: 1354: if(width && flag & 0x03)
  4333  056D  0844               	movf	printf@width+1,w
  4334  056E  0443               	iorwf	printf@width,w
  4335  056F  1903               	skipnz
  4336  0570  2D7B               	goto	l256
  4337  0571  0841               	movf	printf@flag,w
  4338  0572  3903               	andlw	3
  4339  0573  1903               	btfsc	3,2
  4340  0574  2D7B               	goto	l256
  4341                           
  4342                           ;doprnt.c: 1355: width--;
  4343  0575  30FF               	movlw	255
  4344  0576  07C3               	addwf	printf@width,f
  4345  0577  1803               	skipnc
  4346  0578  0AC4               	incf	printf@width+1,f
  4347  0579  30FF               	movlw	255
  4348  057A  07C4               	addwf	printf@width+1,f
  4349  057B                     l256:	
  4350                           
  4351                           ;doprnt.c: 1390: if(width > c)
  4352  057B  0845               	movf	printf@c,w
  4353  057C  00B8               	movwf	??_printf
  4354  057D  01B9               	clrf	??_printf+1
  4355  057E  1BB8               	btfsc	??_printf,7
  4356  057F  03B9               	decf	??_printf+1,f
  4357  0580  0839               	movf	??_printf+1,w
  4358  0581  3A80               	xorlw	128
  4359  0582  00BA               	movwf	??_printf+2
  4360  0583  0844               	movf	printf@width+1,w
  4361  0584  3A80               	xorlw	128
  4362  0585  023A               	subwf	??_printf+2,w
  4363  0586  1D03               	skipz
  4364  0587  2D8A               	goto	u2705
  4365  0588  0843               	movf	printf@width,w
  4366  0589  0238               	subwf	??_printf,w
  4367  058A                     u2705:	
  4368  058A  1803               	skipnc
  4369  058B  2D9A               	goto	l2193
  4370                           
  4371                           ;doprnt.c: 1391: width -= c;
  4372  058C  1283               	bcf	3,5	;RP0=0, select bank0
  4373  058D  1303               	bcf	3,6	;RP1=0, select bank0
  4374  058E  0845               	movf	printf@c,w
  4375  058F  00B8               	movwf	??_printf
  4376  0590  01B9               	clrf	??_printf+1
  4377  0591  1BB8               	btfsc	??_printf,7
  4378  0592  03B9               	decf	??_printf+1,f
  4379  0593  0838               	movf	??_printf,w
  4380  0594  02C3               	subwf	printf@width,f
  4381  0595  0839               	movf	??_printf+1,w
  4382  0596  1C03               	skipc
  4383  0597  03C4               	decf	printf@width+1,f
  4384  0598  02C4               	subwf	printf@width+1,f
  4385  0599  2D9E               	goto	l2195
  4386  059A                     l2193:	
  4387                           
  4388                           ;doprnt.c: 1392: else
  4389                           ;doprnt.c: 1393: width = 0;
  4390  059A  1283               	bcf	3,5	;RP0=0, select bank0
  4391  059B  1303               	bcf	3,6	;RP1=0, select bank0
  4392  059C  01C3               	clrf	printf@width
  4393  059D  01C4               	clrf	printf@width+1
  4394  059E                     l2195:	
  4395                           
  4396                           ;doprnt.c: 1396: if(flag & 0x04) {
  4397  059E  1D41               	btfss	printf@flag,2
  4398  059F  2DBB               	goto	l2207
  4399                           
  4400                           ;doprnt.c: 1401: if(flag & 0x03)
  4401  05A0  0841               	movf	printf@flag,w
  4402  05A1  3903               	andlw	3
  4403  05A2  1903               	btfsc	3,2
  4404  05A3  2DA8               	goto	l2201
  4405                           
  4406                           ;doprnt.c: 1402: (putch('-') );
  4407  05A4  302D               	movlw	45
  4408  05A5  158A  247F  118A   	fcall	_putch
  4409  05A8                     l2201:	
  4410                           
  4411                           ;doprnt.c: 1424: if(width)
  4412  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  4413  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  4414  05AA                     L10:	
  4415  05AA  0844               	movf	printf@width+1,w
  4416  05AB  0443               	iorwf	printf@width,w
  4417  05AC  1903               	skipnz
  4418  05AD  2DD7               	goto	l2217
  4419                           
  4420                           ;doprnt.c: 1426: (putch('0') );
  4421                           
  4422                           ;doprnt.c: 1425: do
  4423  05AE  3030               	movlw	48
  4424  05AF  158A  247F  118A   	fcall	_putch
  4425                           
  4426                           ;doprnt.c: 1427: while(--width);
  4427  05B2  30FF               	movlw	255
  4428  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  4429  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  4430  05B5  07C3               	addwf	printf@width,f
  4431  05B6  1803               	skipnc
  4432  05B7  0AC4               	incf	printf@width+1,f
  4433  05B8  30FF               	movlw	255
  4434  05B9  07C4               	addwf	printf@width+1,f
  4435  05BA  2DAA               	goto	L10
  4436  05BB                     l2207:	
  4437                           ;doprnt.c: 1429: } else
  4438                           
  4439                           
  4440                           ;doprnt.c: 1431: {
  4441                           ;doprnt.c: 1433: if(width
  4442                           ;doprnt.c: 1437: )
  4443  05BB  0844               	movf	printf@width+1,w
  4444  05BC  0443               	iorwf	printf@width,w
  4445  05BD  1903               	skipnz
  4446  05BE  2DCF               	goto	l2213
  4447  05BF                     l2209:	
  4448                           ;doprnt.c: 1438: do
  4449                           
  4450                           
  4451                           ;doprnt.c: 1439: (putch(' ') );
  4452  05BF  3020               	movlw	32
  4453  05C0  158A  247F  118A   	fcall	_putch
  4454                           
  4455                           ;doprnt.c: 1440: while(--width);
  4456  05C3  30FF               	movlw	255
  4457  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  4458  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  4459  05C6  07C3               	addwf	printf@width,f
  4460  05C7  1803               	skipnc
  4461  05C8  0AC4               	incf	printf@width+1,f
  4462  05C9  30FF               	movlw	255
  4463  05CA  07C4               	addwf	printf@width+1,f
  4464  05CB  0844               	movf	printf@width+1,w
  4465  05CC  0443               	iorwf	printf@width,w
  4466  05CD  1D03               	skipz
  4467  05CE  2DBF               	goto	l2209
  4468  05CF                     l2213:	
  4469                           
  4470                           ;doprnt.c: 1447: if(flag & 0x03)
  4471  05CF  0841               	movf	printf@flag,w
  4472  05D0  3903               	andlw	3
  4473  05D1  1903               	btfsc	3,2
  4474  05D2  2DD7               	goto	l2217
  4475                           
  4476                           ;doprnt.c: 1448: (putch('-') );
  4477  05D3  302D               	movlw	45
  4478  05D4  158A  247F  118A   	fcall	_putch
  4479  05D7                     l2217:	
  4480                           
  4481                           ;doprnt.c: 1478: }
  4482                           ;doprnt.c: 1481: prec = c;
  4483  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  4484  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  4485  05D9  0845               	movf	printf@c,w
  4486  05DA  00B8               	movwf	??_printf
  4487  05DB  0838               	movf	??_printf,w
  4488  05DC  00BC               	movwf	printf@prec
  4489  05DD                     l2223:	
  4490                           ;doprnt.c: 1483: while(prec--) {
  4491                           
  4492  05DD  30FF               	movlw	-1
  4493  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  4494  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  4495  05E0  00B8               	movwf	??_printf
  4496  05E1  0838               	movf	??_printf,w
  4497  05E2  07BC               	addwf	printf@prec,f
  4498  05E3  083C               	movf	printf@prec,w
  4499  05E4  3AFF               	xorlw	-1
  4500  05E5  1903               	btfsc	3,2
  4501  05E6  2CAB               	goto	l2225
  4502                           
  4503                           ;doprnt.c: 1487: {
  4504                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  4505  05E7  300A               	movlw	10
  4506  05E8  00A7               	movwf	___lwmod@divisor
  4507  05E9  3000               	movlw	0
  4508  05EA  00A8               	movwf	___lwmod@divisor+1
  4509  05EB  083C               	movf	printf@prec,w
  4510  05EC  00B8               	movwf	??_printf
  4511  05ED  0738               	addwf	??_printf,w
  4512  05EE  3E0D               	addlw	low (_dpowers-__stringbase)
  4513  05EF  0084               	movwf	4
  4514  05F0  118A  208F  118A   	fcall	stringdir
  4515  05F3  00A0               	movwf	___lwdiv@divisor
  4516  05F4  118A  208F  118A   	fcall	stringdir
  4517  05F7  00A1               	movwf	___lwdiv@divisor+1
  4518  05F8  083E               	movf	printf@_val+1,w
  4519  05F9  01A3               	clrf	___lwdiv@dividend+1
  4520  05FA  07A3               	addwf	___lwdiv@dividend+1,f
  4521  05FB  083D               	movf	printf@_val,w
  4522  05FC  01A2               	clrf	___lwdiv@dividend
  4523  05FD  07A2               	addwf	___lwdiv@dividend,f
  4524  05FE  158A  25ED  118A   	fcall	___lwdiv
  4525  0601  1283               	bcf	3,5	;RP0=0, select bank0
  4526  0602  1303               	bcf	3,6	;RP1=0, select bank0
  4527  0603  0821               	movf	?___lwdiv+1,w
  4528  0604  01AA               	clrf	___lwmod@dividend+1
  4529  0605  07AA               	addwf	___lwmod@dividend+1,f
  4530  0606  0820               	movf	?___lwdiv,w
  4531  0607  01A9               	clrf	___lwmod@dividend
  4532  0608  07A9               	addwf	___lwmod@dividend,f
  4533  0609  158A  2541  118A   	fcall	___lwmod
  4534  060C  1283               	bcf	3,5	;RP0=0, select bank0
  4535  060D  1303               	bcf	3,6	;RP1=0, select bank0
  4536  060E  0827               	movf	?___lwmod,w
  4537  060F  3E30               	addlw	48
  4538  0610  00B9               	movwf	??_printf+1
  4539  0611  0839               	movf	??_printf+1,w
  4540  0612  00C5               	movwf	printf@c
  4541                           
  4542                           ;doprnt.c: 1532: }
  4543                           ;doprnt.c: 1533: (putch(c) );
  4544  0613  0845               	movf	printf@c,w
  4545  0614  158A  247F  118A   	fcall	_putch
  4546  0617  2DDD               	goto	l2223
  4547  0618                     l273:	
  4548                           ;doprnt.c: 1549: return 0;
  4549                           ;	Return value of _printf is never used
  4550                           
  4551                           ;doprnt.c: 1534: }
  4552                           ;doprnt.c: 1542: }
  4553                           ;doprnt.c: 1544: alldone:
  4554                           
  4555  0618  0008               	return
  4556  0619                     __end_of_printf:	
  4557                           
  4558                           	psect	text18
  4559  0C7F                     __ptext18:	
  4560 ;; *************** function _putch *****************
  4561 ;; Defined at:
  4562 ;;		line 103 in file "main.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  data            1    wreg     unsigned char 
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  data            1    4[COMMON] unsigned char 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;		None               void
  4569 ;; Registers used:
  4570 ;;		wreg
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4576 ;;      Params:         0       0       0       0       0
  4577 ;;      Locals:         1       0       0       0       0
  4578 ;;      Temps:          0       0       0       0       0
  4579 ;;      Totals:         1       0       0       0       0
  4580 ;;Total ram usage:        1 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; Hardware stack levels required when called:    2
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		_printf
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           
  4591                           ;psect for function _putch
  4592  0C7F                     _putch:	
  4593                           
  4594                           ;incstack = 0
  4595                           ; Regs used in _putch: [wreg]
  4596                           ;putch@data stored from wreg
  4597  0C7F  00F4               	movwf	putch@data
  4598                           
  4599                           ;main.c: 105: TXSTA = 0x26;
  4600  0C80  3026               	movlw	38
  4601  0C81  1683               	bsf	3,5	;RP0=1, select bank1
  4602  0C82  1303               	bcf	3,6	;RP1=0, select bank1
  4603  0C83  0098               	movwf	24	;volatile
  4604                           
  4605                           ;main.c: 106: RCSTAbits.SPEN = 1;
  4606  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  4607  0C85  1303               	bcf	3,6	;RP1=0, select bank0
  4608  0C86  1798               	bsf	24,7	;volatile
  4609                           
  4610                           ;main.c: 108: TXREG = data;
  4611  0C87  0874               	movf	putch@data,w
  4612  0C88  0099               	movwf	25	;volatile
  4613  0C89                     l50:	
  4614                           ;main.c: 109: while (!(PIR1bits.TXIF));
  4615                           
  4616  0C89  1A0C               	btfsc	12,4	;volatile
  4617  0C8A  0008               	return
  4618  0C8B  2C89               	goto	l50
  4619  0C8C                     __end_of_putch:	
  4620                           
  4621                           	psect	text19
  4622  0C8C                     __ptext19:	
  4623 ;; *************** function _isdigit *****************
  4624 ;; Defined at:
  4625 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  c               1    wreg     unsigned char 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  c               1    5[COMMON] unsigned char 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;		None               void
  4632 ;; Registers used:
  4633 ;;		wreg, status,2, status,0
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4639 ;;      Params:         0       0       0       0       0
  4640 ;;      Locals:         2       0       0       0       0
  4641 ;;      Temps:          0       0       0       0       0
  4642 ;;      Totals:         2       0       0       0       0
  4643 ;;Total ram usage:        2 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; Hardware stack levels required when called:    2
  4646 ;; This function calls:
  4647 ;;		Nothing
  4648 ;; This function is called by:
  4649 ;;		_printf
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           
  4654                           ;psect for function _isdigit
  4655  0C8C                     _isdigit:	
  4656                           
  4657                           ;incstack = 0
  4658                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4659                           ;isdigit@c stored from wreg
  4660  0C8C  00F5               	movwf	isdigit@c
  4661  0C8D  01F4               	clrf	_isdigit$598
  4662  0C8E  303A               	movlw	58
  4663  0C8F  0275               	subwf	isdigit@c,w
  4664  0C90  1803               	skipnc
  4665  0C91  2C98               	goto	l2021
  4666  0C92  3030               	movlw	48
  4667  0C93  0275               	subwf	isdigit@c,w
  4668  0C94  1C03               	skipc
  4669  0C95  2C98               	goto	l2021
  4670  0C96  01F4               	clrf	_isdigit$598
  4671  0C97  0AF4               	incf	_isdigit$598,f
  4672  0C98                     l2021:	
  4673  0C98  0C74               	rrf	_isdigit$598,w
  4674  0C99  0008               	return
  4675  0C9A                     __end_of_isdigit:	
  4676                           
  4677                           	psect	text20
  4678  0CF5                     __ptext20:	
  4679 ;; *************** function ___wmul *****************
  4680 ;; Defined at:
  4681 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4684 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  product         2    4[COMMON] unsigned int 
  4687 ;; Return value:  Size  Location     Type
  4688 ;;                  2    0[BANK0 ] unsigned int 
  4689 ;; Registers used:
  4690 ;;		wreg, status,2, status,0
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4696 ;;      Params:         0       4       0       0       0
  4697 ;;      Locals:         2       0       0       0       0
  4698 ;;      Temps:          0       0       0       0       0
  4699 ;;      Totals:         2       4       0       0       0
  4700 ;;Total ram usage:        6 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; Hardware stack levels required when called:    2
  4703 ;; This function calls:
  4704 ;;		Nothing
  4705 ;; This function is called by:
  4706 ;;		_printf
  4707 ;; This function uses a non-reentrant model
  4708 ;;
  4709                           
  4710                           
  4711                           ;psect for function ___wmul
  4712  0CF5                     ___wmul:	
  4713                           
  4714                           ;incstack = 0
  4715                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4716  0CF5  01F4               	clrf	___wmul@product
  4717  0CF6  01F5               	clrf	___wmul@product+1
  4718  0CF7                     l2027:	
  4719  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  4720  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  4721  0CF9  1C20               	btfss	___wmul@multiplier,0
  4722  0CFA  2D01               	goto	l357
  4723  0CFB  0822               	movf	___wmul@multiplicand,w
  4724  0CFC  07F4               	addwf	___wmul@product,f
  4725  0CFD  1803               	skipnc
  4726  0CFE  0AF5               	incf	___wmul@product+1,f
  4727  0CFF  0823               	movf	___wmul@multiplicand+1,w
  4728  0D00  07F5               	addwf	___wmul@product+1,f
  4729  0D01                     l357:	
  4730  0D01  3001               	movlw	1
  4731  0D02                     u2345:	
  4732  0D02  1003               	clrc
  4733  0D03  0DA2               	rlf	___wmul@multiplicand,f
  4734  0D04  0DA3               	rlf	___wmul@multiplicand+1,f
  4735  0D05  3EFF               	addlw	-1
  4736  0D06  1D03               	skipz
  4737  0D07  2D02               	goto	u2345
  4738  0D08  3001               	movlw	1
  4739  0D09                     u2355:	
  4740  0D09  1003               	clrc
  4741  0D0A  0CA1               	rrf	___wmul@multiplier+1,f
  4742  0D0B  0CA0               	rrf	___wmul@multiplier,f
  4743  0D0C  3EFF               	addlw	-1
  4744  0D0D  1D03               	skipz
  4745  0D0E  2D09               	goto	u2355
  4746  0D0F  0821               	movf	___wmul@multiplier+1,w
  4747  0D10  0420               	iorwf	___wmul@multiplier,w
  4748  0D11  1D03               	skipz
  4749  0D12  2CF7               	goto	l2027
  4750  0D13  0875               	movf	___wmul@product+1,w
  4751  0D14  01A1               	clrf	?___wmul+1
  4752  0D15  07A1               	addwf	?___wmul+1,f
  4753  0D16  0874               	movf	___wmul@product,w
  4754  0D17  01A0               	clrf	?___wmul
  4755  0D18  07A0               	addwf	?___wmul,f
  4756  0D19  0008               	return
  4757  0D1A                     __end_of___wmul:	
  4758                           
  4759                           	psect	text21
  4760  0D41                     __ptext21:	
  4761 ;; *************** function ___lwmod *****************
  4762 ;; Defined at:
  4763 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  divisor         2    7[BANK0 ] unsigned int 
  4766 ;;  dividend        2    9[BANK0 ] unsigned int 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  counter         1   11[BANK0 ] unsigned char 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  2    7[BANK0 ] unsigned int 
  4771 ;; Registers used:
  4772 ;;		wreg, status,2, status,0
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4778 ;;      Params:         0       4       0       0       0
  4779 ;;      Locals:         0       1       0       0       0
  4780 ;;      Temps:          1       0       0       0       0
  4781 ;;      Totals:         1       5       0       0       0
  4782 ;;Total ram usage:        6 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:    2
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_time_is_leap
  4789 ;;		_printf
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           
  4794                           ;psect for function ___lwmod
  4795  0D41                     ___lwmod:	
  4796                           
  4797                           ;incstack = 0
  4798                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4799  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4800  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4801  0D43  0828               	movf	___lwmod@divisor+1,w
  4802  0D44  0427               	iorwf	___lwmod@divisor,w
  4803  0D45  1903               	skipnz
  4804  0D46  2D70               	goto	l1829
  4805  0D47  01AB               	clrf	___lwmod@counter
  4806  0D48  0AAB               	incf	___lwmod@counter,f
  4807  0D49                     l1819:	
  4808  0D49  1BA8               	btfsc	___lwmod@divisor+1,7
  4809  0D4A  2D57               	goto	l1821
  4810  0D4B  3001               	movlw	1
  4811  0D4C                     u1905:	
  4812  0D4C  1003               	clrc
  4813  0D4D  0DA7               	rlf	___lwmod@divisor,f
  4814  0D4E  0DA8               	rlf	___lwmod@divisor+1,f
  4815  0D4F  3EFF               	addlw	-1
  4816  0D50  1D03               	skipz
  4817  0D51  2D4C               	goto	u1905
  4818  0D52  3001               	movlw	1
  4819  0D53  00F5               	movwf	??___lwmod
  4820  0D54  0875               	movf	??___lwmod,w
  4821  0D55  07AB               	addwf	___lwmod@counter,f
  4822  0D56  2D49               	goto	l1819
  4823  0D57                     l1821:	
  4824  0D57  0828               	movf	___lwmod@divisor+1,w
  4825  0D58  022A               	subwf	___lwmod@dividend+1,w
  4826  0D59  1D03               	skipz
  4827  0D5A  2D5D               	goto	u1925
  4828  0D5B  0827               	movf	___lwmod@divisor,w
  4829  0D5C  0229               	subwf	___lwmod@dividend,w
  4830  0D5D                     u1925:	
  4831  0D5D  1C03               	skipc
  4832  0D5E  2D65               	goto	l1825
  4833  0D5F  0827               	movf	___lwmod@divisor,w
  4834  0D60  02A9               	subwf	___lwmod@dividend,f
  4835  0D61  0828               	movf	___lwmod@divisor+1,w
  4836  0D62  1C03               	skipc
  4837  0D63  03AA               	decf	___lwmod@dividend+1,f
  4838  0D64  02AA               	subwf	___lwmod@dividend+1,f
  4839  0D65                     l1825:	
  4840  0D65  3001               	movlw	1
  4841  0D66                     u1935:	
  4842  0D66  1003               	clrc
  4843  0D67  0CA8               	rrf	___lwmod@divisor+1,f
  4844  0D68  0CA7               	rrf	___lwmod@divisor,f
  4845  0D69  3EFF               	addlw	-1
  4846  0D6A  1D03               	skipz
  4847  0D6B  2D66               	goto	u1935
  4848  0D6C  3001               	movlw	1
  4849  0D6D  02AB               	subwf	___lwmod@counter,f
  4850  0D6E  1D03               	btfss	3,2
  4851  0D6F  2D57               	goto	l1821
  4852  0D70                     l1829:	
  4853  0D70  082A               	movf	___lwmod@dividend+1,w
  4854  0D71  01A8               	clrf	?___lwmod+1
  4855  0D72  07A8               	addwf	?___lwmod+1,f
  4856  0D73  0829               	movf	___lwmod@dividend,w
  4857  0D74  01A7               	clrf	?___lwmod
  4858  0D75  07A7               	addwf	?___lwmod,f
  4859  0D76  0008               	return
  4860  0D77                     __end_of___lwmod:	
  4861                           
  4862                           	psect	text22
  4863  0DED                     __ptext22:	
  4864 ;; *************** function ___lwdiv *****************
  4865 ;; Defined at:
  4866 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  divisor         2    0[BANK0 ] unsigned int 
  4869 ;;  dividend        2    2[BANK0 ] unsigned int 
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  quotient        2    5[BANK0 ] unsigned int 
  4872 ;;  counter         1    4[BANK0 ] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  2    0[BANK0 ] unsigned int 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2, status,0
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4882 ;;      Params:         0       4       0       0       0
  4883 ;;      Locals:         0       3       0       0       0
  4884 ;;      Temps:          1       0       0       0       0
  4885 ;;      Totals:         1       7       0       0       0
  4886 ;;Total ram usage:        8 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    2
  4889 ;; This function calls:
  4890 ;;		Nothing
  4891 ;; This function is called by:
  4892 ;;		_printf
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function ___lwdiv
  4898  0DED                     ___lwdiv:	
  4899                           
  4900                           ;incstack = 0
  4901                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4902  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  4903  0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  4904  0DEF  01A5               	clrf	___lwdiv@quotient
  4905  0DF0  01A6               	clrf	___lwdiv@quotient+1
  4906  0DF1  0821               	movf	___lwdiv@divisor+1,w
  4907  0DF2  0420               	iorwf	___lwdiv@divisor,w
  4908  0DF3  1903               	skipnz
  4909  0DF4  2E26               	goto	l2073
  4910  0DF5  01A4               	clrf	___lwdiv@counter
  4911  0DF6  0AA4               	incf	___lwdiv@counter,f
  4912  0DF7                     l2061:	
  4913  0DF7  1BA1               	btfsc	___lwdiv@divisor+1,7
  4914  0DF8  2E05               	goto	l2063
  4915  0DF9  3001               	movlw	1
  4916  0DFA                     u2435:	
  4917  0DFA  1003               	clrc
  4918  0DFB  0DA0               	rlf	___lwdiv@divisor,f
  4919  0DFC  0DA1               	rlf	___lwdiv@divisor+1,f
  4920  0DFD  3EFF               	addlw	-1
  4921  0DFE  1D03               	skipz
  4922  0DFF  2DFA               	goto	u2435
  4923  0E00  3001               	movlw	1
  4924  0E01  00F4               	movwf	??___lwdiv
  4925  0E02  0874               	movf	??___lwdiv,w
  4926  0E03  07A4               	addwf	___lwdiv@counter,f
  4927  0E04  2DF7               	goto	l2061
  4928  0E05                     l2063:	
  4929  0E05  3001               	movlw	1
  4930  0E06                     u2455:	
  4931  0E06  1003               	clrc
  4932  0E07  0DA5               	rlf	___lwdiv@quotient,f
  4933  0E08  0DA6               	rlf	___lwdiv@quotient+1,f
  4934  0E09  3EFF               	addlw	-1
  4935  0E0A  1D03               	skipz
  4936  0E0B  2E06               	goto	u2455
  4937  0E0C  0821               	movf	___lwdiv@divisor+1,w
  4938  0E0D  0223               	subwf	___lwdiv@dividend+1,w
  4939  0E0E  1D03               	skipz
  4940  0E0F  2E12               	goto	u2465
  4941  0E10  0820               	movf	___lwdiv@divisor,w
  4942  0E11  0222               	subwf	___lwdiv@dividend,w
  4943  0E12                     u2465:	
  4944  0E12  1C03               	skipc
  4945  0E13  2E1B               	goto	l2069
  4946  0E14  0820               	movf	___lwdiv@divisor,w
  4947  0E15  02A2               	subwf	___lwdiv@dividend,f
  4948  0E16  0821               	movf	___lwdiv@divisor+1,w
  4949  0E17  1C03               	skipc
  4950  0E18  03A3               	decf	___lwdiv@dividend+1,f
  4951  0E19  02A3               	subwf	___lwdiv@dividend+1,f
  4952  0E1A  1425               	bsf	___lwdiv@quotient,0
  4953  0E1B                     l2069:	
  4954  0E1B  3001               	movlw	1
  4955  0E1C                     u2475:	
  4956  0E1C  1003               	clrc
  4957  0E1D  0CA1               	rrf	___lwdiv@divisor+1,f
  4958  0E1E  0CA0               	rrf	___lwdiv@divisor,f
  4959  0E1F  3EFF               	addlw	-1
  4960  0E20  1D03               	skipz
  4961  0E21  2E1C               	goto	u2475
  4962  0E22  3001               	movlw	1
  4963  0E23  02A4               	subwf	___lwdiv@counter,f
  4964  0E24  1D03               	btfss	3,2
  4965  0E25  2E05               	goto	l2063
  4966  0E26                     l2073:	
  4967  0E26  0826               	movf	___lwdiv@quotient+1,w
  4968  0E27  01A1               	clrf	?___lwdiv+1
  4969  0E28  07A1               	addwf	?___lwdiv+1,f
  4970  0E29  0825               	movf	___lwdiv@quotient,w
  4971  0E2A  01A0               	clrf	?___lwdiv
  4972  0E2B  07A0               	addwf	?___lwdiv,f
  4973  0E2C  0008               	return
  4974  0E2D                     __end_of___lwdiv:	
  4975                           
  4976                           	psect	text23
  4977  0C9A                     __ptext23:	
  4978 ;; *************** function _isr *****************
  4979 ;; Defined at:
  4980 ;;		line 116 in file "main.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;		None               void
  4987 ;; Registers used:
  4988 ;;		wreg, status,2, status,0, pclath, cstack
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4994 ;;      Params:         0       0       0       0       0
  4995 ;;      Locals:         0       0       0       0       0
  4996 ;;      Temps:          4       0       0       0       0
  4997 ;;      Totals:         4       0       0       0       0
  4998 ;;Total ram usage:        4 bytes
  4999 ;; Hardware stack levels used:    1
  5000 ;; Hardware stack levels required when called:    1
  5001 ;; This function calls:
  5002 ;;		_tick_update
  5003 ;; This function is called by:
  5004 ;;		Interrupt level 1
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           
  5009                           ;psect for function _isr
  5010  0C9A                     _isr:	
  5011                           
  5012                           ;main.c: 119: tick_update();
  5013  0C9A  158A  24DD  158A   	fcall	_tick_update
  5014  0C9D  0873               	movf	??_isr+3,w
  5015  0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  5016  0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  5017  0CA0  00FF               	movwf	127
  5018  0CA1  0872               	movf	??_isr+2,w
  5019  0CA2  008A               	movwf	10
  5020  0CA3  0871               	movf	??_isr+1,w
  5021  0CA4  0084               	movwf	4
  5022  0CA5  0E70               	swapf	??_isr^(0+-128),w
  5023  0CA6  0083               	movwf	3
  5024  0CA7  0EFE               	swapf	126,f
  5025  0CA8  0E7E               	swapf	126,w
  5026  0CA9  0009               	retfie
  5027  0CAA                     __end_of_isr:	
  5028                           
  5029                           	psect	intentry
  5030  0004                     __pintentry:	
  5031                           ;incstack = 0
  5032                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  5033                           
  5034  0004                     interrupt_function:	
  5035  007E                     saved_w	set	btemp
  5036  0004  00FE               	movwf	btemp
  5037  0005  0E03               	swapf	3,w
  5038  0006  00F0               	movwf	??_isr
  5039  0007  0804               	movf	4,w
  5040  0008  00F1               	movwf	??_isr+1
  5041  0009  080A               	movf	10,w
  5042  000A  00F2               	movwf	??_isr+2
  5043  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5044  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5045  000D  087F               	movf	btemp+1,w
  5046  000E  00F3               	movwf	??_isr+3
  5047  000F  158A  2C9A         	ljmp	_isr
  5048                           
  5049                           	psect	text24
  5050  0CDD                     __ptext24:	
  5051 ;; *************** function _tick_update *****************
  5052 ;; Defined at:
  5053 ;;		line 50 in file "../Tick/Tick-PIC16.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;		None
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;		None
  5058 ;; Return value:  Size  Location     Type
  5059 ;;		None               void
  5060 ;; Registers used:
  5061 ;;		wreg
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5067 ;;      Params:         0       0       0       0       0
  5068 ;;      Locals:         0       0       0       0       0
  5069 ;;      Temps:          0       0       0       0       0
  5070 ;;      Totals:         0       0       0       0       0
  5071 ;;Total ram usage:        0 bytes
  5072 ;; Hardware stack levels used:    1
  5073 ;; This function calls:
  5074 ;;		Nothing
  5075 ;; This function is called by:
  5076 ;;		_isr
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           
  5081                           ;psect for function _tick_update
  5082  0CDD                     _tick_update:	
  5083                           
  5084                           ;Tick-PIC16.c: 52: if (PIR1bits.TMR1IF) {
  5085                           
  5086                           ;incstack = 0
  5087                           ; Regs used in _tick_update: [wreg]
  5088  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  5089  0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  5090  0CDF  1C0C               	btfss	12,0	;volatile
  5091  0CE0  0008               	return
  5092                           
  5093                           ;Tick-PIC16.c: 53: tickcnt++;
  5094  0CE1  3001               	movlw	1
  5095  0CE2  1683               	bsf	3,5	;RP0=1, select bank1
  5096  0CE3  1303               	bcf	3,6	;RP1=0, select bank1
  5097  0CE4  07AA               	addwf	_tickcnt^(0+128),f	;volatile
  5098  0CE5  3000               	movlw	0
  5099  0CE6  1803               	skipnc
  5100  0CE7  3001               	movlw	1
  5101  0CE8  07AB               	addwf	(_tickcnt+1)^(0+128),f	;volatile
  5102  0CE9  3000               	movlw	0
  5103  0CEA  1803               	skipnc
  5104  0CEB  3001               	movlw	1
  5105  0CEC  07AC               	addwf	(_tickcnt+2)^(0+128),f	;volatile
  5106  0CED  3000               	movlw	0
  5107  0CEE  1803               	skipnc
  5108  0CEF  3001               	movlw	1
  5109  0CF0  07AD               	addwf	(_tickcnt+3)^(0+128),f	;volatile
  5110                           
  5111                           ;Tick-PIC16.c: 54: PIR1bits.TMR1IF = 0;
  5112  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  5113  0CF2  1303               	bcf	3,6	;RP1=0, select bank0
  5114  0CF3  100C               	bcf	12,0	;volatile
  5115  0CF4  0008               	return
  5116  0CF5                     __end_of_tick_update:	
  5117  0002                     
  5118                           	psect	functab
  5119  0100                     __pfunctab:	
  5120  0100                     __fptable:	
  5121  0100                     fptable:	
  5122  0100  00FF               	movwf	(btemp+1)& (0+127)
  5123  0101  3001               	movlw	high fptable
  5124  0102  008A               	movwf	10
  5125  0103  087F               	movf	(btemp+1)& (0+127),w
  5126  0104  0782               	addwf	2,f
  5127  0105                     fpbase:	
  5128  0105  2905               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  5129  0106                     fp__time_provider:	
  5130  0106  118A  2FE2         	ljmp	_time_provider
  5131  0108                     __end_of__fptable:	
  5132  007E                     btemp	set	126	;btemp
  5133  007E                     wtemp	set	126
  5134  007E                     wtemp0	set	126
  5135  0080                     wtemp1	set	128
  5136  0082                     wtemp2	set	130
  5137  0084                     wtemp3	set	132
  5138  0086                     wtemp4	set	134
  5139  0088                     wtemp5	set	136
  5140  007F                     wtemp6	set	127
  5141  007E                     ttemp	set	126
  5142  007E                     ttemp0	set	126
  5143  0081                     ttemp1	set	129
  5144  0084                     ttemp2	set	132
  5145  0087                     ttemp3	set	135
  5146  007F                     ttemp4	set	127
  5147  007E                     ltemp	set	126
  5148  007E                     ltemp0	set	126
  5149  0082                     ltemp1	set	130
  5150  0086                     ltemp2	set	134
  5151  0080                     ltemp3	set	128


Data Sizes:
    Strings     67
    Constant    22
    Data        4
    BSS         22
    Persistent  17
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     66      68
    BANK1            80     15      52
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 44
		 -> STR_2(CODE[44]), STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    S401$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    time_set_provider@callback	PTR FTN()unsigned long  size(1) Largest target is 4
		 -> time_provider(), 

    time_break@timeinfo	PTR struct tm_t size(1) Largest target is 7
		 -> telements(BANK1[7]), main@tinfo(BANK1[7]), 

    time_make@timeinfo	PTR struct tm_t size(1) Largest target is 7
		 -> main@tinfo(BANK1[7]), 

    time_provider_callback	PTR FTN()unsigned long  size(1) Largest target is 4
		 -> Absolute function(), time_provider(), 


Critical Paths under _main in COMMON

    _main->_time_set_provider
    _time_break->___llmod
    _tick_get->_tick_read_internal
    _time_is_leap->___lwmod
    _printf->___lwmod
    _printf->___wmul
    _printf->_isdigit
    ___lwmod->___lwdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _time_set_provider->_time_get
    _time_minute->_time_minute_t
    _time_minute_t->_time_update
    _time_update->_time_break
    _time_break->_time_is_leap
    _time_get->_time_set
    _time_set->_tick_get
    _time_make->_time_is_leap
    _time_is_leap->___lwmod
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0   14912
                                             54 BANK0     12    12      0
                                              0 BANK1     15    15      0
                             _printf
                           _tick_get
                          _tick_init
                         _time_break
                           _time_get
                          _time_make
                        _time_minute
                           _time_set
                  _time_set_provider
 ---------------------------------------------------------------------------------
 (1) _time_set_provider                                    6     2      4     449
                                              5 COMMON     1     1      0
                                             24 BANK0      5     1      4
                           _time_get
 ---------------------------------------------------------------------------------
 (1) _time_minute                                          0     0      0    4713
                           _time_get
                      _time_minute_t
 ---------------------------------------------------------------------------------
 (2) _time_minute_t                                        4     0      4    4453
                                             50 BANK0      4     0      4
                           _time_get (ARG)
                        _time_update
 ---------------------------------------------------------------------------------
 (3) _time_update                                          5     1      4    4357
                                             45 BANK0      5     1      4
                         _time_break
 ---------------------------------------------------------------------------------
 (4) _time_break                                          28    23      5    3809
                                             17 BANK0     28    23      5
                            ___lldiv
                            ___llmod
                       _time_is_leap
 ---------------------------------------------------------------------------------
 (5) ___llmod                                             10     2      8     752
                                              4 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     631
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _time_get                                            12     8      4     260
                                             12 BANK0     12     8      4
                   Absolute function *
                           _tick_get
                      _time_provider *
                           _time_set
 ---------------------------------------------------------------------------------
 (3) _time_set                                             8     4      4     192
                                              4 BANK0      8     4      4
                           _tick_get
 ---------------------------------------------------------------------------------
 (4) _tick_get                                             4     0      4       0
                                              0 BANK0      4     0      4
                 _tick_read_internal
 ---------------------------------------------------------------------------------
 (5) _tick_read_internal                                   1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _time_provider                                        4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _time_make                                           15    11      4    2363
                                             17 BANK0     15    11      4
                             ___lmul
                       _time_is_leap
 ---------------------------------------------------------------------------------
 (5) _time_is_leap                                         5     3      2    1077
                                             12 BANK0      5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     786
                                              4 COMMON     1     1      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _tick_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              26    14     12    2538
                                             12 BANK0     26    14     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     266
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     622
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     371
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
                        _tick_update
 ---------------------------------------------------------------------------------
 (8) _tick_update                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
   _tick_get
     _tick_read_internal
   _tick_init
   _time_break
     ___lldiv
     ___llmod
     _time_is_leap
       ___lwmod
         ___lwdiv (ARG)
   _time_get
     Absolute function(Fake) *
     _tick_get *
       _tick_read_internal
     _time_provider *
     _time_set *
       _tick_get
         _tick_read_internal
   _time_make
     ___lmul
     _time_is_leap
       ___lwmod
         ___lwdiv (ARG)
   _time_minute
     _time_get
       Absolute function(Fake) *
       _tick_get *
         _tick_read_internal
       _time_provider *
       _time_set *
         _tick_get
           _tick_read_internal
     _time_minute_t
       _time_get (ARG)
         Absolute function(Fake) *
         _tick_get *
           _tick_read_internal
         _time_provider *
         _time_set *
           _tick_get
             _tick_read_internal
       _time_update (ARG)
         _time_break
           ___lldiv
           ___llmod
           _time_is_leap
             ___lwmod
               ___lwdiv (ARG)
   _time_set
     _tick_get
       _tick_read_internal
   _time_set_provider
     _time_get
       Absolute function(Fake) *
       _tick_get *
         _tick_read_internal
       _time_provider *
       _time_set *
         _tick_get
           _tick_read_internal

 _isr (ROOT)
   _tick_update

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      F      34       7       65.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     42      44       5       85.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      82      12        0.0%
ABS                  0      0      82       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Dec 17 22:35:15 2014

                          pc 0002                  __CFG_CP$OFF 0000                           l50 0C89  
                         fsr 0004          ___wmul@multiplicand 0022                          l218 0D1A  
                        l147 0369                          l238 04CA                          l256 057B  
                        l273 0618                          l357 0D01                 __CFG_CPD$OFF 0000  
            ??_time_minute_t 0076                          _isr 0C9A                          fsr0 0004  
                        indf 0000                 __CFG_FOSC$XT 0000                 __CFG_LVP$OFF 0000  
            ??_time_provider 0074                         l2021 0C98                         l2111 0376  
                       l2201 05A8                         l2113 03E9                         l2027 0CF7  
                       l2043 0E4D                         l2107 03AE                         l2061 0DF7  
                       l2213 05CF                         l2063 0E05                         l2223 05DD  
                       l2207 05BB                         l2151 04E6                         l2039 0E37  
                       l2073 0E26                         l2209 05BF                         l2217 05D7  
                       l2161 051C                         l2145 04CF                         l2225 04AB  
                       l2129 0DD8                         l2163 0531                         l2147 04D8  
                       l2139 04C4                         l2069 0E1B                         l2173 054A  
                       l2193 059A                         l2185 056D                         l2177 0550  
                       l2097 0339                         l2195 059E                         l2099 0370  
                       l1821 0D57                         l1825 0D65                         l1921 0200  
                       l2297 0696                         l1819 0D49                         l1843 0DAA  
                       l1923 0204                         l1829 0D70                         l1839 0D98  
                       l1871 0086                         l1935 0267                         l1927 0216  
                       l1857 0041                         l1881 0EC1                         l1961 02F4  
                       l1953 02BB                         l1867 0079                         l1859 0051  
                       l1883 0ED1                         l1891 0EFC                         l1955 02BD  
                       l1947 02A5                         l1965 02FC                         l1991 0F46  
                       l1887 0EEF                         l1995 0F91                         l1997 0FB1  
                       ?_isr 0070                         STR_1 00D7                         STR_2 00AB  
                       u2005 0045                         u2120 01D5                         u2025 0053  
                       u2105 0EF0                         u2121 01D6                         u2122 01DB  
                       u2035 0068                         u2123 01DC                         u2045 007A  
                       u2215 02D9                         u2225 02E7                         u2226 02E8  
                       u2170 0288                         u2075 0EC5                         u2227 02ED  
                       u2155 024B                         u2228 02EE                         u2405 0E57  
                       u2229 02F3                         u2245 0E8C                         u2255 0F1F  
                       u2095 0EDF                         u2175 027B                         u2280 0FDC  
                       u2176 027C                         u2345 0D02                         u2505 0346  
                       u2281 0FDD                         u2177 0281                         u2282 0FE2  
                       u2178 0282                         u2435 0DFA                         u2355 0D09  
                       u2283 0FE3                         u2179 0287                         u2455 0E06  
                       u2295 0FF5                         u2800 06C1                         u2465 0E12  
                       u1905 0D4C                         u2705 058A                         u2545 0383  
                       u2801 06C2                         u2802 06C7                         u2475 0E1C  
                       u2395 0E4F                         u2803 06C8                         u1925 0D5D  
                       u1935 0D66                         u2815 06DA                         u2665 0563  
               __CFG_WRT$OFF 0000                         _main 0619                         btemp 007E  
          time_minute_t@time 0052                         ltemp 007E                         start 0011  
                       ttemp 007E                         wtemp 007E                __CFG_IESO$OFF 0000  
              __CFG_MCLRE$ON 0000                        ??_isr 0070                        ?_main 0070  
              __CFG_WDTE$OFF 0000                        _ANSEL 009B              __end_of___lldiv 008F  
                      _T1CON 0010              __end_of___llmod 0F05              __end_of___lwdiv 0E2D  
            __end_of___lwmod 0D77                        _TMR1H 000F                        _TMR1L 000E  
                      _TRISA 0085                        _TRISB 0086                        _TXREG 0019  
                      _TXSTA 0098               __CFG_CCPMX$RB0 0000          ___lmul@multiplicand 0024  
             __CFG_FCMEN$OFF 0000              __end_of_dpowers 00AB              __end_of_isdigit 0C9A  
                      _putch 0C7F                        fpbase 0105  __size_of_tick_read_internal 0027  
             __CFG_BOREN$OFF 0000                        pclath 000A                        ltemp0 007E  
                      ltemp1 0082                        ltemp2 0086                        ltemp3 0080  
                      ttemp0 007E                        ttemp1 0081                        ttemp2 0084  
                      ttemp3 0087                        ttemp4 007F                        status 0003  
                      wtemp0 007E                        wtemp1 0080                        wtemp2 0082  
                      wtemp3 0084                        wtemp4 0086                        wtemp5 0088  
                      wtemp6 007F              __initialization 0013                 __end_of_main 0776  
                     ??_main 0056             ___llmod@dividend 0024                       ?_putch 0070  
           __end_of__fptable 0108               __CFG_PWRTE$OFF 0000                 ?_tick_update 0070  
                     ___lmul 0E2D                       ___wmul 0CF5                    ??___lldiv 0074  
                  ??___llmod 0074                    ??___lwdiv 0074                    ??___lwmod 0075  
                     _tcache 00A6                       _printf 04A4                       fptable 0100  
               ?_time_minute 0070             __end_of_tick_get 0CDD                       fptotal 0002  
                  ??_isdigit 0074                 ?_time_update 004D             __end_of_time_get 1000  
           __end_of_time_set 07E2                       saved_w 007E        time_break@monthLength 0046  
    __end_of__initialization 002C               __pcstackCOMMON 0070                 __pidataBANK1 07FB  
              __end_of_putch 0C8C                _sync_interval 00D0                      ??_putch 0074  
                 __pbssBANK0 0063                   __pbssBANK1 00A0                   __pnvCOMMON 0076  
                 __pmaintext 0619    time_set_provider@callback 003C                      ?___lmul 0020  
                    ?___wmul 0020                   __pintentry 0004               ___lmul@product 0028  
         __size_of_tick_init 0010                      ?_printf 002C           __size_of_time_make 0196  
           time_is_leap@year 002C        __end_of_time_minute_t 0CCA                   __stringtab 008F  
      __end_of_time_provider 07FB    time_set_provider@timespan 0038                    ?_tick_get 0020  
                  ?_time_get 002C                    ?_time_set 0024              __size_of___lmul 0041  
       __size_of_tick_update 0018                      ___lldiv 002F              __size_of___wmul 0025  
                    ___llmod 0EB7                      ___lwdiv 0DED                      ___lwmod 0D41  
         time_break@timeinfo 0035                      __ptext1 0DB2                      __ptext2 00EE  
                    __ptext3 0CBA                      __ptext4 0E6E                      __ptext5 0108  
                    __ptext6 0EB7                      __ptext7 002F                      __ptext8 0F05  
                    __ptext9 0776              __size_of_printf 0175                      _dpowers 00A1  
                    _isdigit 0C8C                 __size_of_isr 0010            time_make@timeinfo 003F  
                    _tickcnt 00AA         __size_of_time_minute 0010   __end_of_tick_read_internal 0D41  
       __size_of_time_update 0049                      clrloop0 0C78                      main@now 00B5  
                    _tstatus 0062         end_of_initialization 002C                ?_time_is_leap 002C  
          __end_of_tick_init 0CBA            __end_of_time_make 04A4              ___lldiv@divisor 0020  
            ___lldiv@counter 002C                   ??_tick_get 0075                   _tickbuffer 00A0  
                 ??_time_get 0030                    _RCSTAbits 0018                   ??_time_set 0028  
                    printf@c 0045                      printf@f 0042                  time_get@now 0034  
                 _time_break 0108            _time_set_provider 0DB2                  time_set@now 0024  
         ?_time_set_provider 0038          ??_time_set_provider 0075               ??_time_is_leap 002E  
                printf@width 0043    __end_of_time_set_provider 0DED               __end_of___lmul 0E6E  
             __end_of___wmul 0D1A              time_break@xTime 0049              time_break@month 0048  
             __end_of_printf 0619          start_initialization 0013                  __end_of_isr 0CAA  
            ___llmod@divisor 0020             _time_is_leap$218 0030              ___llmod@counter 0075  
                   ??___lmul 0074                     ??___wmul 0074               _time_break$282 003E  
             _time_break$283 0040                  ?_time_break 0031              time_make@tstamp 0039  
                __pdataBANK1 00D0                     ??_printf 0038         __end_of_month_length 00A1  
                  ___latbits 0001                __pcstackBANK0 0020                __pcstackBANK1 00B5  
        __end_of__stringdata 00EE            __size_of__fptable 0008                    __pnvBANK0 0062  
                  __pnvBANK1 00C4             ___lwdiv@dividend 0022                    __pfunctab 0100  
 __size_of_time_set_provider 003B                     ?___lldiv 0020            __size_of_tick_get 0013  
                   ?___llmod 0020                     ?___lwdiv 0020                     ?___lwmod 0027  
       __end_of_time_is_leap 0DB2            __size_of_time_get 00FB            __size_of_time_set 006C  
                  __pstrings 008F                     ?_isdigit 0070       _time_provider_callback 0063  
           ___lwdiv@quotient 0025               __size_of_putch 000D          __size_of_time_break 0206  
          interrupt_function 0004               ___wmul@product 0074                    clear_ram0 0C77  
                   _PIE1bits 008C           _tick_read_internal 0D1A                ??_tick_update 0070  
                  _tick_init 0CAA                     _PIR1bits 000C                    _telements 00AE  
     __size_of_time_minute_t 0010                   time_make@i 003D                    _time_make 030E  
        ?_tick_read_internal 0070       __size_of_time_provider 0019             fp__time_provider 0106  
                __stringbase 0094                  __stringdata 00AB            ___wmul@multiplier 0020  
              ??_time_minute 0076                   printf@_val 003D                   printf@flag 0041  
              ??_time_update 0051                   printf@prec 003C                    main@tinfo 00BD  
                  _sync_next 00CC               time_break@days 0042            ___lmul@multiplier 0020  
             time_break@year 0047         ??_tick_read_internal 0074                   ?_tick_init 0070  
                 ?_time_make 0031             __size_of___lldiv 0060             __size_of___llmod 004E  
           __size_of___lwdiv 0040             __size_of___lwmod 0036          __end_of_tick_update 0CF5  
                _last_update 00C8           __end_of__stringtab 0095                  _isdigit$598 0074  
        time_break@timeinput 0031                     __fptable 0100             __size_of_isdigit 000E  
            ___lwdiv@divisor 0020                _time_minute_t 0CBA              ___lwdiv@counter 0024  
                   __ptext10 0CCA                     __ptext11 0D1A                     __ptext20 0CF5  
                   __ptext12 07E2                     __ptext21 0D41                     __ptext13 030E  
                   __ptext22 0DED                     __ptext14 0D77                     __ptext23 0C9A  
                   __ptext15 0E2D                     __ptext24 0CDD                     __ptext16 0CAA  
                   __ptext17 04A4                     __ptext18 0C7F                     __ptext19 0C8C  
        __end_of_time_minute 00FE          __end_of_time_update 0EB7                _time_provider 07E2  
              __size_of_main 015D                     _initialt 00C4                 _month_length 0095  
      __size_of_time_is_leap 003B                     _tick_get 0CCA              time_update@time 004D  
                   _time_get 0F05                     _time_set 0776                 ??_time_break 0036  
                   main@last 00B9                     _sys_time 0076                    putch@data 0074  
                 _INTCONbits 000B               ?_time_minute_t 0052                     isdigit@c 0075  
                   intlevel1 0100                 _time_is_leap 0D77               ?_time_provider 0020  
         __end_of_time_break 030E             ___lwmod@dividend 0029             ___lldiv@dividend 0024  
                  stringcode 008F                  ??_tick_init 0074                  _tick_update 0CDD  
                ??_time_make 0035                     printf@ap 003B                  _time_minute 00EE  
           ___lldiv@quotient 0028              ___lwmod@divisor 0027                  _time_update 0E6E  
            ___lwmod@counter 002B                     stringdir 008F                     stringtab 008F  
